/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enigmafinal;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danushka nandalochan
 */
public class addsubject extends javax.swing.JFrame {

    String id;

    /**
     * Creates new form addsubject
     */
    public addsubject() {
        initComponents();
        setsubject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        streamsubject = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        streamsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Add to stream Action", "Subject ID", "Subject Name", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(streamsubject);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 790, 310));

        jButton1.setText("Add new subject");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 180, 40));

        jPanel2.setBackground(new java.awt.Color(0, 51, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Subjects to Stream");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(370, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        updatesubject();
        setsubject();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addsubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addsubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addsubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addsubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addsubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable streamsubject;
    // End of variables declaration//GEN-END:variables

    public void setsubject() {
        try {
            ResultSet rs = DB.search("select * from subject where status='Active'");
            while (rs.next()) {
                String s1 = rs.getString("subjectid");
                String s2 = rs.getString("subjectname");
                String s3 = rs.getString("status");

                DefaultTableModel dtm = (DefaultTableModel) streamsubject.getModel();
                Vector v = new Vector();
                Boolean b = false;
                System.out.println("OUTSIDE");
                ResultSet w = DB.search("select * from stream_has_subject where stream_streamid='" + MainGUI.rstreamid.getText() + "' and subject_subjectid='" + s1 + "' and status='Active'");
                if (w.first()) {

                    System.out.println("w1true");
                    b = true;
                    v.add(b);
                    v.add(s1);
                    v.add(s2);
                    v.add(s3);
                    dtm.addRow(v);

                } else {

                    System.out.println("wfalse");
                    b = false;
                    v.add(b);
                    v.add(s1);
                    v.add(s2);
                    v.add(s3);
                    dtm.addRow(v);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updatesubject() {
        try {
            DefaultTableModel dtmxx = (DefaultTableModel) streamsubject.getModel();
            int u = dtmxx.getRowCount();

            for (int i = 0; i < u; i++) {
                Boolean s1 = (Boolean) streamsubject.getValueAt(i, 0);
                String s2 = (String) streamsubject.getValueAt(i, 1);
                String s3 = (String) streamsubject.getValueAt(i, 2);
                String s4 = (String) streamsubject.getValueAt(i, 3);

                String ee;
                if (s1 == true) {
                    ResultSet rs = DB.search("select * from stream_has_subject where stream_streamid='" + MainGUI.rstreamid.getText() + "' and subject_subjectid='" + s2 + "' and status='Deactive'");
                    if (rs.next()) {

                        String ii = rs.getString("ssid");
                        DB.iud("update stream_has_subject set status='Active' where ssid='" + ii + "' and subject_subjectid='" + s2 + "'");

                    } else {
                        ResultSet rs1 = DB.search("select * from stream_has_subject where stream_streamid='" + MainGUI.rstreamid.getText() + "' and subject_subjectid='" + s2 + "' and status='Active'");
                        if (rs1.next()) {

                        } else {
                            ResultSet dd = DB.search("select count(ssid) as x from stream_has_subject");
                            if (dd.next()) {
                                String s = dd.getString("x");
                                int ii = Integer.parseInt(s);
                                ii++;
                                System.out.println("dsd");
                                DB.iud("insert into stream_has_subject value('" + MainGUI.rstreamid.getText() + "','" + s2 + "','" + ii + "','Active')");
                                //MainGUI.rstreamname.setText(null);
                            }
                        }
                    }
                } else {
                    ResultSet rs = DB.search("select * from stream_has_subject where stream_streamid='" + MainGUI.rstreamid.getText() + "' and subject_subjectid='" + s2 + "' and status='Deactive'");
                    if (rs.next()) {

                        String ii = rs.getString("ssid");
                        DB.iud("update stream_has_subject set status='Deactive' where ssid='" + ii + "' and subject_subjectid='" + s2 + "'");
                        System.out.println("deactive");

                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setoriginal() {
        try {

            DefaultTableModel dtm1 = (DefaultTableModel) MainGUI.streamsubject.getModel();

            dtm1.setRowCount(0);
            ResultSet rsw = DB.search("select * from subject");
            while (rsw.next()) {
                String a1 = rsw.getString("subjectid");
                String a2 = rsw.getString("subjectname");
                String a3 = rsw.getString("status");

                Vector v = new Vector();
                v.add(false);
                v.add(a1);
                v.add(a2);
                v.add(a3);

                dtm1.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
