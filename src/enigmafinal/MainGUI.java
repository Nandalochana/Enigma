/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enigmafinal;

import java.awt.Image;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Timer;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NipuNa NiraNjaNa
 */
public class MainGUI extends javax.swing.JFrame {

    String cc = null;
    String newpath = null;
    String mainpath = null;
    String logpath = null;
    String staffpath = null;
    String zzzz = null;
    String newpath1 = null;
    String indexid = null;
    String studentupdate = null;
    String upstaffpath = null;
    String staffnewpath = null;
    String updateteacher = null;
    calenderview zz = null;
    studentPortal por = null;

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        tabSize();
        addzonedis();
        sysClock();
        setcalender();
        setinfoircombo();
        operation();
        sethallcombo();
        setclasssubject();
        setpublish();

        newsubjecttable();
        autosubjectid();
        autostreamid();
        setscheduletable();
        setcal();
        setvisiblearea();
        setquestion();
        setFinaldate();
        addallsubject();
        setstream();
        setyear();
        setIcon();
        setmessagetable();
        //  clearfield();
        setfield();
        taboption();
        securityquestion();
        visiblefalse();
        setexamteacher();
        setexam();
        viewstate();
        setsyear();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        mainicon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        clock = new javax.swing.JLabel();
        loguserName = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        lastlogin = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        acType = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        Hometab = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        manins = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewmessages = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        institutetab = new javax.swing.JTabbedPane();
        jPanel27 = new javax.swing.JPanel();
        jPanel62 = new javax.swing.JPanel();
        jPanel63 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        inputm = new javax.swing.JTable();
        jButton30 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        titleactive = new javax.swing.JComboBox();
        jLabel154 = new javax.swing.JLabel();
        publishfor = new javax.swing.JComboBox();
        level = new javax.swing.JComboBox();
        jLabel156 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        im = new javax.swing.JTextField();
        jLabel152 = new javax.swing.JLabel();
        insmessage = new javax.swing.JTextField();
        jLabel150 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        comid = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        bid = new javax.swing.JTextField();
        comname = new javax.swing.JTextField();
        jPanel50 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        principale = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        pemail = new javax.swing.JTextField();
        pcontact = new javax.swing.JTextField();
        ssrn5 = new javax.swing.JComboBox<>();
        jPanel51 = new javax.swing.JPanel();
        iemail = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        iinfor = new javax.swing.JTextField();
        ifax = new javax.swing.JTextField();
        ihot = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        irdate = new com.toedter.calendar.JDateChooser();
        jPanel61 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        iline4 = new javax.swing.JComboBox();
        iline5 = new javax.swing.JComboBox();
        iline6 = new javax.swing.JTextField();
        jLabel145 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        iline1 = new javax.swing.JTextField();
        iline2 = new javax.swing.JTextField();
        jLabel146 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        iline3 = new javax.swing.JTextField();
        irdate2 = new com.toedter.calendar.JDateChooser();
        jButton9 = new javax.swing.JButton();
        jPanel52 = new javax.swing.JPanel();
        iprofile = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jLabel131 = new javax.swing.JLabel();
        jPanel55 = new javax.swing.JPanel();
        jLabel132 = new javax.swing.JLabel();
        hallpname = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        hallemail = new javax.swing.JTextField();
        halltp = new javax.swing.JTextField();
        jPanel54 = new javax.swing.JPanel();
        jLabel128 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        hallflownu = new javax.swing.JTextField();
        hallactive = new javax.swing.JComboBox<>();
        jLabel135 = new javax.swing.JLabel();
        hins = new javax.swing.JComboBox<>();
        jLabel136 = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        hallnumber = new javax.swing.JTextField();
        hallregisterdate = new com.toedter.calendar.JDateChooser();
        jLabel453 = new javax.swing.JLabel();
        hins1 = new javax.swing.JComboBox<>();
        jLabel484 = new javax.swing.JLabel();
        jComboBox32 = new javax.swing.JComboBox();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel203 = new javax.swing.JLabel();
        jPanel78 = new javax.swing.JPanel();
        jLabel187 = new javax.swing.JLabel();
        searchcompanyid = new javax.swing.JTextField();
        jButton40 = new javax.swing.JButton();
        jPanel79 = new javax.swing.JPanel();
        iemail1 = new javax.swing.JTextField();
        jLabel190 = new javax.swing.JLabel();
        jLabel191 = new javax.swing.JLabel();
        jLabel192 = new javax.swing.JLabel();
        iinfor1 = new javax.swing.JTextField();
        ifax1 = new javax.swing.JTextField();
        ihot1 = new javax.swing.JTextField();
        jLabel193 = new javax.swing.JLabel();
        jLabel194 = new javax.swing.JLabel();
        jPanel80 = new javax.swing.JPanel();
        jLabel195 = new javax.swing.JLabel();
        jLabel196 = new javax.swing.JLabel();
        jLabel197 = new javax.swing.JLabel();
        iline7 = new javax.swing.JComboBox();
        iline8 = new javax.swing.JComboBox();
        iline9 = new javax.swing.JTextField();
        jLabel198 = new javax.swing.JLabel();
        jLabel199 = new javax.swing.JLabel();
        jLabel200 = new javax.swing.JLabel();
        iline10 = new javax.swing.JTextField();
        iline11 = new javax.swing.JTextField();
        jLabel201 = new javax.swing.JLabel();
        jLabel202 = new javax.swing.JLabel();
        iline12 = new javax.swing.JTextField();
        irdate1 = new com.toedter.calendar.JDateChooser();
        jButton42 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        calender = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        twendsday = new javax.swing.JTable();
        jScrollPane31 = new javax.swing.JScrollPane();
        tthuesday = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        tsaturday = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tsunday = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        tthursady = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        tfriday = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sctable = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        schallday = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        iset = new javax.swing.JComboBox<>();
        classteacher = new javax.swing.JComboBox();
        ihallset = new javax.swing.JComboBox();
        classsub = new javax.swing.JComboBox();
        schalltime = new javax.swing.JComboBox();
        jButton27 = new javax.swing.JButton();
        endtime = new javax.swing.JComboBox();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        mass = new javax.swing.JComboBox();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel486 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        examtab = new javax.swing.JTabbedPane();
        jPanel76 = new javax.swing.JPanel();
        jLabel155 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane21 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jLabel64 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        jPanel75 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        examdate = new com.toedter.calendar.JDateChooser();
        jLabel76 = new javax.swing.JLabel();
        sete = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        jLabel188 = new javax.swing.JLabel();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jLabel432 = new javax.swing.JLabel();
        jButton49 = new javax.swing.JButton();
        jLabel189 = new javax.swing.JLabel();
        jComboBox33 = new javax.swing.JComboBox();
        jComboBox34 = new javax.swing.JComboBox();
        jPanel77 = new javax.swing.JPanel();
        jLabel433 = new javax.swing.JLabel();
        searchdate = new com.toedter.calendar.JDateChooser();
        jButton50 = new javax.swing.JButton();
        jScrollPane22 = new javax.swing.JScrollPane();
        viewallex = new javax.swing.JTable();
        jButton51 = new javax.swing.JButton();
        jLabel485 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        coursecontenttab = new javax.swing.JTabbedPane();
        jPanel56 = new javax.swing.JPanel();
        jLabel138 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        rstreamname = new javax.swing.JTextField();
        rstreamid = new javax.swing.JTextField();
        rstreamlevel = new javax.swing.JComboBox<>();
        jLabel452 = new javax.swing.JLabel();
        ssactive = new javax.swing.JComboBox<>();
        jButton26 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        bbbbbbbbb = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        streamsubject = new javax.swing.JTable();
        jButton76 = new javax.swing.JButton();
        jPanel57 = new javax.swing.JPanel();
        jLabel139 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        newsubject = new javax.swing.JTable();
        jPanel60 = new javax.swing.JPanel();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        setstatus = new javax.swing.JComboBox<>();
        jLabel147 = new javax.swing.JLabel();
        setid = new javax.swing.JTextField();
        subpaymentset = new javax.swing.JLabel();
        setname = new javax.swing.JTextField();
        jButton28 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jLabel184 = new javax.swing.JLabel();
        spayment = new javax.swing.JTextField();
        jButton77 = new javax.swing.JButton();
        jLabel77 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        Studenttab = new javax.swing.JTabbedPane();
        jPanel22 = new javax.swing.JPanel();
        jPanel113 = new javax.swing.JPanel();
        serchsid = new javax.swing.JTextField();
        jLabel460 = new javax.swing.JLabel();
        jButton43 = new javax.swing.JButton();
        jButton79 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        sa3 = new javax.swing.JLabel();
        jLabel204 = new javax.swing.JLabel();
        jLabel205 = new javax.swing.JLabel();
        sa1 = new javax.swing.JLabel();
        sa2 = new javax.swing.JLabel();
        jPanel58 = new javax.swing.JPanel();
        jLabel220 = new javax.swing.JLabel();
        jLabel221 = new javax.swing.JLabel();
        jLabel222 = new javax.swing.JLabel();
        jLabel223 = new javax.swing.JLabel();
        jLabel224 = new javax.swing.JLabel();
        jLabel225 = new javax.swing.JLabel();
        sa12 = new javax.swing.JLabel();
        sa11 = new javax.swing.JLabel();
        sa4 = new javax.swing.JLabel();
        sa5 = new javax.swing.JLabel();
        sa6 = new javax.swing.JLabel();
        sa7 = new javax.swing.JLabel();
        jPanel83 = new javax.swing.JPanel();
        jLabel232 = new javax.swing.JLabel();
        jLabel233 = new javax.swing.JLabel();
        jLabel234 = new javax.swing.JLabel();
        jLabel235 = new javax.swing.JLabel();
        jLabel236 = new javax.swing.JLabel();
        jLabel237 = new javax.swing.JLabel();
        jPanel84 = new javax.swing.JPanel();
        jLabel238 = new javax.swing.JLabel();
        jLabel239 = new javax.swing.JLabel();
        jLabel240 = new javax.swing.JLabel();
        jLabel241 = new javax.swing.JLabel();
        jLabel242 = new javax.swing.JLabel();
        jLabel243 = new javax.swing.JLabel();
        a11 = new javax.swing.JLabel();
        a12 = new javax.swing.JLabel();
        a13 = new javax.swing.JLabel();
        a14 = new javax.swing.JLabel();
        a15 = new javax.swing.JLabel();
        dsd = new javax.swing.JLabel();
        jLabel206 = new javax.swing.JLabel();
        jLabel207 = new javax.swing.JLabel();
        jLabel208 = new javax.swing.JLabel();
        ra3 = new javax.swing.JLabel();
        ra1 = new javax.swing.JLabel();
        ra2 = new javax.swing.JLabel();
        jPanel81 = new javax.swing.JPanel();
        jPanel82 = new javax.swing.JPanel();
        jLabel226 = new javax.swing.JLabel();
        jLabel227 = new javax.swing.JLabel();
        jLabel228 = new javax.swing.JLabel();
        jLabel229 = new javax.swing.JLabel();
        jLabel230 = new javax.swing.JLabel();
        jLabel231 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        studentsub = new javax.swing.JTable();
        jButton44 = new javax.swing.JButton();
        jLabel491 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel261 = new javax.swing.JLabel();
        jPanel88 = new javax.swing.JPanel();
        jLabel262 = new javax.swing.JLabel();
        smiddle = new javax.swing.JTextField();
        nic = new javax.swing.JTextField();
        region = new javax.swing.JTextField();
        jLabel263 = new javax.swing.JLabel();
        jLabel264 = new javax.swing.JLabel();
        jLabel265 = new javax.swing.JLabel();
        jLabel266 = new javax.swing.JLabel();
        sfirst = new javax.swing.JTextField();
        jLabel267 = new javax.swing.JLabel();
        jLabel268 = new javax.swing.JLabel();
        slast = new javax.swing.JTextField();
        jLabel269 = new javax.swing.JLabel();
        nat = new javax.swing.JTextField();
        studentid = new javax.swing.JLabel();
        jLabel270 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel271 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jPanel89 = new javax.swing.JPanel();
        line1 = new javax.swing.JTextField();
        line2 = new javax.swing.JTextField();
        line3 = new javax.swing.JTextField();
        jLabel272 = new javax.swing.JLabel();
        jLabel273 = new javax.swing.JLabel();
        jLabel274 = new javax.swing.JLabel();
        country = new javax.swing.JComboBox<>();
        jLabel275 = new javax.swing.JLabel();
        zone = new javax.swing.JComboBox<>();
        jLabel276 = new javax.swing.JLabel();
        jLabel277 = new javax.swing.JLabel();
        eyear = new javax.swing.JComboBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        smotherphone = new javax.swing.JTextField();
        sfatherphone = new javax.swing.JTextField();
        sfather = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        smother = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        sfathero = new javax.swing.JTextField();
        smothero = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        jLabel210 = new javax.swing.JLabel();
        gline2 = new javax.swing.JTextField();
        gmobile = new javax.swing.JTextField();
        gline3 = new javax.swing.JTextField();
        gline1 = new javax.swing.JTextField();
        jLabel211 = new javax.swing.JLabel();
        jLabel212 = new javax.swing.JLabel();
        guardianname = new javax.swing.JTextField();
        gland = new javax.swing.JTextField();
        jLabel213 = new javax.swing.JLabel();
        jLabel244 = new javax.swing.JLabel();
        go = new javax.swing.JTextField();
        jLabel245 = new javax.swing.JLabel();
        grelation = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel246 = new javax.swing.JLabel();
        ezone = new javax.swing.JComboBox<>();
        jLabel247 = new javax.swing.JLabel();
        passedlevel = new javax.swing.JComboBox<>();
        jLabel248 = new javax.swing.JLabel();
        schoolname = new javax.swing.JTextField();
        jLabel249 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        comments = new javax.swing.JTextArea();
        jPanel85 = new javax.swing.JPanel();
        jLabel250 = new javax.swing.JLabel();
        s1 = new javax.swing.JComboBox<>();
        jLabel251 = new javax.swing.JLabel();
        jLabel252 = new javax.swing.JLabel();
        jLabel253 = new javax.swing.JLabel();
        jLabel254 = new javax.swing.JLabel();
        jLabel255 = new javax.swing.JLabel();
        s2 = new javax.swing.JComboBox<>();
        s3 = new javax.swing.JComboBox<>();
        s4 = new javax.swing.JComboBox<>();
        s5 = new javax.swing.JComboBox<>();
        mins = new javax.swing.JComboBox<>();
        t5 = new javax.swing.JComboBox<>();
        t1 = new javax.swing.JComboBox<>();
        t2 = new javax.swing.JComboBox<>();
        t3 = new javax.swing.JComboBox<>();
        t4 = new javax.swing.JComboBox<>();
        g5 = new javax.swing.JComboBox();
        g1 = new javax.swing.JComboBox();
        g2 = new javax.swing.JComboBox();
        g3 = new javax.swing.JComboBox();
        g4 = new javax.swing.JComboBox();
        jPanel86 = new javax.swing.JPanel();
        mh = new javax.swing.JTextField();
        mtp = new javax.swing.JTextField();
        email1 = new javax.swing.JTextField();
        jLabel256 = new javax.swing.JLabel();
        jLabel257 = new javax.swing.JLabel();
        jLabel258 = new javax.swing.JLabel();
        jLabel259 = new javax.swing.JLabel();
        jLabel260 = new javax.swing.JLabel();
        other = new javax.swing.JTextField();
        jPanel87 = new javax.swing.JPanel();
        profile = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jLabel278 = new javax.swing.JLabel();
        todate = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jPanel119 = new javax.swing.JPanel();
        jPanel129 = new javax.swing.JPanel();
        sb3 = new javax.swing.JLabel();
        jPanel130 = new javax.swing.JPanel();
        jLabel461 = new javax.swing.JLabel();
        jLabel462 = new javax.swing.JLabel();
        jLabel463 = new javax.swing.JLabel();
        jLabel464 = new javax.swing.JLabel();
        sb2 = new javax.swing.JLabel();
        sb1 = new javax.swing.JLabel();
        sb4 = new javax.swing.JLabel();
        sb5 = new javax.swing.JLabel();
        jPanel131 = new javax.swing.JPanel();
        jLabel465 = new javax.swing.JLabel();
        jLabel466 = new javax.swing.JLabel();
        jLabel467 = new javax.swing.JLabel();
        jLabel468 = new javax.swing.JLabel();
        jLabel469 = new javax.swing.JLabel();
        jPanel90 = new javax.swing.JPanel();
        jLabel470 = new javax.swing.JLabel();
        jLabel471 = new javax.swing.JLabel();
        jLabel472 = new javax.swing.JLabel();
        jLabel473 = new javax.swing.JLabel();
        jLabel474 = new javax.swing.JLabel();
        jLabel475 = new javax.swing.JLabel();
        b10 = new javax.swing.JLabel();
        b12 = new javax.swing.JLabel();
        b11 = new javax.swing.JLabel();
        b13 = new javax.swing.JLabel();
        b14 = new javax.swing.JLabel();
        jLabel442 = new javax.swing.JLabel();
        rb3 = new javax.swing.JLabel();
        rb1 = new javax.swing.JLabel();
        rb2 = new javax.swing.JLabel();
        jLabel441 = new javax.swing.JLabel();
        jLabel440 = new javax.swing.JLabel();
        jPanel91 = new javax.swing.JPanel();
        jPanel92 = new javax.swing.JPanel();
        jLabel476 = new javax.swing.JLabel();
        jLabel477 = new javax.swing.JLabel();
        jLabel478 = new javax.swing.JLabel();
        jLabel479 = new javax.swing.JLabel();
        jLabel480 = new javax.swing.JLabel();
        jLabel481 = new javax.swing.JLabel();
        jLabel482 = new javax.swing.JLabel();
        jLabel209 = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel132 = new javax.swing.JPanel();
        jPanel93 = new javax.swing.JPanel();
        sc3 = new javax.swing.JLabel();
        jPanel97 = new javax.swing.JPanel();
        jPanel98 = new javax.swing.JPanel();
        jLabel288 = new javax.swing.JLabel();
        jLabel289 = new javax.swing.JLabel();
        jLabel290 = new javax.swing.JLabel();
        jLabel291 = new javax.swing.JLabel();
        jLabel292 = new javax.swing.JLabel();
        jLabel293 = new javax.swing.JLabel();
        jLabel294 = new javax.swing.JLabel();
        jLabel281 = new javax.swing.JLabel();
        jPanel99 = new javax.swing.JPanel();
        jPanel100 = new javax.swing.JPanel();
        jLabel300 = new javax.swing.JLabel();
        jLabel301 = new javax.swing.JLabel();
        jLabel302 = new javax.swing.JLabel();
        jLabel303 = new javax.swing.JLabel();
        jLabel304 = new javax.swing.JLabel();
        jLabel305 = new javax.swing.JLabel();
        jLabel306 = new javax.swing.JLabel();
        jLabel307 = new javax.swing.JLabel();
        jLabel308 = new javax.swing.JLabel();
        jLabel309 = new javax.swing.JLabel();
        jLabel310 = new javax.swing.JLabel();
        jLabel311 = new javax.swing.JLabel();
        jLabel312 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jComboBox11 = new javax.swing.JComboBox<>();
        jPanel105 = new javax.swing.JPanel();
        jPanel106 = new javax.swing.JPanel();
        jLabel339 = new javax.swing.JLabel();
        jLabel340 = new javax.swing.JLabel();
        jLabel341 = new javax.swing.JLabel();
        jLabel342 = new javax.swing.JLabel();
        jLabel343 = new javax.swing.JLabel();
        jLabel344 = new javax.swing.JLabel();
        jLabel345 = new javax.swing.JLabel();
        jLabel346 = new javax.swing.JLabel();
        jLabel347 = new javax.swing.JLabel();
        jLabel348 = new javax.swing.JLabel();
        jLabel349 = new javax.swing.JLabel();
        jLabel350 = new javax.swing.JLabel();
        jLabel351 = new javax.swing.JLabel();
        jComboBox19 = new javax.swing.JComboBox<>();
        jComboBox20 = new javax.swing.JComboBox<>();
        jComboBox21 = new javax.swing.JComboBox<>();
        jPanel107 = new javax.swing.JPanel();
        jPanel108 = new javax.swing.JPanel();
        jLabel352 = new javax.swing.JLabel();
        jLabel353 = new javax.swing.JLabel();
        jLabel354 = new javax.swing.JLabel();
        jLabel355 = new javax.swing.JLabel();
        jLabel356 = new javax.swing.JLabel();
        jLabel357 = new javax.swing.JLabel();
        jLabel358 = new javax.swing.JLabel();
        jLabel359 = new javax.swing.JLabel();
        jLabel360 = new javax.swing.JLabel();
        jLabel361 = new javax.swing.JLabel();
        jLabel362 = new javax.swing.JLabel();
        jLabel363 = new javax.swing.JLabel();
        jLabel364 = new javax.swing.JLabel();
        jComboBox22 = new javax.swing.JComboBox<>();
        jComboBox23 = new javax.swing.JComboBox<>();
        jComboBox24 = new javax.swing.JComboBox<>();
        jPanel109 = new javax.swing.JPanel();
        jPanel110 = new javax.swing.JPanel();
        jLabel365 = new javax.swing.JLabel();
        jLabel366 = new javax.swing.JLabel();
        jLabel367 = new javax.swing.JLabel();
        jLabel368 = new javax.swing.JLabel();
        jLabel369 = new javax.swing.JLabel();
        jLabel370 = new javax.swing.JLabel();
        jLabel371 = new javax.swing.JLabel();
        jLabel372 = new javax.swing.JLabel();
        jLabel373 = new javax.swing.JLabel();
        jLabel374 = new javax.swing.JLabel();
        jLabel375 = new javax.swing.JLabel();
        jLabel376 = new javax.swing.JLabel();
        jLabel377 = new javax.swing.JLabel();
        jComboBox25 = new javax.swing.JComboBox<>();
        jComboBox26 = new javax.swing.JComboBox<>();
        jComboBox27 = new javax.swing.JComboBox<>();
        jPanel111 = new javax.swing.JPanel();
        jPanel112 = new javax.swing.JPanel();
        jLabel378 = new javax.swing.JLabel();
        jLabel379 = new javax.swing.JLabel();
        jLabel380 = new javax.swing.JLabel();
        jLabel381 = new javax.swing.JLabel();
        jLabel382 = new javax.swing.JLabel();
        jLabel383 = new javax.swing.JLabel();
        jLabel384 = new javax.swing.JLabel();
        jLabel385 = new javax.swing.JLabel();
        jLabel386 = new javax.swing.JLabel();
        jLabel387 = new javax.swing.JLabel();
        jLabel388 = new javax.swing.JLabel();
        jLabel389 = new javax.swing.JLabel();
        jLabel390 = new javax.swing.JLabel();
        jComboBox28 = new javax.swing.JComboBox<>();
        jComboBox29 = new javax.swing.JComboBox<>();
        jComboBox30 = new javax.swing.JComboBox<>();
        jPanel101 = new javax.swing.JPanel();
        jPanel102 = new javax.swing.JPanel();
        jLabel313 = new javax.swing.JLabel();
        jLabel314 = new javax.swing.JLabel();
        jLabel315 = new javax.swing.JLabel();
        jLabel316 = new javax.swing.JLabel();
        jLabel317 = new javax.swing.JLabel();
        jLabel318 = new javax.swing.JLabel();
        jLabel319 = new javax.swing.JLabel();
        jLabel320 = new javax.swing.JLabel();
        jLabel321 = new javax.swing.JLabel();
        jLabel322 = new javax.swing.JLabel();
        jLabel323 = new javax.swing.JLabel();
        jLabel324 = new javax.swing.JLabel();
        jLabel325 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox<>();
        jComboBox13 = new javax.swing.JComboBox<>();
        jComboBox14 = new javax.swing.JComboBox<>();
        jPanel103 = new javax.swing.JPanel();
        jPanel104 = new javax.swing.JPanel();
        jLabel326 = new javax.swing.JLabel();
        jLabel327 = new javax.swing.JLabel();
        jLabel328 = new javax.swing.JLabel();
        jLabel329 = new javax.swing.JLabel();
        jLabel330 = new javax.swing.JLabel();
        jLabel331 = new javax.swing.JLabel();
        jLabel332 = new javax.swing.JLabel();
        jLabel333 = new javax.swing.JLabel();
        jLabel334 = new javax.swing.JLabel();
        jLabel335 = new javax.swing.JLabel();
        jLabel336 = new javax.swing.JLabel();
        jLabel337 = new javax.swing.JLabel();
        jLabel338 = new javax.swing.JLabel();
        jComboBox16 = new javax.swing.JComboBox<>();
        jComboBox17 = new javax.swing.JComboBox<>();
        jComboBox18 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jScrollPane27 = new javax.swing.JScrollPane();
        setaction = new javax.swing.JTable();
        jPanel94 = new javax.swing.JPanel();
        jLabel487 = new javax.swing.JLabel();
        jLabel488 = new javax.swing.JLabel();
        jLabel489 = new javax.swing.JLabel();
        jLabel490 = new javax.swing.JLabel();
        sc2 = new javax.swing.JTextField();
        sc13 = new javax.swing.JTextField();
        sc52 = new javax.swing.JRadioButton();
        sc51 = new javax.swing.JRadioButton();
        sc4 = new com.toedter.calendar.JDateChooser();
        sc11 = new javax.swing.JTextField();
        sc12 = new javax.swing.JTextField();
        jButton57 = new javax.swing.JButton();
        jPanel95 = new javax.swing.JPanel();
        jLabel298 = new javax.swing.JLabel();
        jLabel299 = new javax.swing.JLabel();
        jLabel391 = new javax.swing.JLabel();
        jLabel282 = new javax.swing.JLabel();
        jLabel283 = new javax.swing.JLabel();
        jPanel96 = new javax.swing.JPanel();
        jLabel284 = new javax.swing.JLabel();
        jLabel285 = new javax.swing.JLabel();
        jLabel286 = new javax.swing.JLabel();
        jLabel287 = new javax.swing.JLabel();
        jLabel392 = new javax.swing.JLabel();
        jLabel393 = new javax.swing.JLabel();
        c11 = new javax.swing.JTextField();
        c12 = new javax.swing.JTextField();
        c10 = new javax.swing.JTextField();
        c14 = new javax.swing.JComboBox<>();
        c13 = new javax.swing.JComboBox<>();
        jLabel394 = new javax.swing.JLabel();
        c15 = new javax.swing.JComboBox();
        jLabel446 = new javax.swing.JLabel();
        jLabel447 = new javax.swing.JLabel();
        jLabel448 = new javax.swing.JLabel();
        rc3 = new javax.swing.JTextField();
        rc1 = new javax.swing.JTextField();
        rc2 = new javax.swing.JTextField();
        jButton46 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jLabel78 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        userstab = new javax.swing.JTabbedPane();
        jPanel32 = new javax.swing.JPanel();
        jPanel133 = new javax.swing.JPanel();
        jLabel492 = new javax.swing.JLabel();
        jLabel493 = new javax.swing.JLabel();
        jLabel494 = new javax.swing.JLabel();
        jLabel495 = new javax.swing.JLabel();
        xx2 = new javax.swing.JTextField();
        v4 = new javax.swing.JLabel();
        v11 = new javax.swing.JLabel();
        v12 = new javax.swing.JLabel();
        jPanel134 = new javax.swing.JPanel();
        jLabel496 = new javax.swing.JLabel();
        jLabel497 = new javax.swing.JLabel();
        jLabel498 = new javax.swing.JLabel();
        jLabel499 = new javax.swing.JLabel();
        v15 = new javax.swing.JLabel();
        v16 = new javax.swing.JLabel();
        v17 = new javax.swing.JLabel();
        v18 = new javax.swing.JLabel();
        c1 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        c3 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel400 = new javax.swing.JLabel();
        jButton65 = new javax.swing.JButton();
        jPanel115 = new javax.swing.JPanel();
        searchstaffimg = new javax.swing.JLabel();
        jLabel214 = new javax.swing.JLabel();
        jButton74 = new javax.swing.JButton();
        jPanel114 = new javax.swing.JPanel();
        jLabel402 = new javax.swing.JLabel();
        jLabel401 = new javax.swing.JLabel();
        jLabel403 = new javax.swing.JLabel();
        jLabel404 = new javax.swing.JLabel();
        jLabel405 = new javax.swing.JLabel();
        jLabel406 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        sna = new javax.swing.JTextField();
        ssrn4 = new javax.swing.JTextField();
        ssrn2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        snic = new javax.swing.JTextField();
        smale = new javax.swing.JRadioButton();
        sfemale = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        sre = new javax.swing.JTextField();
        ssrn3 = new javax.swing.JTextField();
        ssrn1 = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        saffimage = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        sssetid = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        uline2 = new javax.swing.JTextField();
        uline1 = new javax.swing.JTextField();
        uline3 = new javax.swing.JTextField();
        uline5 = new javax.swing.JComboBox<>();
        uline4 = new javax.swing.JComboBox<>();
        staffbirth = new com.toedter.calendar.JDateChooser();
        jLabel398 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel38 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        sssetname = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        staffuser = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        staffstatus = new javax.swing.JComboBox<>();
        setusertype = new javax.swing.JComboBox<>();
        jLabel62 = new javax.swing.JLabel();
        staffcuserpw = new javax.swing.JPasswordField();
        staffuserpw = new javax.swing.JPasswordField();
        jPanel42 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        question2 = new javax.swing.JComboBox<>();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        question1 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        answer2 = new javax.swing.JTextField();
        answer1 = new javax.swing.JTextField();
        jPanel39 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        userland = new javax.swing.JTextField();
        useremail = new javax.swing.JTextField();
        userother = new javax.swing.JTextField();
        usermobile = new javax.swing.JTextField();
        jPanel45 = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        aclevel = new javax.swing.JLabel();
        stu = new javax.swing.JLabel();
        setstaus = new javax.swing.JLabel();
        wrw = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jPanel120 = new javax.swing.JPanel();
        jPanel121 = new javax.swing.JPanel();
        jLabel427 = new javax.swing.JLabel();
        jPanel122 = new javax.swing.JPanel();
        jLabel434 = new javax.swing.JLabel();
        jLabel435 = new javax.swing.JLabel();
        jLabel436 = new javax.swing.JLabel();
        jLabel438 = new javax.swing.JLabel();
        v1 = new javax.swing.JLabel();
        v3 = new javax.swing.JLabel();
        v2 = new javax.swing.JLabel();
        jLabel399 = new javax.swing.JLabel();
        jPanel124 = new javax.swing.JPanel();
        jLabel443 = new javax.swing.JLabel();
        jLabel444 = new javax.swing.JLabel();
        jLabel445 = new javax.swing.JLabel();
        jLabel449 = new javax.swing.JLabel();
        v7 = new javax.swing.JLabel();
        v8 = new javax.swing.JLabel();
        v9 = new javax.swing.JLabel();
        v10 = new javax.swing.JLabel();
        jPanel123 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        v5 = new javax.swing.JLabel();
        v6 = new javax.swing.JLabel();
        jLabel297 = new javax.swing.JLabel();
        jLabel455 = new javax.swing.JLabel();
        jLabel407 = new javax.swing.JLabel();
        jLabel408 = new javax.swing.JLabel();
        jLabel409 = new javax.swing.JLabel();
        jPanel116 = new javax.swing.JPanel();
        jLabel410 = new javax.swing.JLabel();
        jLabel411 = new javax.swing.JLabel();
        jLabel412 = new javax.swing.JLabel();
        jLabel413 = new javax.swing.JLabel();
        jLabel414 = new javax.swing.JLabel();
        jLabel415 = new javax.swing.JLabel();
        jPanel127 = new javax.swing.JPanel();
        jPanel128 = new javax.swing.JPanel();
        z4 = new javax.swing.JLabel();
        jButton69 = new javax.swing.JButton();
        jButton75 = new javax.swing.JButton();
        jPanel147 = new javax.swing.JPanel();
        jLabel553 = new javax.swing.JLabel();
        jLabel554 = new javax.swing.JLabel();
        jLabel555 = new javax.swing.JLabel();
        jLabel556 = new javax.swing.JLabel();
        aa3 = new javax.swing.JTextField();
        ss2 = new javax.swing.JRadioButton();
        ss1 = new javax.swing.JRadioButton();
        z2 = new com.toedter.calendar.JDateChooser();
        aa1 = new javax.swing.JTextField();
        aa2 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        z3 = new javax.swing.JLabel();
        jLabel557 = new javax.swing.JLabel();
        jLabel417 = new javax.swing.JLabel();
        jLabel416 = new javax.swing.JLabel();
        jLabel418 = new javax.swing.JLabel();
        jLabel425 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JLabel();
        jPanel125 = new javax.swing.JPanel();
        jLabel454 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel483 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton64 = new javax.swing.JButton();
        jPanel126 = new javax.swing.JPanel();
        jLabel456 = new javax.swing.JLabel();
        jLabel457 = new javax.swing.JLabel();
        jLabel458 = new javax.swing.JLabel();
        jLabel459 = new javax.swing.JLabel();
        p1 = new javax.swing.JTextField();
        p2 = new javax.swing.JTextField();
        p3 = new javax.swing.JTextField();
        p4 = new javax.swing.JTextField();
        jPanel117 = new javax.swing.JPanel();
        jLabel419 = new javax.swing.JLabel();
        jLabel420 = new javax.swing.JLabel();
        jLabel421 = new javax.swing.JLabel();
        jPanel118 = new javax.swing.JPanel();
        jLabel422 = new javax.swing.JLabel();
        jLabel423 = new javax.swing.JLabel();
        jLabel424 = new javax.swing.JLabel();
        p5 = new javax.swing.JTextField();
        p6 = new javax.swing.JTextField();
        p7 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel105 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        todate1 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        profile1 = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jLabel97 = new javax.swing.JLabel();
        sm = new javax.swing.JTextField();
        nic1 = new javax.swing.JTextField();
        region1 = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        sf = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        sl = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        nationality = new javax.swing.JTextField();
        dob1 = new com.toedter.calendar.JDateChooser();
        jLabel107 = new javax.swing.JLabel();
        male1 = new javax.swing.JRadioButton();
        female1 = new javax.swing.JRadioButton();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel426 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        line4 = new javax.swing.JTextField();
        line5 = new javax.swing.JTextField();
        line6 = new javax.swing.JTextField();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        country1 = new javax.swing.JComboBox<>();
        jLabel115 = new javax.swing.JLabel();
        zone1 = new javax.swing.JComboBox<>();
        gg = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel44 = new javax.swing.JPanel();
        jLabel116 = new javax.swing.JLabel();
        edzone = new javax.swing.JComboBox<>();
        jLabel117 = new javax.swing.JLabel();
        passedlevel1 = new javax.swing.JComboBox<>();
        jLabel119 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        comment = new javax.swing.JTextArea();
        jPanel46 = new javax.swing.JPanel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jLabel182 = new javax.swing.JLabel();
        tm = new javax.swing.JTextField();
        temail = new javax.swing.JTextField();
        tl = new javax.swing.JTextField();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel47 = new javax.swing.JPanel();
        record = new javax.swing.JTextField();
        jTabbedPane9 = new javax.swing.JTabbedPane();
        jTabbedPane10 = new javax.swing.JTabbedPane();
        jPanel48 = new javax.swing.JPanel();
        jLabel183 = new javax.swing.JLabel();
        tsub1 = new javax.swing.JComboBox();
        tsub2 = new javax.swing.JComboBox();
        jLabel215 = new javax.swing.JLabel();
        tsub3 = new javax.swing.JComboBox();
        jLabel216 = new javax.swing.JLabel();
        tsub4 = new javax.swing.JComboBox();
        jLabel217 = new javax.swing.JLabel();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jLabel450 = new javax.swing.JLabel();
        jComboBox15 = new javax.swing.JComboBox<>();
        jLabel118 = new javax.swing.JLabel();
        school = new javax.swing.JTextField();
        jPanel40 = new javax.swing.JPanel();
        jPanel135 = new javax.swing.JPanel();
        q1 = new javax.swing.JLabel();
        jButton66 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jScrollPane29 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel66 = new javax.swing.JPanel();
        tid = new javax.swing.JTextField();
        jLabel280 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jLabel428 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jButton63 = new javax.swing.JButton();
        jPanel136 = new javax.swing.JPanel();
        jLabel218 = new javax.swing.JLabel();
        jLabel429 = new javax.swing.JLabel();
        zz4 = new javax.swing.JTextField();
        zz6 = new javax.swing.JTextField();
        jPanel137 = new javax.swing.JPanel();
        jLabel219 = new javax.swing.JLabel();
        jLabel437 = new javax.swing.JLabel();
        jLabel439 = new javax.swing.JLabel();
        zz1 = new javax.swing.JTextField();
        zz2 = new javax.swing.JTextField();
        zz3 = new javax.swing.JTextField();
        jPanel138 = new javax.swing.JPanel();
        m1 = new javax.swing.JTextField();
        jLabel295 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        m2 = new com.toedter.calendar.JDateChooser();
        jLabel279 = new javax.swing.JLabel();
        jLabel430 = new javax.swing.JLabel();
        zz5 = new javax.swing.JTextField();
        jPanel139 = new javax.swing.JPanel();
        jLabel451 = new javax.swing.JLabel();
        jComboBox31 = new javax.swing.JComboBox<>();
        jLabel79 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jScrollPane24 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        jButton58 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton78 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        search1 = new javax.swing.JTextField();
        jButton80 = new javax.swing.JButton();
        jLabel500 = new javax.swing.JLabel();
        jButton81 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        setting = new javax.swing.JTable();
        position = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        jButton37 = new javax.swing.JButton();
        jLabel93 = new javax.swing.JLabel();
        jLabel296 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        addsecid = new javax.swing.JTextField();
        jLabel395 = new javax.swing.JLabel();
        secdelete = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        questiontable = new javax.swing.JTable();
        jButton71 = new javax.swing.JButton();
        secupdate = new javax.swing.JButton();
        jLabel396 = new javax.swing.JLabel();
        jScrollPane30 = new javax.swing.JScrollPane();
        setposition = new javax.swing.JTable();
        jButton70 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();
        jButton73 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel397 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel431 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        paymenttab = new javax.swing.JTabbedPane();
        jPanel65 = new javax.swing.JPanel();
        jLabel157 = new javax.swing.JLabel();
        jPanel70 = new javax.swing.JPanel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        searchsid = new javax.swing.JTextField();
        searchclass = new javax.swing.JComboBox<>();
        jLabel161 = new javax.swing.JLabel();
        searchsname = new javax.swing.JTextField();
        ad = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel42 = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        steachername = new javax.swing.JComboBox();
        jLabel158 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        precord = new javax.swing.JTable();
        jPanel69 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        paidamount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        bb = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        jLabel164 = new javax.swing.JLabel();
        jLabel165 = new javax.swing.JLabel();
        eee1 = new javax.swing.JLabel();
        w3 = new javax.swing.JLabel();
        jComboBox35 = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton34 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jPanel68 = new javax.swing.JPanel();
        jLabel168 = new javax.swing.JLabel();
        jPanel71 = new javax.swing.JPanel();
        jTextField10 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        jLabel169 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        jButton31 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel72 = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        jLabel170 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        jTextField37 = new javax.swing.JTextField();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel501 = new javax.swing.JLabel();
        jComboBox36 = new javax.swing.JComboBox<>();
        jPanel73 = new javax.swing.JPanel();
        jTextField38 = new javax.swing.JTextField();
        jLabel175 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jPanel74 = new javax.swing.JPanel();
        jLabel179 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jLabel92 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainicon.setText("Icon + Logo");
        jPanel2.add(mainicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 60));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Last Login      :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, -1, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Logged User  :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, 20));

        jButton1.setText("Log Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 20, 100, 40));

        clock.setFont(new java.awt.Font("Segoe UI Light", 0, 60)); // NOI18N
        clock.setForeground(new java.awt.Color(255, 255, 255));
        clock.setText("3:15:12");
        jPanel2.add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 240, 50));

        loguserName.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        loguserName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        loguserName.setText("123");
        jPanel2.add(loguserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 250, 20));

        day.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        day.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        day.setText("August 26, 2016");
        jPanel2.add(day, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 190, 30));

        lastlogin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lastlogin.setText("123");
        jPanel2.add(lastlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 60, 250, -1));

        email.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        email.setText("123");
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 40, 250, -1));

        acType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        acType.setText("123");
        jPanel2.add(acType, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, 250, -1));

        jLabel140.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel140.setText("N.I.C               :");
        jPanel2.add(jLabel140, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 110, 20));

        jLabel144.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel144.setText("Type               :");
        jPanel2.add(jLabel144, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 100, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 80));

        Hometab.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Hometab.setOpaque(true);
        Hometab.setPreferredSize(new java.awt.Dimension(1366, 674));
        Hometab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HometabMouseClicked(evt);
            }
        });

        jPanel5.setPreferredSize(new java.awt.Dimension(1366, 620));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel5.setText("Welcome to Student Management System");
        jPanel13.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 40));

        jPanel5.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 40));

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/HomeBG.png"))); // NOI18N
        jLabel2.setText(" ");
        jPanel12.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1360, 580));

        jPanel5.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1370, 580));

        Hometab.addTab("", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maninsMouseClicked(evt);
            }
        });

        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewmessages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Message", "Sort Order", "Publishing Options"
            }
        ));
        jScrollPane1.setViewportView(viewmessages);

        jPanel26.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1310, 500));

        jPanel15.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1330, 520));

        manins.addTab("Messages", jPanel15);

        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        institutetab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel62.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel27.add(jPanel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, -1, -1));

        jPanel63.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel27.add(jPanel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 1250, -1));

        inputm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Action", "Title", "Message", "level", "Publishing Options"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(inputm);

        jPanel27.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1240, -1));

        jButton30.setText("Add To Table");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        jPanel27.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 500, 110, 80));

        jButton29.setText("Submit Messages/Update Messages");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel27.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 440, 250, 50));

        titleactive.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Cancel" }));
        jPanel27.add(titleactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 510, 130, 30));

        jLabel154.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel154.setText("Action:");
        jPanel27.add(jLabel154, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 500, 90, 40));

        publishfor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "none" }));
        jPanel27.add(publishfor, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, 140, 30));

        level.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "High", "Medium", "Low" }));
        jPanel27.add(level, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 490, 140, 30));

        jLabel156.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel156.setText("Publish for:*");
        jPanel27.add(jLabel156, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 530, 100, 40));

        jLabel153.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel153.setText("Level");
        jPanel27.add(jLabel153, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, 100, 40));
        jPanel27.add(im, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 490, 240, 80));

        jLabel152.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel152.setText("Message:*");
        jPanel27.add(jLabel152, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 90, 30));
        jPanel27.add(insmessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 180, 30));

        jLabel150.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel150.setText("    Add Details");
        jLabel150.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel27.add(jLabel150, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 140, 50));

        jLabel151.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel151.setText("Title:*");
        jPanel27.add(jLabel151, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 50, 40));

        institutetab.addTab("Institute messages", jPanel27);

        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton8.setText("Clear Fields");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel28.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 530, 120, 50));

        jButton18.setText("Save");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel28.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 530, 100, 50));

        jLabel67.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel67.setText("New Institute Registration");
        jPanel28.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 40));

        jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel43.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("Company ID:*");
        jPanel43.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 180, 30));

        comid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comidKeyTyped(evt);
            }
        });
        jPanel43.add(comid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 310, 30));

        jLabel17.setText("Comany Name:*");
        jPanel43.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 180, 30));

        jLabel18.setText("Branch Name:*");
        jPanel43.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 180, 30));
        jPanel43.add(bid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 310, 30));
        jPanel43.add(comname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 310, 30));

        jPanel28.add(jPanel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 490, 150));

        jPanel50.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Authorization"));
        jPanel50.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel68.setText("Principal Name:*");
        jPanel50.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 180, 30));
        jPanel50.add(principale, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 200, 30));

        jLabel69.setText("Contact No :*");
        jPanel50.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 180, 30));

        jLabel70.setText("Email :");
        jPanel50.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 180, 30));
        jPanel50.add(pemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 310, 30));

        pcontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcontactActionPerformed(evt);
            }
        });
        pcontact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pcontactKeyTyped(evt);
            }
        });
        jPanel50.add(pcontact, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 310, 30));

        ssrn5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr.", "Rev." }));
        ssrn5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ssrn5ItemStateChanged(evt);
            }
        });
        ssrn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssrn5ActionPerformed(evt);
            }
        });
        jPanel50.add(ssrn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 70, 30));

        jPanel28.add(jPanel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 490, 160));

        jPanel51.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Institute Contact Details"));
        jPanel51.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel51.add(iemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 180, 30));

        jLabel72.setText("Email");
        jPanel51.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 180, 30));

        jLabel73.setText("Fax Number");
        jPanel51.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 180, 30));

        jLabel123.setText("Information Line:");
        jPanel51.add(jLabel123, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 180, 30));

        iinfor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iinforKeyTyped(evt);
            }
        });
        jPanel51.add(iinfor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 180, 30));

        ifax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ifaxKeyTyped(evt);
            }
        });
        jPanel51.add(ifax, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 180, 30));

        ihot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ihotKeyTyped(evt);
            }
        });
        jPanel51.add(ihot, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 180, 30));

        jLabel124.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel124.setText("Contact Details");
        jPanel51.add(jLabel124, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 30));

        jLabel125.setText("Hot Line:*");
        jPanel51.add(jLabel125, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 180, 30));
        jPanel51.add(irdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 160, -1));

        jPanel28.add(jPanel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 390, 210));

        jPanel61.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Location Information"));
        jPanel61.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel71.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel71.setText("Location Details");
        jPanel61.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        jLabel74.setText("Province");
        jPanel61.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 90, 30));

        jLabel126.setText("District");
        jPanel61.add(jLabel126, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 90, 30));

        jPanel61.add(iline4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 170, 30));

        iline5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iline5ActionPerformed(evt);
            }
        });
        jPanel61.add(iline5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 170, 30));

        iline6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iline6ActionPerformed(evt);
            }
        });
        iline6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iline6KeyTyped(evt);
            }
        });
        jPanel61.add(iline6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 170, 30));

        jLabel145.setText("ZIP Code");
        jPanel61.add(jLabel145, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 90, 30));

        jLabel127.setText("Register Date:*");
        jPanel61.add(jLabel127, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 90, 30));

        jLabel19.setText("Line1:*");
        jPanel61.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 90, 20));
        jPanel61.add(iline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 180, 30));
        jPanel61.add(iline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 180, 30));

        jLabel146.setText("Line2:*");
        jPanel61.add(jLabel146, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 90, 20));

        jLabel148.setText("Line3:");
        jPanel61.add(jLabel148, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 90, 20));
        jPanel61.add(iline3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 180, 30));
        jPanel61.add(irdate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 160, -1));

        jPanel28.add(jPanel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 550, 210));

        jButton9.setText("Browse");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel28.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 130, 40));

        jPanel52.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel52.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iprofile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iprofile.setText("Image Comes Here");
        jPanel52.add(iprofile, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 300, 220));

        jPanel28.add(jPanel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 300, 230));

        institutetab.addTab("Registration", jPanel28);

        jPanel53.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel131.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel131.setText("Hall Registration: Add | Update | Search ");
        jPanel53.add(jLabel131, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        jPanel55.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Authorization"));
        jPanel55.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel132.setText("Authorized person:*");
        jPanel55.add(jLabel132, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 120, 30));

        hallpname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallpnameActionPerformed(evt);
            }
        });
        jPanel55.add(hallpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 310, 30));

        jLabel133.setText("Contact No :*");
        jPanel55.add(jLabel133, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 120, 30));

        jLabel134.setText("Email :");
        jPanel55.add(jLabel134, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 180, 30));

        hallemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallemailActionPerformed(evt);
            }
        });
        jPanel55.add(hallemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 310, 30));

        halltp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halltpActionPerformed(evt);
            }
        });
        halltp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                halltpKeyTyped(evt);
            }
        });
        jPanel55.add(halltp, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 310, 30));

        jPanel53.add(jPanel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 490, 180));

        jPanel54.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hall Details"));
        jPanel54.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel128.setText("Institue :");
        jPanel54.add(jLabel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 120, 30));

        jLabel130.setText("Registration Date:*");
        jPanel54.add(jLabel130, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 120, 30));

        hallflownu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallflownuActionPerformed(evt);
            }
        });
        hallflownu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hallflownuKeyTyped(evt);
            }
        });
        jPanel54.add(hallflownu, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 310, 30));

        hallactive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Pending", "Deactive" }));
        hallactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallactiveActionPerformed(evt);
            }
        });
        jPanel54.add(hallactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 310, 30));

        jLabel135.setText("Floor Number :*");
        jPanel54.add(jLabel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 120, 30));

        jPanel54.add(hins, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 310, 30));

        jLabel136.setText("Active:");
        jPanel54.add(jLabel136, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 120, 40));

        jLabel137.setText("Max Count :");
        jPanel54.add(jLabel137, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 80, 30));

        hallnumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hallnumberKeyTyped(evt);
            }
        });
        jPanel54.add(hallnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 120, 30));
        jPanel54.add(hallregisterdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 202, 310, 30));

        jLabel453.setText("Type:");
        jPanel54.add(jLabel453, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 80, -1));

        hins1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Class", "Exam" }));
        jPanel54.add(hins1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 310, 30));

        jLabel484.setText("Hall Number :*");
        jPanel54.add(jLabel484, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 120, 30));

        jComboBox32.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "20", "40", "60", "80", "100", "120", "140", "160", "180", "200", "250", "300" }));
        jPanel54.add(jComboBox32, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 100, 30));

        jPanel53.add(jPanel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 490, 290));

        jButton21.setText("Save");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel53.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 120, 60));

        jButton22.setText("Update Info");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel53.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 550, 120, 60));

        jButton20.setText("Search");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel53.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 550, 120, 60));

        jButton19.setText("Clear Fields");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel53.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 570, 110, 40));

        institutetab.addTab("Hall Registration", jPanel53);

        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel50.setText("jLabel50");
        jPanel29.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 180, 130, 400));

        jLabel61.setText("jLabel61");
        jPanel29.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 200, 110, 360));

        jLabel203.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel203.setText("Search  ||  Edit   ");
        jPanel29.add(jLabel203, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 40));

        jPanel78.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel78.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel187.setText("Company ID:*");
        jPanel78.add(jLabel187, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 110, 30));

        searchcompanyid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcompanyidActionPerformed(evt);
            }
        });
        jPanel78.add(searchcompanyid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 200, 30));

        jButton40.setText("Search");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        jPanel78.add(jButton40, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 140, 80));

        jPanel29.add(jPanel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 360, 200));

        jPanel79.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Institute Contact Details"));
        jPanel79.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel79.add(iemail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 180, 30));

        jLabel190.setText("Email");
        jPanel79.add(jLabel190, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 180, 30));

        jLabel191.setText("Fax Number");
        jPanel79.add(jLabel191, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 180, 30));

        jLabel192.setText("Information Line:");
        jPanel79.add(jLabel192, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 180, 30));
        jPanel79.add(iinfor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 180, 30));
        jPanel79.add(ifax1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 180, 30));
        jPanel79.add(ihot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 180, 30));

        jLabel193.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel193.setText("Contact Details");
        jPanel79.add(jLabel193, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 30));

        jLabel194.setText("Hot Line:*");
        jPanel79.add(jLabel194, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 180, 30));

        jPanel29.add(jPanel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 390, 210));

        jPanel80.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Location Information"));
        jPanel80.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel195.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel195.setText("Location Details");
        jPanel80.add(jLabel195, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        jLabel196.setText("Province");
        jPanel80.add(jLabel196, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 90, 30));

        jLabel197.setText("District");
        jPanel80.add(jLabel197, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 90, 30));

        jPanel80.add(iline7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 170, 30));

        jPanel80.add(iline8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 170, 30));
        jPanel80.add(iline9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 170, 30));

        jLabel198.setText("ZIP Code");
        jPanel80.add(jLabel198, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 90, 30));

        jLabel199.setText("Register Date:*");
        jPanel80.add(jLabel199, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 90, 30));

        jLabel200.setText("Line1:*");
        jPanel80.add(jLabel200, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 90, 20));
        jPanel80.add(iline10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 180, 30));
        jPanel80.add(iline11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 180, 30));

        jLabel201.setText("Line2:*");
        jPanel80.add(jLabel201, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 90, 20));

        jLabel202.setText("Line3:");
        jPanel80.add(jLabel202, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 90, 20));
        jPanel80.add(iline12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 180, 30));
        jPanel80.add(irdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, 170, 30));

        jPanel29.add(jPanel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, 550, 210));

        jButton42.setText("Update Institute");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 160, 50));

        jButton41.setText("Clear Fields");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton41, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, 160, 50));

        institutetab.addTab("Search Institute", jPanel29);

        jPanel20.add(institutetab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1380, 630));

        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/student001.png"))); // NOI18N
        jPanel20.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        manins.addTab("Institute", jPanel20);

        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        calender.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        calender.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Monday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        calender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calenderMouseClicked(evt);
            }
        });
        calender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calenderKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(calender);

        jPanel16.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 260, 150));

        twendsday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Wednesday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        twendsday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twendsdayMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(twendsday);

        jPanel16.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 120, 270, 150));

        tthuesday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tuesday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tthuesday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tthuesdayMouseClicked(evt);
            }
        });
        jScrollPane31.setViewportView(tthuesday);

        jPanel16.add(jScrollPane31, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 260, 150));

        tsaturday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Saturday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tsaturday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tsaturdayMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tsaturday);

        jPanel16.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 270, 150));

        tsunday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sunday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tsunday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tsundayMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tsunday);

        jPanel16.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 400, 260, 150));

        tthursady.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thursday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tthursady.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tthursadyMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(tthursady);

        jPanel16.add(jScrollPane17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 120, 260, 150));

        tfriday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Friday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tfriday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfridayMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(tfriday);

        jPanel16.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 260, 150));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/calendarBG.png"))); // NOI18N
        jLabel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel6MouseMoved(evt);
            }
        });
        jPanel16.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1380, 590));

        manins.addTab("Calendar", jPanel16);

        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sctable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Teacher Name", "Hall No", "Star Time", "End Time", "Date", "Type", "Status"
            }
        ));
        jScrollPane2.setViewportView(sctable);

        jPanel17.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1340, 420));

        jPanel31.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel31.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel8.setText("Subject");
        jPanel31.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 60, 30));

        jLabel9.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel9.setText("    Add Details");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel31.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 150, 40));

        jLabel10.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel10.setText("Teacher Name");
        jPanel31.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, 30));

        jLabel11.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel11.setText("Hall Number");
        jPanel31.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 120, 30));

        jLabel12.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel12.setText("Type:");
        jPanel31.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 50, 70, 30));

        schallday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Active", "Inactive", "Scheduled" }));
        jPanel31.add(schallday, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 140, 30));

        jButton3.setText("Add Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 10, 130, 30));

        jLabel15.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel15.setText("Status");
        jPanel31.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 20, -1, -1));

        jLabel149.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel149.setText("End Time");
        jPanel31.add(jLabel149, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 90, 30));

        iset.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel31.add(iset, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, 120, 30));

        classteacher.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel31.add(classteacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 200, 30));

        ihallset.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel31.add(ihallset, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 200, 30));

        classsub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        classsub.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classsubItemStateChanged(evt);
            }
        });
        classsub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classsubMouseClicked(evt);
            }
        });
        jPanel31.add(classsub, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 160, 30));

        schalltime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        schalltime.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                schalltimeItemStateChanged(evt);
            }
        });
        jPanel31.add(schalltime, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 130, 30));

        jButton27.setText("Schedule Slot");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 90, 130, 30));

        endtime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel31.add(endtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 130, 30));

        jLabel180.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel180.setText("Start Time");
        jPanel31.add(jLabel180, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 90, 30));

        jLabel181.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel181.setText("Day :");
        jPanel31.add(jLabel181, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 90, 30));

        mass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mass", "Group", "Small", "Paper" }));
        jPanel31.add(mass, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 50, 140, 30));

        jButton35.setText("Deactive class");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton35, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 50, 130, 30));

        jButton36.setText("View All Classes");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton36, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 60, 130, 30));

        jButton14.setText("Class Report");
        jPanel31.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 100, 130, -1));

        jPanel17.add(jPanel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 1350, 150));

        jLabel486.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel486.setText("Class Schedule");
        jPanel17.add(jLabel486, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        manins.addTab("Class Schedule", jPanel17);

        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        examtab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel76.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel155.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel155.setText("Add New Examination Schedule");
        jPanel76.add(jLabel155, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        jLabel65.setText("Select Required Class ");
        jPanel76.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher Name"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(table1);

        jPanel76.add(jScrollPane20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 290, 250));

        jLabel51.setText("Select Required Subject ");
        jPanel76.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, 30));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject"
            }
        ));
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane21.setViewportView(table2);

        jPanel76.add(jScrollPane21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 290, 80));

        jLabel64.setText("Select Required Students");
        jPanel76.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, 20));

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index ID", "Student ID", "Full Name"
            }
        ));
        jScrollPane19.setViewportView(table3);

        jPanel76.add(jScrollPane19, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 470, 470));

        jPanel75.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Examination Schedule"));
        jPanel75.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel66.setText("Examination ID");
        jPanel75.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 100, -1));

        examdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examdateMouseClicked(evt);
            }
        });
        examdate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                examdateInputMethodTextChanged(evt);
            }
        });
        jPanel75.add(examdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 220, -1));

        jLabel76.setText(" Examination Date");
        jPanel75.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 120, 20));

        sete.setText("Auto Generated Exam ID");
        jPanel75.add(sete, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 220, 30));

        jLabel186.setText("Teacher-In-Charge");
        jPanel75.add(jLabel186, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 150, 30));

        jLabel188.setText("Teacher-In-Charge");
        jPanel75.add(jLabel188, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jButton38.setText("Clear");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });
        jPanel75.add(jButton38, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 100, 50));

        jButton39.setText("Schedule Exam");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });
        jPanel75.add(jButton39, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 120, 60));

        jLabel432.setText("Time Slot");
        jPanel75.add(jLabel432, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 100, 20));

        jButton49.setText("Generate Data");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });
        jPanel75.add(jButton49, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 110, 40));

        jLabel189.setText("Hall NO:");
        jPanel75.add(jLabel189, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 100, 30));

        jPanel75.add(jComboBox33, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 160, 30));

        jComboBox34.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel75.add(jComboBox34, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 160, 30));

        jPanel76.add(jPanel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 100, 430, 480));

        examtab.addTab("view Exams", jPanel76);

        jPanel77.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel433.setText("Search Date:");
        jPanel77.add(jLabel433, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 100, 50));
        jPanel77.add(searchdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 240, 30));

        jButton50.setText("Search");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });
        jPanel77.add(jButton50, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 120, 40));

        viewallex.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Exam ID", "Exam Name", "Teacher In-Charge", "Hall No", "No. of Students", "Status"
            }
        ));
        viewallex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewallexMouseClicked(evt);
            }
        });
        jScrollPane22.setViewportView(viewallex);

        jPanel77.add(jScrollPane22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 1250, 410));

        jButton51.setText("Change Status");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });
        jPanel77.add(jButton51, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 540, 150, 50));

        jLabel485.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel485.setText("Examination Schedule");
        jPanel77.add(jLabel485, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        jButton7.setText("Generate Exam Result");
        jPanel77.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 540, 170, 50));

        examtab.addTab("Edit Exams", jPanel77);

        jPanel18.add(examtab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1370, 600));

        jLabel75.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/student002.png"))); // NOI18N
        jPanel18.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 80, 290));

        manins.addTab("Examinations", jPanel18);

        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        coursecontenttab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel56.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel138.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel138.setText("New Stream Registration");
        jPanel56.add(jLabel138, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        jPanel59.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "New Stream"));
        jPanel59.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setText("Status");
        jPanel59.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 70, 40));

        jLabel21.setText("Stream ID");
        jPanel59.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 30));

        jLabel129.setText("Stream Name");
        jPanel59.add(jLabel129, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 30));

        rstreamname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstreamnameActionPerformed(evt);
            }
        });
        rstreamname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rstreamnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rstreamnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rstreamnameKeyTyped(evt);
            }
        });
        jPanel59.add(rstreamname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 220, -1));

        rstreamid.setEditable(false);
        jPanel59.add(rstreamid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 220, -1));

        rstreamlevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "level 1", "level 2", "level 3" }));
        jPanel59.add(rstreamlevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 220, -1));

        jLabel452.setText("Stream Level");
        jPanel59.add(jLabel452, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 40));

        ssactive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel59.add(ssactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 220, -1));

        jPanel56.add(jPanel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 390, 200));

        jButton26.setText("Save");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel56.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 120, 60));

        jButton23.setText("Remove Subject");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel56.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 130, 60));

        bbbbbbbbb.setText("Search");
        bbbbbbbbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbbbbbbbbActionPerformed(evt);
            }
        });
        jPanel56.add(bbbbbbbbb, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 130, 60));

        jButton25.setText("Clear");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel56.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 540, 120, 60));

        jButton2.setText("Add Subject ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel56.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 150, 60));

        streamsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remove Action", "Subject ID", "Subject Name", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(streamsubject);

        jPanel56.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 810, 520));

        jButton76.setText("Update stream(only)");
        jButton76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton76ActionPerformed(evt);
            }
        });
        jPanel56.add(jButton76, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 150, 60));

        coursecontenttab.addTab("Register Stream", jPanel56);

        jPanel57.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel139.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel139.setText("New Subject Registration");
        jPanel57.add(jLabel139, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        newsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Delete Action", "Subject ID", "Subject Name", "Status", "payment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        newsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newsubjectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newsubjectMouseEntered(evt);
            }
        });
        jScrollPane5.setViewportView(newsubject);

        jPanel57.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1220, 410));

        jPanel60.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel60.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel141.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel141.setText("    Add Details");
        jLabel141.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel60.add(jLabel141, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 150, 50));

        jLabel142.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel142.setText("Subject ID :");
        jPanel60.add(jLabel142, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, 30));

        setstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel60.add(setstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 20, 150, -1));

        jLabel147.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel147.setText("Status");
        jPanel60.add(jLabel147, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, -1, 30));

        setid.setEditable(false);
        jPanel60.add(setid, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 210, 30));

        subpaymentset.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        subpaymentset.setText("Payment:*(Rs)");
        jPanel60.add(subpaymentset, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 120, 30));
        jPanel60.add(setname, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 200, 30));

        jButton28.setText("Save Table Data");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        jPanel60.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 10, 150, 40));

        jButton32.setText("Add Details");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        jPanel60.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 50, 220, 30));

        jLabel184.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        jLabel184.setText("Subject Name :*");
        jPanel60.add(jLabel184, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 130, 30));

        spayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spaymentKeyTyped(evt);
            }
        });
        jPanel60.add(spayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 200, 30));

        jButton77.setText("Update Data");
        jButton77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton77ActionPerformed(evt);
            }
        });
        jPanel60.add(jButton77, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 60, 150, 30));

        jPanel57.add(jPanel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 1240, 120));

        coursecontenttab.addTab("Register Subject", jPanel57);

        jPanel21.add(coursecontenttab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1370, 630));

        jLabel77.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/student003.png"))); // NOI18N
        jPanel21.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 90, 290));

        manins.addTab("Cource Content", jPanel21);

        jPanel6.add(manins, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 640));

        Hometab.addTab("", jPanel6);

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Studenttab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel113.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel113.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        serchsid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serchsidActionPerformed(evt);
            }
        });
        serchsid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serchsidKeyReleased(evt);
            }
        });
        jPanel113.add(serchsid, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 250, 30));

        jLabel460.setText("Student NIC:");
        jPanel113.add(jLabel460, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 26, -1, 30));

        jButton43.setText("Search");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        jPanel113.add(jButton43, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 120, 60));

        jButton79.setText("Student Portal");
        jButton79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton79ActionPerformed(evt);
            }
        });
        jPanel113.add(jButton79, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 120, 60));

        jPanel22.add(jPanel113, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 370, 150));

        jPanel30.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel30.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel30.add(sa3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 280, 260));

        jPanel22.add(jPanel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 300, 280));

        jLabel204.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel204.setText("Name ");
        jPanel22.add(jLabel204, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 70, 20));

        jLabel205.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel205.setText("NIC Number");
        jPanel22.add(jLabel205, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 110, -1));

        sa1.setText("Student Name");
        jPanel22.add(sa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 540, 240, -1));

        sa2.setText("Student NIC");
        jPanel22.add(sa2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 580, 250, 20));

        jPanel58.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel58.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel220.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel220.setText("Name ");
        jPanel58.add(jLabel220, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 27, 70, -1));

        jLabel221.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel221.setText("Date of Birth");
        jPanel58.add(jLabel221, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 120, -1));

        jLabel222.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel222.setText("NIC Number");
        jPanel58.add(jLabel222, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, -1));

        jLabel223.setText("Gender:");
        jPanel58.add(jLabel223, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 110, 30));

        jLabel224.setText("Religion");
        jPanel58.add(jLabel224, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 50, 30));

        jLabel225.setText("Nationality");
        jPanel58.add(jLabel225, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 80, -1));
        jPanel58.add(sa12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 170, 30));
        jPanel58.add(sa11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 360, 30));
        jPanel58.add(sa4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 130, 30));
        jPanel58.add(sa5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 120, 30));
        jPanel58.add(sa6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 120, 30));
        jPanel58.add(sa7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 170, 30));

        jPanel22.add(jPanel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 860, 160));

        jPanel83.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel83.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel232.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel232.setText("Line 1");
        jPanel83.add(jLabel232, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel233.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel233.setText("Line 2");
        jPanel83.add(jLabel233, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel234.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel234.setText("Line 3");
        jPanel83.add(jLabel234, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel235.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel235.setText("Zone");
        jPanel83.add(jLabel235, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 40, 30));

        jLabel236.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel236.setText("Country");
        jPanel83.add(jLabel236, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jLabel237.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel237.setText("Exam Year:");
        jPanel83.add(jLabel237, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 90, 40));

        jPanel84.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel84.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel238.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel238.setText("Line 1");
        jPanel84.add(jLabel238, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel239.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel239.setText("Line 2");
        jPanel84.add(jLabel239, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel240.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel240.setText("Line 3");
        jPanel84.add(jLabel240, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel241.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel241.setText("Zone");
        jPanel84.add(jLabel241, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel242.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel242.setText("Country");
        jPanel84.add(jLabel242, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel243.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel243.setText("Exam Year:");
        jPanel84.add(jLabel243, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel83.add(jPanel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));
        jPanel83.add(a11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 120, 30));
        jPanel83.add(a12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 120, 30));
        jPanel83.add(a13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 120, 30));
        jPanel83.add(a14, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 110, 30));
        jPanel83.add(a15, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 110, 30));
        jPanel83.add(dsd, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 150, 40));

        jLabel206.setText("Email");
        jPanel83.add(jLabel206, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, 60, -1));

        jLabel207.setText("Telephone:");
        jPanel83.add(jLabel207, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, -1));

        jLabel208.setText("Land No:");
        jPanel83.add(jLabel208, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 60, -1));
        jPanel83.add(ra3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 110, 30));
        jPanel83.add(ra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 110, 30));
        jPanel83.add(ra2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 70, 110, 30));

        jPanel22.add(jPanel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 860, 160));

        jPanel81.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel81.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel82.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel82.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel226.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel226.setText("Line 1");
        jPanel82.add(jLabel226, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel227.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel227.setText("Line 2");
        jPanel82.add(jLabel227, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel228.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel228.setText("Line 3");
        jPanel82.add(jLabel228, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel229.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel229.setText("Zone");
        jPanel82.add(jLabel229, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel230.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel230.setText("Country");
        jPanel82.add(jLabel230, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel231.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel231.setText("Exam Year:");
        jPanel82.add(jLabel231, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel81.add(jPanel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        studentsub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Name", "Teacher Name"
            }
        ));
        jScrollPane25.setViewportView(studentsub);

        jPanel81.add(jScrollPane25, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 550, 110));

        jButton44.setText("Update");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });
        jPanel81.add(jButton44, new org.netbeans.lib.awtextra.AbsoluteConstraints(689, 30, 140, 70));

        jPanel22.add(jPanel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 860, 160));

        jLabel491.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel491.setText("Student Infomation");
        jPanel22.add(jLabel491, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 40));

        Studenttab.addTab("Student Info", jPanel22);

        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel261.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel261.setText("Student Registration");
        jPanel23.add(jLabel261, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jPanel88.setBorder(javax.swing.BorderFactory.createTitledBorder("Basic Information"));
        jPanel88.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel262.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel262.setText("Name *");
        jPanel88.add(jLabel262, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 70, -1));
        jPanel88.add(smiddle, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 180, 30));

        nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicActionPerformed(evt);
            }
        });
        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nicKeyTyped(evt);
            }
        });
        jPanel88.add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 150, 30));
        jPanel88.add(region, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 140, 30));

        jLabel263.setText("Last *");
        jPanel88.add(jLabel263, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 40, -1));

        jLabel264.setText("Middle");
        jPanel88.add(jLabel264, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 40, -1));

        jLabel265.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel265.setText("Date of Birth*");
        jPanel88.add(jLabel265, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 100, 20));

        jLabel266.setText("First *");
        jPanel88.add(jLabel266, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 40, -1));
        jPanel88.add(sfirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 190, 30));

        jLabel267.setText("Nationality");
        jPanel88.add(jLabel267, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 60, -1));

        jLabel268.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel268.setText("NIC Number*");
        jPanel88.add(jLabel268, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 125, 90, 20));
        jPanel88.add(slast, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 180, 30));

        jLabel269.setText("Religion");
        jPanel88.add(jLabel269, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, -1, -1));
        jPanel88.add(nat, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 140, 30));
        jPanel88.add(studentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 120, 70, 20));

        jLabel270.setText("Gender:");
        jPanel88.add(jLabel270, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 90, 30));

        male.setSelected(true);
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });
        jPanel88.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, -1, -1));

        female.setText("Female");
        jPanel88.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, -1));

        jLabel271.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel271.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel271.setText("V");
        jPanel88.add(jLabel271, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 20, 30));
        jPanel88.add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 190, 30));

        jPanel23.add(jPanel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 820, 170));

        jPanel89.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));
        jPanel89.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel89.add(line1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 140, 30));
        jPanel89.add(line2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 140, 30));

        line3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line3ActionPerformed(evt);
            }
        });
        jPanel89.add(line3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 140, 30));

        jLabel272.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel272.setText("Line 3");
        jPanel89.add(jLabel272, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel273.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel273.setText("Country");
        jPanel89.add(jLabel273, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel274.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel274.setText("Line 2*");
        jPanel89.add(jLabel274, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 50, 20));

        jPanel89.add(country, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 140, 30));

        jLabel275.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel275.setText("Line 1*");
        jPanel89.add(jLabel275, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 50, 20));

        jPanel89.add(zone, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 140, 30));

        jLabel276.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel276.setText("Exam Year:");
        jPanel89.add(jLabel276, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 90, 30));

        jLabel277.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel277.setText("Zone");
        jPanel89.add(jLabel277, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 40, 20));

        eyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        jPanel89.add(eyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 140, 30));

        jPanel23.add(jPanel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 820, 160));

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane2.setOpaque(true);

        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel80.setText("Motherr's Occupation");
        jPanel19.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, -1, 30));

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel81.setText("Father's Occupation");
        jPanel19.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 30));

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel82.setText("Mother's Mobile No.");
        jPanel19.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, 30));

        smotherphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                smotherphoneKeyTyped(evt);
            }
        });
        jPanel19.add(smotherphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 200, 30));

        sfatherphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sfatherphoneKeyTyped(evt);
            }
        });
        jPanel19.add(sfatherphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 200, 30));

        sfather.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfatherActionPerformed(evt);
            }
        });
        sfather.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sfatherKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sfatherKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sfatherKeyTyped(evt);
            }
        });
        jPanel19.add(sfather, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 200, 30));

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel84.setText("Mother's Name");
        jPanel19.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, 30));
        jPanel19.add(smother, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, 200, 30));

        jLabel88.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel88.setText("Father's Name");
        jPanel19.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 30));

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel89.setText("Father's Mobile No.");
        jPanel19.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 30));
        jPanel19.add(sfathero, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 200, 30));
        jPanel19.add(smothero, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, 200, 30));

        jTabbedPane2.addTab("Parent Information", jPanel19);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel90.setText("Address");
        jPanel4.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel143.setText("Relation");
        jPanel4.add(jLabel143, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, -1));

        jLabel162.setText("Line 2*");
        jPanel4.add(jLabel162, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        jLabel210.setText("Guardian Name*");
        jPanel4.add(jLabel210, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 20));
        jPanel4.add(gline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 190, 30));

        gmobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gmobileKeyTyped(evt);
            }
        });
        jPanel4.add(gmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 190, 30));
        jPanel4.add(gline3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 190, 30));
        jPanel4.add(gline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 190, 30));

        jLabel211.setText("Line 3");
        jPanel4.add(jLabel211, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, -1));

        jLabel212.setText("Line 1*");
        jPanel4.add(jLabel212, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));
        jPanel4.add(guardianname, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 190, 30));

        gland.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                glandKeyTyped(evt);
            }
        });
        jPanel4.add(gland, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 190, 30));

        jLabel213.setText("LandLine No:");
        jPanel4.add(jLabel213, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, 20));

        jLabel244.setText("Mobile No:");
        jPanel4.add(jLabel244, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 70, -1));
        jPanel4.add(go, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 190, 30));

        jLabel245.setText("Occupation");
        jPanel4.add(jLabel245, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        grelation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Father", "Mother", "Other" }));
        jPanel4.add(grelation, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 190, 30));

        jTabbedPane2.addTab("Guradian Information", jPanel4);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel246.setText("Passed Level ");
        jPanel3.add(jLabel246, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        ezone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "Colombo.Kandy", "Gampha", "other" }));
        jPanel3.add(ezone, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 150, 30));

        jLabel247.setText("Education Zone");
        jPanel3.add(jLabel247, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 10, 90, 30));

        passedlevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O/L", "A/L" }));
        jPanel3.add(passedlevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 150, 30));

        jLabel248.setText("School Name");
        jPanel3.add(jLabel248, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 14, -1, 20));
        jPanel3.add(schoolname, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 210, 30));

        jLabel249.setText("Comments");
        jPanel3.add(jLabel249, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 30));

        comments.setColumns(20);
        comments.setRows(5);
        jScrollPane23.setViewportView(comments);

        jPanel3.add(jScrollPane23, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 700, 120));

        jTabbedPane2.addTab("Previous Education Information", jPanel3);

        jPanel85.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel250.setText("Main Stream");
        jPanel85.add(jLabel250, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        s1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        s1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                s1ItemStateChanged(evt);
            }
        });
        s1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s1MouseClicked(evt);
            }
        });
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        jPanel85.add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 140, 20));

        jLabel251.setText("Subject 2");
        jPanel85.add(jLabel251, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        jLabel252.setText("Subject 3");
        jPanel85.add(jLabel252, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, -1, -1));

        jLabel253.setText("Subject 5");
        jPanel85.add(jLabel253, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, -1, -1));

        jLabel254.setText("Subject 1 ");
        jPanel85.add(jLabel254, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel255.setText("Subject 4");
        jPanel85.add(jLabel255, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        s2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        s2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                s2ItemStateChanged(evt);
            }
        });
        s2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s2MouseClicked(evt);
            }
        });
        jPanel85.add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 140, 20));

        s3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        s3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                s3ItemStateChanged(evt);
            }
        });
        s3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s3MouseClicked(evt);
            }
        });
        jPanel85.add(s3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 140, 20));

        s4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        s4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                s4ItemStateChanged(evt);
            }
        });
        s4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s4MouseClicked(evt);
            }
        });
        jPanel85.add(s4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 140, 20));

        s5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        s5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                s5ItemStateChanged(evt);
            }
        });
        s5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s5MouseClicked(evt);
            }
        });
        jPanel85.add(s5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 140, 20));

        mins.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select one stream" }));
        mins.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                minsItemStateChanged(evt);
            }
        });
        mins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minsMouseClicked(evt);
            }
        });
        jPanel85.add(mins, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 170, 30));

        t5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select data" }));
        t5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t5ItemStateChanged(evt);
            }
        });
        t5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                t5MouseEntered(evt);
            }
        });
        jPanel85.add(t5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 140, 20));

        t1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select data" }));
        t1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t1ItemStateChanged(evt);
            }
        });
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });
        jPanel85.add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 140, 20));

        t2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select data" }));
        t2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t2ItemStateChanged(evt);
            }
        });
        t2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t2MouseClicked(evt);
            }
        });
        jPanel85.add(t2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 140, 20));

        t3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select data" }));
        t3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t3ItemStateChanged(evt);
            }
        });
        t3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t3MouseClicked(evt);
            }
        });
        jPanel85.add(t3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 140, 20));

        t4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select data" }));
        t4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t4ItemStateChanged(evt);
            }
        });
        t4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t4MouseClicked(evt);
            }
        });
        jPanel85.add(t4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 140, 20));

        g5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select" }));
        jPanel85.add(g5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, 140, 30));

        g1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select" }));
        jPanel85.add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, 30));

        g2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select" }));
        jPanel85.add(g2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 140, 30));

        g3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select" }));
        jPanel85.add(g3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 140, 30));

        g4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please select" }));
        jPanel85.add(g4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 140, 30));

        jTabbedPane2.addTab("Subject Registration", jPanel85);

        jPanel86.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mhKeyTyped(evt);
            }
        });
        jPanel86.add(mh, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 114, 290, 32));

        mtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mtpKeyTyped(evt);
            }
        });
        jPanel86.add(mtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 59, 290, 32));
        jPanel86.add(email1, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 59, 290, 32));

        jLabel256.setText("Mobile Number:*");
        jPanel86.add(jLabel256, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 63, 90, 24));

        jLabel257.setText("Email:");
        jPanel86.add(jLabel257, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 40, 24));

        jLabel258.setText("Home Number:");
        jPanel86.add(jLabel258, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 118, 90, 24));

        jLabel259.setText("Contact Information:*");
        jPanel86.add(jLabel259, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 151, 24));

        jLabel260.setText("Other:");
        jPanel86.add(jLabel260, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 40, 24));

        other.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                otherKeyTyped(evt);
            }
        });
        jPanel86.add(other, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 114, 290, 32));

        jTabbedPane2.addTab("Current Information", jPanel86);

        jPanel23.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 820, 210));

        jPanel87.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel87.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        profile.setText("Image Comes Here");
        jPanel87.add(profile, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 7, 310, 300));

        jPanel23.add(jPanel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 320, 310));

        jButton24.setText("Browse");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel23.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 360, 80, 40));

        jButton45.setText("WebCam");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });
        jPanel23.add(jButton45, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 360, 80, 40));

        clear.setText("Clear Fields");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel23.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 560, 100, 50));

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel23.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 560, 110, 50));

        jLabel278.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel278.setText("Enrollment Date :");
        jPanel23.add(jLabel278, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 130, 40));

        todate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        todate.setText("Mar 17, 2017");
        jPanel23.add(todate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 110, 40));

        jLabel108.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel108.setText("INDEX ID COMES HERE");
        jLabel108.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel23.add(jLabel108, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 430, 220, 30));

        Studenttab.addTab("Student Registration", jPanel23);

        jPanel24.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel119.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel129.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel129.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sb3.setText("jLabel189");
        jPanel129.add(sb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 150));

        jPanel119.add(jPanel129, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, 170));

        jPanel130.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel130.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel461.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel461.setText("Name ");
        jPanel130.add(jLabel461, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 20));

        jLabel462.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel462.setText("Date of Birth");
        jPanel130.add(jLabel462, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 120, 20));

        jLabel463.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel463.setText("NIC Number");
        jPanel130.add(jLabel463, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 30));

        jLabel464.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel464.setText("Gender:");
        jPanel130.add(jLabel464, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 110, 30));
        jPanel130.add(sb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 180, 30));
        jPanel130.add(sb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 230, 30));
        jPanel130.add(sb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 110, 20));
        jPanel130.add(sb5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 120, 20));

        jPanel119.add(jPanel130, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 390, 180));

        jPanel131.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel131.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel465.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel465.setText("Line 1");
        jPanel131.add(jLabel465, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel466.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel466.setText("Line 2");
        jPanel131.add(jLabel466, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel467.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel467.setText("Line 3");
        jPanel131.add(jLabel467, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel468.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel468.setText("Zone");
        jPanel131.add(jLabel468, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 40, 20));

        jLabel469.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel469.setText("Country");
        jPanel131.add(jLabel469, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jPanel90.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel90.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel470.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel470.setText("Line 1");
        jPanel90.add(jLabel470, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel471.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel471.setText("Line 2");
        jPanel90.add(jLabel471, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel472.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel472.setText("Line 3");
        jPanel90.add(jLabel472, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel473.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel473.setText("Zone");
        jPanel90.add(jLabel473, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel474.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel474.setText("Country");
        jPanel90.add(jLabel474, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel475.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel475.setText("Exam Year:");
        jPanel90.add(jLabel475, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel131.add(jPanel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));
        jPanel131.add(b10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 130, 20));
        jPanel131.add(b12, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 130, 30));
        jPanel131.add(b11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 120, 30));
        jPanel131.add(b13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 120, 20));
        jPanel131.add(b14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 90, 30));

        jLabel442.setText("Email");
        jPanel131.add(jLabel442, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 70, -1));
        jPanel131.add(rb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 90, 30));
        jPanel131.add(rb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 100, 30));
        jPanel131.add(rb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 100, 20));

        jLabel441.setText("Landnu");
        jPanel131.add(jLabel441, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 70, 20));

        jLabel440.setText("Telephone:");
        jPanel131.add(jLabel440, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 24, 80, 20));

        jPanel119.add(jPanel131, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 570, 150));

        jPanel91.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel91.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel92.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel92.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel476.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel476.setText("Line 1");
        jPanel92.add(jLabel476, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel477.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel477.setText("Line 2");
        jPanel92.add(jLabel477, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel478.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel478.setText("Line 3");
        jPanel92.add(jLabel478, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel479.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel479.setText("Zone");
        jPanel92.add(jLabel479, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel480.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel480.setText("Country");
        jPanel92.add(jLabel480, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel481.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel481.setText("Exam Year:");
        jPanel92.add(jLabel481, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel91.add(jPanel92, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel482.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel482.setText("Exam Year:");
        jPanel91.add(jLabel482, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 90, 30));

        jLabel209.setText("jLabel209");
        jPanel91.add(jLabel209, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 100, 30));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Name", "Teacher Name"
            }
        ));
        jScrollPane26.setViewportView(jTable3);

        jPanel91.add(jScrollPane26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 460, 110));

        jPanel119.add(jPanel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 570, 180));

        jPanel24.add(jPanel119, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 590, 550));

        jPanel132.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel93.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel93.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sc3.setText("jLabel189");
        jPanel93.add(sc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 150));

        jPanel132.add(jPanel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, 150));

        jPanel97.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel97.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel98.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel98.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel288.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel288.setText("Line 1");
        jPanel98.add(jLabel288, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel289.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel289.setText("Line 2");
        jPanel98.add(jLabel289, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel290.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel290.setText("Line 3");
        jPanel98.add(jLabel290, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel291.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel291.setText("Zone");
        jPanel98.add(jLabel291, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel292.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel292.setText("Country");
        jPanel98.add(jLabel292, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel293.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel293.setText("Exam Year:");
        jPanel98.add(jLabel293, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel97.add(jPanel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel294.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel294.setText("Main Stream");
        jPanel97.add(jLabel294, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        jLabel281.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel281.setText("Exam Year:");
        jPanel97.add(jLabel281, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 40));

        jPanel99.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel99.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel100.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel100.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel300.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel300.setText("Line 1");
        jPanel100.add(jLabel300, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel301.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel301.setText("Line 2");
        jPanel100.add(jLabel301, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel302.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel302.setText("Line 3");
        jPanel100.add(jLabel302, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel303.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel303.setText("Zone");
        jPanel100.add(jLabel303, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel304.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel304.setText("Country");
        jPanel100.add(jLabel304, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel305.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel305.setText("Exam Year:");
        jPanel100.add(jLabel305, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel99.add(jPanel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel306.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel306.setText("Main Stream");
        jPanel99.add(jLabel306, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel307.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel307.setText("Subject 1 ");
        jPanel99.add(jLabel307, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel308.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel308.setText("Subject 2");
        jPanel99.add(jLabel308, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel309.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel309.setText("Subject 3");
        jPanel99.add(jLabel309, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel310.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel310.setText("Subject 4");
        jPanel99.add(jLabel310, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel311.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel311.setText("Subject 5");
        jPanel99.add(jLabel311, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel312.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel312.setText("Exam Year:");
        jPanel99.add(jLabel312, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel99.add(jComboBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel99.add(jComboBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel99.add(jComboBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel105.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel105.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel106.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel106.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel339.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel339.setText("Line 1");
        jPanel106.add(jLabel339, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel340.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel340.setText("Line 2");
        jPanel106.add(jLabel340, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel341.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel341.setText("Line 3");
        jPanel106.add(jLabel341, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel342.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel342.setText("Zone");
        jPanel106.add(jLabel342, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel343.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel343.setText("Country");
        jPanel106.add(jLabel343, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel344.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel344.setText("Exam Year:");
        jPanel106.add(jLabel344, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel105.add(jPanel106, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel345.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel345.setText("Main Stream");
        jPanel105.add(jLabel345, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel346.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel346.setText("Subject 1 ");
        jPanel105.add(jLabel346, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel347.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel347.setText("Subject 2");
        jPanel105.add(jLabel347, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel348.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel348.setText("Subject 3");
        jPanel105.add(jLabel348, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel349.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel349.setText("Subject 4");
        jPanel105.add(jLabel349, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel350.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel350.setText("Subject 5");
        jPanel105.add(jLabel350, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel351.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel351.setText("Exam Year:");
        jPanel105.add(jLabel351, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel105.add(jComboBox19, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox20.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel105.add(jComboBox20, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel105.add(jComboBox21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel107.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel107.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel108.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel108.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel352.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel352.setText("Line 1");
        jPanel108.add(jLabel352, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel353.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel353.setText("Line 2");
        jPanel108.add(jLabel353, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel354.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel354.setText("Line 3");
        jPanel108.add(jLabel354, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel355.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel355.setText("Zone");
        jPanel108.add(jLabel355, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel356.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel356.setText("Country");
        jPanel108.add(jLabel356, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel357.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel357.setText("Exam Year:");
        jPanel108.add(jLabel357, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel107.add(jPanel108, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel358.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel358.setText("Main Stream");
        jPanel107.add(jLabel358, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel359.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel359.setText("Subject 1 ");
        jPanel107.add(jLabel359, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel360.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel360.setText("Subject 2");
        jPanel107.add(jLabel360, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel361.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel361.setText("Subject 3");
        jPanel107.add(jLabel361, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel362.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel362.setText("Subject 4");
        jPanel107.add(jLabel362, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel363.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel363.setText("Subject 5");
        jPanel107.add(jLabel363, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel364.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel364.setText("Exam Year:");
        jPanel107.add(jLabel364, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox22.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel107.add(jComboBox22, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox23.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel107.add(jComboBox23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox24.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel107.add(jComboBox24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel105.add(jPanel107, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel109.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel109.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel110.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel110.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel365.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel365.setText("Line 1");
        jPanel110.add(jLabel365, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel366.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel366.setText("Line 2");
        jPanel110.add(jLabel366, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel367.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel367.setText("Line 3");
        jPanel110.add(jLabel367, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel368.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel368.setText("Zone");
        jPanel110.add(jLabel368, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel369.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel369.setText("Country");
        jPanel110.add(jLabel369, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel370.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel370.setText("Exam Year:");
        jPanel110.add(jLabel370, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel109.add(jPanel110, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel371.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel371.setText("Main Stream");
        jPanel109.add(jLabel371, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel372.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel372.setText("Subject 1 ");
        jPanel109.add(jLabel372, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel373.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel373.setText("Subject 2");
        jPanel109.add(jLabel373, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel374.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel374.setText("Subject 3");
        jPanel109.add(jLabel374, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel375.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel375.setText("Subject 4");
        jPanel109.add(jLabel375, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel376.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel376.setText("Subject 5");
        jPanel109.add(jLabel376, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel377.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel377.setText("Exam Year:");
        jPanel109.add(jLabel377, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox25.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel109.add(jComboBox25, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox26.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel109.add(jComboBox26, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox27.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel109.add(jComboBox27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel111.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel111.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel112.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel112.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel378.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel378.setText("Line 1");
        jPanel112.add(jLabel378, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel379.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel379.setText("Line 2");
        jPanel112.add(jLabel379, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel380.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel380.setText("Line 3");
        jPanel112.add(jLabel380, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel381.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel381.setText("Zone");
        jPanel112.add(jLabel381, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel382.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel382.setText("Country");
        jPanel112.add(jLabel382, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel383.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel383.setText("Exam Year:");
        jPanel112.add(jLabel383, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel111.add(jPanel112, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel384.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel384.setText("Main Stream");
        jPanel111.add(jLabel384, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel385.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel385.setText("Subject 1 ");
        jPanel111.add(jLabel385, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel386.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel386.setText("Subject 2");
        jPanel111.add(jLabel386, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel387.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel387.setText("Subject 3");
        jPanel111.add(jLabel387, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel388.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel388.setText("Subject 4");
        jPanel111.add(jLabel388, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel389.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel389.setText("Subject 5");
        jPanel111.add(jLabel389, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel390.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel390.setText("Exam Year:");
        jPanel111.add(jLabel390, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox28.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel111.add(jComboBox28, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox29.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel111.add(jComboBox29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox30.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel111.add(jComboBox30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel109.add(jPanel111, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel105.add(jPanel109, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel99.add(jPanel105, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel97.add(jPanel99, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel101.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel101.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel102.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel102.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel313.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel313.setText("Line 1");
        jPanel102.add(jLabel313, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel314.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel314.setText("Line 2");
        jPanel102.add(jLabel314, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel315.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel315.setText("Line 3");
        jPanel102.add(jLabel315, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel316.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel316.setText("Zone");
        jPanel102.add(jLabel316, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel317.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel317.setText("Country");
        jPanel102.add(jLabel317, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel318.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel318.setText("Exam Year:");
        jPanel102.add(jLabel318, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel101.add(jPanel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel319.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel319.setText("Main Stream");
        jPanel101.add(jLabel319, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel320.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel320.setText("Subject 1 ");
        jPanel101.add(jLabel320, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel321.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel321.setText("Subject 2");
        jPanel101.add(jLabel321, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel322.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel322.setText("Subject 3");
        jPanel101.add(jLabel322, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel323.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel323.setText("Subject 4");
        jPanel101.add(jLabel323, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel324.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel324.setText("Subject 5");
        jPanel101.add(jLabel324, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel325.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel325.setText("Exam Year:");
        jPanel101.add(jLabel325, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel101.add(jComboBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel101.add(jComboBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel101.add(jComboBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel103.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Subject Registration"));
        jPanel103.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel104.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel104.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel326.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel326.setText("Line 1");
        jPanel104.add(jLabel326, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel327.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel327.setText("Line 2");
        jPanel104.add(jLabel327, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel328.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel328.setText("Line 3");
        jPanel104.add(jLabel328, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel329.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel329.setText("Zone");
        jPanel104.add(jLabel329, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel330.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel330.setText("Country");
        jPanel104.add(jLabel330, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel331.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel331.setText("Exam Year:");
        jPanel104.add(jLabel331, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel103.add(jPanel104, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));

        jLabel332.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel332.setText("Main Stream");
        jPanel103.add(jLabel332, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel333.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel333.setText("Subject 1 ");
        jPanel103.add(jLabel333, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel334.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel334.setText("Subject 2");
        jPanel103.add(jLabel334, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel335.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel335.setText("Subject 3");
        jPanel103.add(jLabel335, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel336.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel336.setText("Subject 4");
        jPanel103.add(jLabel336, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel337.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel337.setText("Subject 5");
        jPanel103.add(jLabel337, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, -1));

        jLabel338.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel338.setText("Exam Year:");
        jPanel103.add(jLabel338, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 90, 30));

        jComboBox16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel103.add(jComboBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 150, 30));

        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel103.add(jComboBox17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        jComboBox18.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel103.add(jComboBox18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jPanel101.add(jPanel103, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel97.add(jPanel101, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 180));

        jPanel97.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 160, -1));

        jComboBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox7ItemStateChanged(evt);
            }
        });
        jComboBox7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox7MouseClicked(evt);
            }
        });
        jPanel97.add(jComboBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 160, -1));

        setaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Set Action", "Subject Name", "Teacher Name", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane27.setViewportView(setaction);

        jPanel97.add(jScrollPane27, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 390, 90));

        jPanel132.add(jPanel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 570, 160));

        jPanel94.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel94.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel487.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel487.setText("Name ");
        jPanel94.add(jLabel487, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 20));

        jLabel488.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel488.setText("Date of Birth");
        jPanel94.add(jLabel488, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 120, 30));

        jLabel489.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel489.setText("NIC Number");
        jPanel94.add(jLabel489, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 30));

        jLabel490.setText("Gender:");
        jPanel94.add(jLabel490, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 30));
        jPanel94.add(sc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 250, -1));
        jPanel94.add(sc13, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 100, -1));

        buttonGroup1.add(sc52);
        sc52.setText("Female");
        jPanel94.add(sc52, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, -1, -1));

        buttonGroup1.add(sc51);
        sc51.setSelected(true);
        sc51.setText("Male");
        jPanel94.add(sc51, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, -1));
        jPanel94.add(sc4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 250, -1));
        jPanel94.add(sc11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 90, -1));
        jPanel94.add(sc12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 110, -1));

        jPanel132.add(jPanel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 390, 180));

        jButton57.setText("Browse");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });
        jPanel132.add(jButton57, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 80, -1));

        jPanel95.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel95.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel298.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel298.setText("Line 1");
        jPanel95.add(jLabel298, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel299.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel299.setText("Line 2");
        jPanel95.add(jLabel299, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel391.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel391.setText("Line 3");
        jPanel95.add(jLabel391, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel282.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel282.setText("Zone");
        jPanel95.add(jLabel282, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 40, 20));

        jLabel283.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel283.setText("Country");
        jPanel95.add(jLabel283, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 65, -1, 20));

        jPanel96.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address"));
        jPanel96.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel284.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel284.setText("Line 1");
        jPanel96.add(jLabel284, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel285.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel285.setText("Line 2");
        jPanel96.add(jLabel285, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel286.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel286.setText("Line 3");
        jPanel96.add(jLabel286, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel287.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel287.setText("Zone");
        jPanel96.add(jLabel287, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jLabel392.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel392.setText("Country");
        jPanel96.add(jLabel392, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel393.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel393.setText("Exam Year:");
        jPanel96.add(jLabel393, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        jPanel95.add(jPanel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 890, 160));
        jPanel95.add(c11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 190, -1));
        jPanel95.add(c12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 190, -1));
        jPanel95.add(c10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 190, -1));

        jPanel95.add(c14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 180, -1));

        jPanel95.add(c13, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 180, -1));

        jLabel394.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel394.setText("Exam Year:");
        jPanel95.add(jLabel394, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 70, 30));

        jPanel95.add(c15, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 180, 30));

        jLabel446.setText("Telephone:");
        jPanel95.add(jLabel446, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 70, 20));

        jLabel447.setText("Land No:");
        jPanel95.add(jLabel447, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 80, 40));

        jLabel448.setText("Email");
        jPanel95.add(jLabel448, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 70, 20));
        jPanel95.add(rc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 190, 20));
        jPanel95.add(rc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 190, 30));
        jPanel95.add(rc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 190, 30));

        jPanel132.add(jPanel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 570, 170));

        jButton46.setText("Cam");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });
        jPanel132.add(jButton46, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 70, -1));

        jPanel24.add(jPanel132, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 590, 550));

        jButton59.setText("Update");
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });
        jPanel24.add(jButton59, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 570, 200, 50));

        Studenttab.addTab("Student Re-Enroll", jPanel24);

        jPanel7.add(Studenttab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1390, 630));

        jLabel78.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/student004.png"))); // NOI18N
        jPanel7.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 100, 310));

        Hometab.addTab("", jPanel7);

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userstab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel32.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel133.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel133.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel492.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel492.setText("Name ");
        jPanel133.add(jLabel492, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 20));

        jLabel493.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel493.setText("Date of Birth");
        jPanel133.add(jLabel493, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 120, 20));

        jLabel494.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel494.setText("NIC Number");
        jPanel133.add(jLabel494, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 30));

        jLabel495.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel495.setText("Gender:");
        jPanel133.add(jLabel495, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 30));

        xx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xx2ActionPerformed(evt);
            }
        });
        xx2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                xx2KeyReleased(evt);
            }
        });
        jPanel133.add(xx2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 200, 30));
        jPanel133.add(v4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 210, 30));
        jPanel133.add(v11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 160, 20));
        jPanel133.add(v12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 180, 40));

        jPanel32.add(jPanel133, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 370, 180));

        jPanel134.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPanel134.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel496.setText("Mobile Number * : ");
        jPanel134.add(jLabel496, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, 30));

        jLabel497.setText("Land Line *           :");
        jPanel134.add(jLabel497, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 130, 40));

        jLabel498.setText("Email:");
        jPanel134.add(jLabel498, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 84, 151, 40));

        jLabel499.setText("Other:");
        jPanel134.add(jLabel499, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 151, 24));
        jPanel134.add(v15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 220, 20));
        jPanel134.add(v16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 190, 20));
        jPanel134.add(v17, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 170, 20));
        jPanel134.add(v18, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 210, 20));
        jPanel134.add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 270, 30));
        jPanel134.add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 260, 30));
        jPanel134.add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 280, 30));

        jLabel35.setText("Line 1:");
        jPanel134.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        jLabel56.setText("Line 2:");
        jPanel134.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        jLabel94.setText("Line 3:");
        jPanel134.add(jLabel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, -1));

        jLabel95.setText("Address");
        jPanel134.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));
        jPanel134.add(jLabel400, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 190, 20));

        jPanel32.add(jPanel134, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 790, 170));

        jButton65.setText("update");
        jButton65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton65ActionPerformed(evt);
            }
        });
        jPanel32.add(jButton65, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 550, 180, 60));

        jPanel115.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel115.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel115.add(searchstaffimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, 220));

        jPanel32.add(jPanel115, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 220, 240));

        jLabel214.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel214.setText("Find a Staff Member");
        jPanel32.add(jLabel214, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        jButton74.setText("Search User Details");
        jButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton74ActionPerformed(evt);
            }
        });
        jPanel32.add(jButton74, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 190, 30));

        jPanel114.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Access Information"));
        jPanel114.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel402.setText("Access Level:");
        jPanel114.add(jLabel402, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jLabel401.setText("Log status:");
        jPanel114.add(jLabel401, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 80, 30));
        jPanel114.add(jLabel403, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 130, 20));
        jPanel114.add(jLabel404, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 130, 20));

        jLabel405.setText("Status:");
        jPanel114.add(jLabel405, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 80, 30));
        jPanel114.add(jLabel406, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 140, 20));

        jPanel32.add(jPanel114, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 300, 170));

        userstab.addTab("Staff Info", jPanel32);

        jPanel33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel22.setText("Register New Staff Member");
        jPanel33.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        jPanel35.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Name ");
        jPanel35.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 60, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Date of Birth*");
        jPanel35.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 100, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("NIC Number*");
        jPanel35.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 145, 100, 30));

        jLabel26.setText("Gender:");
        jPanel35.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 90, 40));
        jPanel35.add(sna, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 180, -1));

        ssrn4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ssrn4KeyReleased(evt);
            }
        });
        jPanel35.add(ssrn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 170, -1));

        ssrn2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ssrn2KeyReleased(evt);
            }
        });
        jPanel35.add(ssrn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 170, -1));

        jLabel27.setText("Middle");
        jPanel35.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, 20));

        jLabel28.setText("Last *");
        jPanel35.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, 20));

        jLabel29.setText("Title");
        jPanel35.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        snic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snicActionPerformed(evt);
            }
        });
        snic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                snicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                snicKeyTyped(evt);
            }
        });
        jPanel35.add(snic, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 190, -1));

        smale.setSelected(true);
        smale.setText("Male");
        jPanel35.add(smale, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, -1, -1));

        sfemale.setText("Female");
        jPanel35.add(sfemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, -1, -1));

        jLabel30.setText("Nationality");
        jPanel35.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 80, 20));

        jLabel31.setText("Religion");
        jPanel35.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 110, -1, 20));
        jPanel35.add(sre, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 170, -1));

        ssrn3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ssrn3KeyReleased(evt);
            }
        });
        jPanel35.add(ssrn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 170, -1));

        ssrn1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr.", "Rev." }));
        ssrn1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ssrn1ItemStateChanged(evt);
            }
        });
        jPanel35.add(ssrn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 70, -1));

        jLabel32.setText("First *");
        jPanel35.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, -1, 20));

        jPanel36.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel36.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saffimage.setText("Image Comes Here");
        jPanel36.add(saffimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 270, 250));

        jPanel35.add(jPanel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 290, 270));

        jLabel33.setText("Staff ID :");
        jPanel35.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 310, -1, -1));

        sssetid.setText("Staff Id Comes Here");
        jPanel35.add(sssetid, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 310, 190, -1));

        jButton4.setText("Browse");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel35.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 150, 100, 50));

        jButton5.setText("Web Cam");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel35.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 80, 100, 50));

        jPanel37.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Line 1*");
        jPanel37.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 50, -1));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText("Line 2*");
        jPanel37.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 60, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel38.setText("Line 3");
        jPanel37.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel39.setText("Zone");
        jPanel37.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 40, 20));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Country");
        jPanel37.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, 20));
        jPanel37.add(uline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 170, -1));
        jPanel37.add(uline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 170, -1));
        jPanel37.add(uline3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 170, -1));

        jPanel37.add(uline5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 170, -1));

        jPanel37.add(uline4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 170, -1));

        jPanel35.add(jPanel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 720, 140));
        jPanel35.add(staffbirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 190, 30));

        jLabel398.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel398.setText("V");
        jPanel35.add(jLabel398, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 30, 20));

        jPanel33.add(jPanel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 1190, 350));

        jTabbedPane5.setOpaque(true);

        jPanel38.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel41.setText("Name :");
        jPanel38.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, -1));

        sssetname.setText("Title + First Name + Middle + Last");
        jPanel38.add(sssetname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, 30));

        jLabel43.setText("User Name :*");
        jPanel38.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, 30));

        jLabel44.setText("Password :*");
        jPanel38.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        staffuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                staffuserKeyReleased(evt);
            }
        });
        jPanel38.add(staffuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 290, 30));

        jLabel45.setText("Confirm*");
        jPanel38.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 130, 70, 30));

        jLabel46.setText("Password");
        jPanel38.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 40));

        jLabel47.setText("Status :");
        jPanel38.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 10, 60, 40));

        staffstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        staffstatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                staffstatusItemStateChanged(evt);
            }
        });
        jPanel38.add(staffstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, 180, -1));

        setusertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Active", "Inactive" }));
        setusertype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                setusertypeItemStateChanged(evt);
            }
        });
        jPanel38.add(setusertype, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 90, 180, -1));

        jLabel62.setText("Access Level");
        jPanel38.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 60, 90, 40));
        jPanel38.add(staffcuserpw, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 290, 30));
        jPanel38.add(staffuserpw, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 290, 30));

        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Security Questions"));
        jPanel42.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel52.setText("Question 1:");
        jPanel42.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 30));

        jLabel53.setText("Question 2:");
        jPanel42.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 30));

        question2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jPanel42.add(question2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 440, -1));

        jLabel54.setText("Answer 2 :");
        jPanel42.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 30));

        jLabel55.setText("Answer 1 :");
        jPanel42.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 30));

        question1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jPanel42.add(question1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 440, -1));
        jPanel42.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 570, 10));
        jPanel42.add(answer2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 410, -1));
        jPanel42.add(answer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 410, -1));

        jPanel38.add(jPanel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 570, 160));

        jTabbedPane5.addTab("System Access Details", jPanel38);

        jPanel39.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setText("Name :");
        jPanel39.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, -1));

        jLabel49.setText("Title + First Name + Middle + Last");
        jPanel39.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, 30));

        jLabel57.setText("Mobile Number * : ");
        jPanel39.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 150, 24));

        jLabel58.setText("Land Line *           :");
        jPanel39.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 130, 40));

        jLabel59.setText("Email:*");
        jPanel39.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 151, 24));

        jLabel60.setText("Other:");
        jPanel39.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 151, 24));

        userland.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userlandKeyTyped(evt);
            }
        });
        jPanel39.add(userland, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 250, -1));
        jPanel39.add(useremail, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 290, -1));
        jPanel39.add(userother, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 290, -1));

        usermobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usermobileKeyTyped(evt);
            }
        });
        jPanel39.add(usermobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 250, -1));

        jTabbedPane5.addTab("Contact Information", jPanel39);

        jPanel45.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel83.setText("Name :");
        jPanel45.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, -1));

        jLabel85.setText("User Name :");
        jPanel45.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 30));

        jLabel86.setText("Status :");
        jPanel45.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 60, 30));

        jLabel87.setText("Access Level");
        jPanel45.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 90, 40));

        jButton11.setText(" Save & Clear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel45.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 60, 170, 80));

        jButton10.setText("Clear Fields");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel45.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 60, 170, 80));

        aclevel.setText("Access Level comes Here");
        jPanel45.add(aclevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 180, 40));

        stu.setText("User Name comes Here");
        jPanel45.add(stu, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, 30));

        setstaus.setText("Status comes Here");
        jPanel45.add(setstaus, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 150, 30));

        wrw.setText("Title + First Name + Middle + Last");
        jPanel45.add(wrw, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, 30));

        jTabbedPane5.addTab("Save Information", jPanel45);

        jPanel33.add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 1200, 220));

        userstab.addTab("Add  New Staff", jPanel33);

        jPanel34.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel120.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel121.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel121.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel427.setText("jLabel189");
        jPanel121.add(jLabel427, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 150));

        jPanel120.add(jPanel121, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, 170));

        jPanel122.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel122.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel434.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel434.setText("Name ");
        jPanel122.add(jLabel434, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 20));

        jLabel435.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel435.setText("Date of Birth");
        jPanel122.add(jLabel435, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 120, 20));

        jLabel436.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel436.setText("NIC Number");
        jPanel122.add(jLabel436, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 30));

        jLabel438.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel438.setText("Gender:");
        jPanel122.add(jLabel438, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 30));
        jPanel122.add(v1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 210, 30));
        jPanel122.add(v3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 160, 20));
        jPanel122.add(v2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 180, 30));
        jPanel122.add(jLabel399, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 170, 30));

        jPanel120.add(jPanel122, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 390, 180));

        jPanel124.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPanel124.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel443.setText("Mobile Number * : ");
        jPanel124.add(jLabel443, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, 30));

        jLabel444.setText("Land Line *           :");
        jPanel124.add(jLabel444, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 130, 40));

        jLabel445.setText("Email:");
        jPanel124.add(jLabel445, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 84, 151, 40));

        jLabel449.setText("Other:");
        jPanel124.add(jLabel449, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 151, 24));
        jPanel124.add(v7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 200, 20));
        jPanel124.add(v8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 170, 20));
        jPanel124.add(v9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 150, 20));
        jPanel124.add(v10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 190, 20));

        jPanel120.add(jPanel124, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 330, 170));

        jPanel123.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Login Information"));
        jPanel123.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel123.add(jLabel110, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 260, 20));
        jPanel123.add(jLabel111, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 260, 20));
        jPanel123.add(v5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 250, 20));
        jPanel123.add(v6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 250, 30));
        jPanel123.add(jLabel297, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 260, 20));

        jLabel455.setText("User Name :");
        jPanel123.add(jLabel455, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel407.setText("Access Level:");
        jPanel123.add(jLabel407, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 20));

        jLabel408.setText("Status:");
        jPanel123.add(jLabel408, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 80, 20));

        jLabel409.setText("Log status:");
        jPanel123.add(jLabel409, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 80, 20));

        jPanel120.add(jPanel123, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 570, 180));

        jPanel116.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Location Information"));
        jPanel116.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel410.setText("Line1:");
        jPanel116.add(jLabel410, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 50, -1));
        jPanel116.add(jLabel411, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 160, 20));
        jPanel116.add(jLabel412, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 160, 20));

        jLabel413.setText("Line2:");
        jPanel116.add(jLabel413, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 50, -1));
        jPanel116.add(jLabel414, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 160, 20));

        jLabel415.setText("Line3:");
        jPanel116.add(jLabel415, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 50, -1));

        jPanel120.add(jPanel116, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, 240, 170));

        jPanel34.add(jPanel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 590, 580));

        jPanel127.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel128.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel128.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        z4.setText("jLabel189");
        jPanel128.add(z4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 170, 180));

        jButton69.setText("Browse");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });
        jPanel128.add(jButton69, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 80, -1));

        jButton75.setText("Camera");
        jButton75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton75ActionPerformed(evt);
            }
        });
        jPanel128.add(jButton75, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 80, -1));

        jPanel127.add(jPanel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, 210));

        jPanel147.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Information"));
        jPanel147.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel553.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel553.setText("Name ");
        jPanel147.add(jLabel553, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 20));

        jLabel554.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel554.setText("Date of Birth:*");
        jPanel147.add(jLabel554, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 120, 30));

        jLabel555.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel555.setText("NIC Number:");
        jPanel147.add(jLabel555, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 30));

        jLabel556.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel556.setText("Gender:");
        jPanel147.add(jLabel556, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 110, 30));
        jPanel147.add(aa3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 100, -1));

        buttonGroup2.add(ss2);
        ss2.setText("Female");
        jPanel147.add(ss2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, -1, -1));

        buttonGroup2.add(ss1);
        ss1.setSelected(true);
        ss1.setText("Male");
        jPanel147.add(ss1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));
        jPanel147.add(z2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 250, -1));
        jPanel147.add(aa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 80, -1));
        jPanel147.add(aa2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 100, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr.", "Rev." }));
        jPanel147.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 60, -1));
        jPanel147.add(z3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 250, 20));

        jLabel557.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel557.setText("Staff ID:");
        jPanel147.add(jLabel557, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, 30));

        jLabel417.setText("V");
        jPanel147.add(jLabel417, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 40, 20));

        jLabel416.setText("First *");
        jPanel147.add(jLabel416, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, 20));

        jLabel418.setText("Last *");
        jPanel147.add(jLabel418, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, -1, 20));

        jLabel425.setText("Middle");
        jPanel147.add(jLabel425, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, 20));
        jPanel147.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 210, 30));

        jPanel127.add(jPanel147, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 400, 210));

        jPanel125.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Login Information"));
        jPanel125.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel454.setText("Access Level:");
        jPanel125.add(jLabel454, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 80, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel125.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 170, 20));

        jLabel483.setText("Status:");
        jPanel125.add(jLabel483, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, 30));

        jPanel125.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 170, 20));

        jButton64.setText("update");
        jButton64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton64ActionPerformed(evt);
            }
        });
        jPanel125.add(jButton64, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 170, 60));

        jPanel127.add(jPanel125, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 570, 150));

        jPanel126.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPanel126.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel456.setText("Mobile Number * : ");
        jPanel126.add(jLabel456, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, 40));

        jLabel457.setText("Land Line *           :");
        jPanel126.add(jLabel457, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 130, 40));

        jLabel458.setText("Email:*");
        jPanel126.add(jLabel458, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 104, 151, 20));

        jLabel459.setText("Other:");
        jPanel126.add(jLabel459, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 151, 24));

        p1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p1KeyTyped(evt);
            }
        });
        jPanel126.add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 130, -1));

        p2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p2KeyTyped(evt);
            }
        });
        jPanel126.add(p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 130, -1));
        jPanel126.add(p3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 130, -1));

        p4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p4KeyTyped(evt);
            }
        });
        jPanel126.add(p4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 130, -1));

        jPanel127.add(jPanel126, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 260, 170));

        jPanel117.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Location Information"));
        jPanel117.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel419.setText("Line1:*");
        jPanel117.add(jLabel419, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 50, -1));

        jLabel420.setText("Line2:*");
        jPanel117.add(jLabel420, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 50, -1));

        jLabel421.setText("Line3:");
        jPanel117.add(jLabel421, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 50, -1));

        jPanel118.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel422.setText("Line1:");
        jPanel118.add(jLabel422, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 50, -1));

        jLabel423.setText("Line2:");
        jPanel118.add(jLabel423, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 50, -1));

        jLabel424.setText("Line3:");
        jPanel118.add(jLabel424, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 50, -1));

        jPanel117.add(jPanel118, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, 300, 160));

        p5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p5KeyTyped(evt);
            }
        });
        jPanel117.add(p5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 180, -1));

        p6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p6KeyTyped(evt);
            }
        });
        jPanel117.add(p6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 180, -1));
        jPanel117.add(p7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 180, -1));

        jPanel127.add(jPanel117, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, 300, 160));

        jPanel34.add(jPanel127, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 590, 580));

        userstab.addTab("Edit/ Delete Staff", jPanel34);

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel105.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel105.setText("Teacher Registration");
        jPanel14.add(jLabel105, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel96.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel96.setText("Enrollment Date :");
        jPanel14.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 130, 40));

        todate1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        todate1.setText("Mar 17, 2017");
        jPanel14.add(todate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 110, 40));

        jPanel41.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel41.add(profile1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 220));

        jPanel14.add(jPanel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 40, 220, 220));

        jPanel49.setBorder(javax.swing.BorderFactory.createTitledBorder("Basic Information"));
        jPanel49.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel97.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel97.setText("Name ");
        jPanel49.add(jLabel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, -1));
        jPanel49.add(sm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 140, 30));

        nic1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nic1KeyTyped(evt);
            }
        });
        jPanel49.add(nic1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 160, 30));
        jPanel49.add(region1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 140, 30));

        jLabel98.setText("Last *");
        jPanel49.add(jLabel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 40, -1));

        jLabel99.setText("Middle");
        jPanel49.add(jLabel99, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 40, -1));

        jLabel100.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel100.setText("Date of Birth:*");
        jPanel49.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 110, 20));

        jLabel101.setText("Title");
        jPanel49.add(jLabel101, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 40, -1));
        jPanel49.add(sf, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 140, 30));

        jLabel102.setText("Nationality");
        jPanel49.add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 60, -1));

        jLabel103.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel103.setText("NIC Number*");
        jPanel49.add(jLabel103, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 90, -1));
        jPanel49.add(sl, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 140, 30));

        jLabel106.setText("Religion");
        jPanel49.add(jLabel106, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, -1, -1));
        jPanel49.add(nationality, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 140, 30));
        jPanel49.add(dob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 140, 30));

        jLabel107.setText("Gender:");
        jPanel49.add(jLabel107, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 80, 20));

        male1.setSelected(true);
        male1.setText("Male");
        jPanel49.add(male1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        female1.setText("Female");
        jPanel49.add(female1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, -1));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr.", "Rev." }));
        jPanel49.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, 30));

        jLabel426.setText("First *");
        jPanel49.add(jLabel426, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 40, -1));

        jPanel14.add(jPanel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 810, 190));

        jPanel64.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));
        jPanel64.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel64.add(line4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 140, 30));
        jPanel64.add(line5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 140, 30));

        line6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line6ActionPerformed(evt);
            }
        });
        jPanel64.add(line6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 140, 30));

        jLabel112.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel112.setText("Line 3:*");
        jPanel64.add(jLabel112, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 60, -1));

        jLabel113.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel113.setText("Country");
        jPanel64.add(jLabel113, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jLabel114.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel114.setText("Line 2:*");
        jPanel64.add(jLabel114, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 60, -1));

        jPanel64.add(country1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, 140, 30));

        jLabel115.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel115.setText("Line 1:*");
        jPanel64.add(jLabel115, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 60, -1));

        zone1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zone1KeyTyped(evt);
            }
        });
        jPanel64.add(zone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 140, 30));

        gg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gg.setText("Zone");
        jPanel64.add(gg, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 40, 20));

        jPanel14.add(jPanel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 570, 150));

        jTabbedPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane3.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane3.setOpaque(true);

        jPanel44.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel116.setText("Passed Level ");
        jPanel44.add(jLabel116, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        edzone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Colombo", "Kandy", "Gampaha", "other" }));
        jPanel44.add(edzone, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 150, 30));

        jLabel117.setText("Education Zone");
        jPanel44.add(jLabel117, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 10, 90, 30));

        passedlevel1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O/L", "A/L" }));
        jPanel44.add(passedlevel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 150, 30));

        jLabel119.setText("Comments");
        jPanel44.add(jLabel119, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 30));

        comment.setColumns(20);
        comment.setRows(5);
        jScrollPane28.setViewportView(comment);

        jPanel44.add(jScrollPane28, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 700, 120));

        jTabbedPane3.addTab("Previous Education Information", jPanel44);

        jPanel46.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel120.setText("Email:*");
        jPanel46.add(jLabel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 57, 129, 20));

        jLabel121.setText("Contact Information:");
        jPanel46.add(jLabel121, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 11, 129, 28));

        jLabel122.setText("Mobile:*");
        jPanel46.add(jLabel122, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 50, 129, 28));

        jLabel182.setText("Land:*");
        jPanel46.add(jLabel182, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 129, 28));

        tm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tmKeyTyped(evt);
            }
        });
        jPanel46.add(tm, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 214, -1));
        jPanel46.add(temail, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 209, -1));

        tl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tlKeyTyped(evt);
            }
        });
        jPanel46.add(tl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 214, 28));

        jTabbedPane3.addTab("Current Information", jPanel46);

        jPanel47.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel47.add(record, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 150));
        jPanel47.add(jTabbedPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 150, 70));

        jTabbedPane4.addTab("Teacher Service records*", jPanel47);

        jTabbedPane3.addTab("Service records", jTabbedPane4);

        jPanel48.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel183.setText("Subject 1");
        jPanel48.add(jLabel183, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 160, 30));

        tsub1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select in here" }));
        jPanel48.add(tsub1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 150, 30));

        tsub2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select in here" }));
        jPanel48.add(tsub2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 150, 30));

        jLabel215.setText("Subject 2");
        jPanel48.add(jLabel215, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 160, 30));

        tsub3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select in here" }));
        jPanel48.add(tsub3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 150, 30));

        jLabel216.setText("Subject 3");
        jPanel48.add(jLabel216, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 160, 30));

        tsub4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select in here" }));
        jPanel48.add(tsub4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 150, 30));

        jLabel217.setText("Subject 4");
        jPanel48.add(jLabel217, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 160, 30));

        jTabbedPane10.addTab("Add Subjects", jPanel48);

        jTabbedPane3.addTab("Add teacher's subject", jTabbedPane10);

        jPanel14.add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 830, 210));

        jButton60.setText("Clear Fields");
        jButton60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton60ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton60, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 550, 130, 70));

        jButton61.setText("Submit");
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton61, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 550, 140, 70));

        jButton48.setText("Camera");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton48, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 260, 110, -1));

        jButton62.setText("Browse");
        jButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton62ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton62, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 260, 110, -1));

        jLabel450.setText("Status:");
        jPanel14.add(jLabel450, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 60, 20));

        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel14.add(jComboBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 300, 150, 30));

        jLabel118.setText("Deduction");
        jPanel14.add(jLabel118, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 140, 30));
        jPanel14.add(school, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 350, 110, 30));

        userstab.addTab("Add New Teacher", jPanel14);

        jPanel40.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel135.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel135.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel135.add(q1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 280, 140));

        jPanel40.add(jPanel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 300, 160));

        jButton66.setText("Update");
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });
        jPanel40.add(jButton66, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 480, 220, 60));

        jButton68.setText("Browse");
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });
        jPanel40.add(jButton68, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 130, -1));

        jButton67.setText("Clear Field");
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });
        jPanel40.add(jButton67, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 480, 200, 60));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Add Action", "subject ID", "Sunbject Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane29.setViewportView(jTable1);

        jPanel40.add(jScrollPane29, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 90, 470, 360));

        jPanel66.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel66.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tidActionPerformed(evt);
            }
        });
        tid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tidKeyTyped(evt);
            }
        });
        jPanel66.add(tid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 210, 30));

        jLabel280.setText("Teacher  NIC Number:");
        jPanel66.add(jLabel280, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 30));

        jButton16.setText("Search");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel66.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 200, 70));

        jLabel428.setText("V");
        jPanel66.add(jLabel428, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 20, 30));

        jPanel40.add(jPanel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 380, 140));

        jLabel104.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel104.setText("View Teachers");
        jPanel40.add(jLabel104, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 40));

        jButton63.setText("Camara");
        jPanel40.add(jButton63, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 120, -1));

        jPanel136.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPanel136.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel218.setText("Email:*");
        jPanel136.add(jLabel218, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 150, 40));

        jLabel429.setText("Mobile Number:*");
        jPanel136.add(jLabel429, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 150, 40));
        jPanel136.add(zz4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 230, 30));
        jPanel136.add(zz6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 230, 30));

        jPanel40.add(jPanel136, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 380, 190));

        jPanel137.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Location Informaion"));
        jPanel137.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel219.setText("Line3:");
        jPanel137.add(jLabel219, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 160, 40));

        jLabel437.setText("Line1:*");
        jPanel137.add(jLabel437, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, 40));

        jLabel439.setText("Line2:*");
        jPanel137.add(jLabel439, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 160, 40));
        jPanel137.add(zz1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 260, 30));
        jPanel137.add(zz2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 260, 30));
        jPanel137.add(zz3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 260, 30));

        jPanel40.add(jPanel137, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 330, 180));

        jPanel138.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Personal Information"));
        jPanel138.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel138.add(m1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 240, 30));

        jLabel295.setText("Name:*");
        jPanel138.add(jLabel295, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, 40));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr.", "Rev." }));
        jPanel138.add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, 30));
        jPanel138.add(m2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 290, 30));

        jLabel279.setText("Date Of Birth:*");
        jPanel138.add(jLabel279, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 100, 30));

        jLabel430.setText("Deduction:");
        jPanel138.add(jLabel430, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 90, 40));
        jPanel138.add(zz5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 210, 30));

        jPanel40.add(jPanel138, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 400, 170));

        jPanel139.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "System Visibility"));
        jPanel139.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel451.setText("Status:");
        jPanel139.add(jLabel451, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 50, 30));

        jComboBox31.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        jPanel139.add(jComboBox31, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 140, -1));

        jPanel40.add(jPanel139, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, 300, 160));

        userstab.addTab("View Teachers", jPanel40);

        jPanel8.add(userstab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -10, 1380, 650));

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/teacher001.png"))); // NOI18N
        jPanel8.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 100, 270));

        Hometab.addTab("", jPanel8);

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel91.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/bg001.png"))); // NOI18N
        jPanel9.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 1350, 230));

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "date", "outtime", "intime"
            }
        ));
        tb.setOpaque(false);
        jScrollPane24.setViewportView(tb);

        jPanel9.add(jScrollPane24, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 860, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Staff Details"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 300, 30));

        jButton58.setText("Search");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton58, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 90, 50));

        jLabel7.setText(" Staff ID :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jButton78.setText("Mark Attendance");
        jButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton78ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton78, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 140, 50));

        jButton13.setText("Generate Report");
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        jPanel9.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 430, 130));

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Student Details"));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search1KeyReleased(evt);
            }
        });
        jPanel25.add(search1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 300, 30));

        jButton80.setText("Search");
        jButton80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton80ActionPerformed(evt);
            }
        });
        jPanel25.add(jButton80, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 90, 50));

        jLabel500.setText("Student ID :");
        jPanel25.add(jLabel500, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jButton81.setText("Mark Attendance");
        jButton81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton81ActionPerformed(evt);
            }
        });
        jPanel25.add(jButton81, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 140, 50));

        jButton12.setText("Generate Report");
        jPanel25.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        jPanel9.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 430, 130));

        Hometab.addTab("", jPanel9);

        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setting.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Visible Action", "area"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane18.setViewportView(setting);

        jPanel11.add(jScrollPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 460, 150));

        position.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        position.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                positionItemStateChanged(evt);
            }
        });
        jPanel11.add(position, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 220, 40));

        jLabel34.setText("Position:");
        jPanel11.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 170, 40));

        jButton37.setText("Update data");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton37, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 200, 40));

        jLabel93.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/settingsbg.png"))); // NOI18N
        jPanel11.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 1360, 230));

        jLabel296.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel296.setText("Interface View Preferences");
        jPanel11.add(jLabel296, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel109.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel109.setText("Change Login Status");
        jPanel11.add(jLabel109, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 130, 40));
        jPanel11.add(addsecid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 220, 30));

        jLabel395.setText("Add New Question:");
        jPanel11.add(jLabel395, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 110, 30));

        secdelete.setText("Delete");
        secdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secdeleteActionPerformed(evt);
            }
        });
        jPanel11.add(secdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 110, 30));

        questiontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Question"
            }
        ));
        questiontable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                questiontableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(questiontable);

        jPanel11.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 460, 120));

        jButton71.setText("Add a New Question");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton71, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 140, 30));

        secupdate.setText("Update");
        secupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secupdateActionPerformed(evt);
            }
        });
        jPanel11.add(secupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 100, 30));

        jLabel396.setText("Add New Position:");
        jPanel11.add(jLabel396, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 200, 180, 30));

        setposition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Position"
            }
        ));
        setposition.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setpositionMouseClicked(evt);
            }
        });
        jScrollPane30.setViewportView(setposition);

        jPanel11.add(jScrollPane30, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 40, 410, 150));

        jButton70.setText("Delete Position");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton70, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 250, 120, 30));

        jButton72.setText("Add New User");
        jButton72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton72ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton72, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 130, 30));

        jButton73.setText("Update Position");
        jButton73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton73ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton73, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 250, 130, 30));
        jPanel11.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 200, 210, 30));

        jLabel397.setText("Mange System User Positions:");
        jPanel11.add(jLabel397, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 180, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Log State"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(jTable2);

        jPanel11.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 460, 110));

        jLabel431.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel431.setText("Security Question:");
        jPanel11.add(jLabel431, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 130, 40));

        jButton6.setText("Change Log Status");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, -1, 30));
        jPanel11.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 230, 30));

        Hometab.addTab("", jPanel11);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paymenttab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel65.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel157.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel157.setText("Student Payments");
        jPanel65.add(jLabel157, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 60));

        jPanel70.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))), "Student Information"));
        jPanel70.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel159.setText("Student ID :");
        jPanel70.add(jLabel159, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel160.setText("Teacher Name:");
        jPanel70.add(jLabel160, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        searchsid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsidActionPerformed(evt);
            }
        });
        jPanel70.add(searchsid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 200, -1));

        searchclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        searchclass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchclassItemStateChanged(evt);
            }
        });
        jPanel70.add(searchclass, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 190, -1));

        jLabel161.setText("Student Name:");
        jPanel70.add(jLabel161, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 110, -1));

        searchsname.setEditable(false);
        jPanel70.add(searchsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 200, -1));

        buttonGroup3.add(ad);
        ad.setSelected(true);
        ad.setText("Admission");
        ad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                adItemStateChanged(evt);
            }
        });
        ad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                adStateChanged(evt);
            }
        });
        jPanel70.add(ad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        buttonGroup3.add(jRadioButton2);
        jRadioButton2.setText("Subject Payment");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });
        jPanel70.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, -1, -1));

        jLabel42.setText("Payment Mode:");
        jPanel70.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel185.setText("Subject Name:");
        jPanel70.add(jLabel185, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        steachername.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                steachernameItemStateChanged(evt);
            }
        });
        jPanel70.add(steachername, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 190, 20));

        jPanel65.add(jPanel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 370, 190));

        jLabel158.setText("Previous Records");
        jPanel65.add(jLabel158, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        precord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Year", "Month", "Amount"
            }
        ));
        jScrollPane7.setViewportView(precord);

        jPanel65.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 370, 290));

        jPanel69.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))), "Payment Information"));
        jPanel69.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setText("Paid Amount");
        jPanel69.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel1.setText("Balance");
        jPanel69.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        paidamount.setEditable(false);
        jPanel69.add(paidamount, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 200, -1));

        jLabel14.setText("Received Amount");
        jPanel69.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 130, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel69.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 200, -1));

        bb.setText("Balance Comes here");
        jPanel69.add(bb, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 106, 190, 30));

        jLabel163.setText("Class id:");
        jPanel69.add(jLabel163, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 70, 30));

        jLabel164.setText("Month");
        jPanel69.add(jLabel164, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 60, 20));

        jLabel165.setText("Year");
        jPanel69.add(jLabel165, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 60, 20));
        jPanel69.add(eee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 190, 30));
        jPanel69.add(w3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 160, 20));

        jComboBox35.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jPanel69.add(jComboBox35, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 50, -1));

        jPanel65.add(jPanel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 720, 150));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class", "Paid Amount", "Received Amount", "Balance", "Paid Month", "Paid Year"
            }
        ));
        jScrollPane8.setViewportView(jTable6);

        jPanel65.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, 720, 350));

        jButton34.setText("Submit");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        jPanel65.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 440, 90, 90));

        jButton33.setText("Clear");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        jPanel65.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 330, 90, 100));

        paymenttab.addTab("Student Payment", jPanel65);

        jPanel68.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel168.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel168.setText("Staff Payments");
        jPanel68.add(jLabel168, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jPanel71.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Salary Amendments"));
        jPanel71.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel71.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 190, -1));

        jTextField9.setEditable(false);
        jPanel71.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 190, -1));

        jLabel166.setText("Pendin Salary");
        jPanel71.add(jLabel166, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 170, 40));

        jLabel167.setText("EPF | ETF Deduction");
        jPanel71.add(jLabel167, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 160, 30));

        jLabel169.setText("Paid Amount");
        jPanel71.add(jLabel169, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 170, 40));

        jLabel173.setText("Net Amount");
        jPanel71.add(jLabel173, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 190, 30));

        jButton31.setText("Generate");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        jPanel71.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 140, 30));

        jButton17.setText("Clear");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel71.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 130, 30));

        jPanel68.add(jPanel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 630, 170));

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Year", "Month", "Payment Date", "Working Hours", "Total Payment"
            }
        ));
        jScrollPane9.setViewportView(jTable7);

        jPanel68.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 630, 350));

        jPanel72.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Payment Details"));
        jPanel72.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField36.setEditable(false);
        jPanel72.add(jTextField36, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 240, -1));

        jLabel170.setText("No: of Working Minutes");
        jPanel72.add(jLabel170, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 170, 40));

        jLabel171.setText("Month");
        jPanel72.add(jLabel171, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 160, 30));

        jLabel172.setText("Payment Rate per Minute:");
        jPanel72.add(jLabel172, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 170, 40));

        jTextField37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField37ActionPerformed(evt);
            }
        });
        jPanel72.add(jTextField37, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 240, -1));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jComboBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox8ItemStateChanged(evt);
            }
        });
        jComboBox8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox8MouseClicked(evt);
            }
        });
        jPanel72.add(jComboBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 110, -1));

        jLabel501.setText("Year:");
        jPanel72.add(jLabel501, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jComboBox36.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox36ItemStateChanged(evt);
            }
        });
        jPanel72.add(jComboBox36, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 120, -1));

        jPanel68.add(jPanel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 520, 160));

        jPanel73.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Staff Information"));
        jPanel73.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel73.add(jTextField38, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 240, -1));

        jLabel175.setText("Access Level");
        jPanel73.add(jLabel175, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 300, 50));

        jLabel176.setText("Staff NIC Number:");
        jPanel73.add(jLabel176, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 160, 30));

        jPanel74.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel74.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel179.setText("Staff Name");
        jPanel74.add(jLabel179, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 220));

        jPanel73.add(jPanel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 200, 220));

        jLabel177.setText("Access Level ;");
        jPanel73.add(jLabel177, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabel178.setText("Staff Registered Name:");
        jPanel73.add(jLabel178, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 170, 50));

        jButton15.setText("Switch to Teacher Payments");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel73.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, 220, 30));

        jButton47.setText("Search");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });
        jPanel73.add(jButton47, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 220, 30));

        jPanel68.add(jPanel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 520, 370));

        paymenttab.addTab("Staff Payment", jPanel68);

        jPanel10.add(paymenttab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1380, 650));

        jLabel92.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/accountant.png"))); // NOI18N
        jPanel10.add(jLabel92, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 100, 400));

        Hometab.addTab("", jPanel10);

        getContentPane().add(Hometab, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 80, 1380, 710));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        signOut();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (logpath == null || comid.getText() == null || comname.getText() == null || bid.getText() == null || principale.getText() == null || pcontact.getText() == null || ihot.getText() == null || iline1.getText() == null || iline2.getText() == null || irdate2.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please fill The Mandatory Fields...!");
        } else {
            try {
                ResultSet rs = DB.search("select * from institute where companyid='" + comid.getText() + "'");
                if (rs.first()) {
                    JOptionPane.showMessageDialog(rootPane, "Already define data...!");
                } else {
                    savedata2();
                    clearfield();
                    setinforcombo();
                    setIcon();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void positionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_positionItemStateChanged
        String s1 = (String) position.getSelectedItem();
        DefaultTableModel dtm = (DefaultTableModel) setting.getModel();
        dtm.setRowCount(0);
        try {
            ResultSet rs1 = DB.search("select * from usertype where usertype='" + s1 + "'");
            if (rs1.next()) {
                String a1 = rs1.getString("userid");
                try {
                    ResultSet rs = DB.search("select * from visiblearea");
                    while (rs.next()) {

                        Vector v = new Vector();

                        String a2 = rs.getString("areaid");
                        ResultSet t = DB.search("select  * from usertype_has_visiblearea where usertype_userid='" + a1 + "' and visiblearea_areaid='" + a2 + "' and status='Active'");
                        if (t.next()) {
                            v.add(true);

                        } else {
                            v.add(false);
                        }

                        v.add(rs.getString("visiblearea"));
                        dtm.addRow(v);

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_positionItemStateChanged

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed

        DefaultTableModel dtm = (DefaultTableModel) setting.getModel();
        int e = dtm.getRowCount();
        String s1 = (String) position.getSelectedItem();

        try {

            ResultSet rs3 = DB.search("select * from usertype where usertype='" + s1 + "'");
            if (rs3.next()) {
                String ae = rs3.getString("userid");
                DB.iud("update usertype_has_visiblearea set status='Inactive' where usertype_userid='" + ae + "'");
            }
            for (int j = 0; j < e; j++) {
                Boolean sk1 = (Boolean) setting.getValueAt(j, 0);
                String sk2 = (String) setting.getValueAt(j, 1);
                if (sk1 == true) {

                    try {
                        ResultSet rs1 = DB.search("select * from usertype where usertype='" + s1 + "'");
                        if (rs1.next()) {
                            String a1 = rs1.getString("userid");
                            try {

                                ResultSet rs = DB.search("select * from visiblearea where visiblearea='" + sk2 + "'");
                                while (rs.next()) {

                                    ResultSet s = DB.search("select count(usertypevisibleareid) as x from usertype_has_visiblearea");
                                    if (s.next()) {
                                        String a3 = s.getString("x");
                                        int y = Integer.parseInt(a3);
                                        y++;
                                        String a2 = rs.getString("areaid");
                                        ResultSet rsf = DB.search("select * from usertype_has_visiblearea where visiblearea_areaid='" + a2 + "' and usertype_userid='" + a1 + "'");
                                        if (rsf.next()) {
                                            DB.iud("update usertype_has_visiblearea set status='Active' where visiblearea_areaid='" + a2 + "' and usertype_userid='" + a1 + "'");

                                        } else {
                                            DB.iud("insert into usertype_has_visiblearea value('" + a2 + "','" + a1 + "','" + y + "','Active')");
                                        }
                                    }

                                }
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                        }
                    } catch (Exception ez) {
                        ez.printStackTrace();
                    }

                }
            }
        } catch (Exception es) {
            es.printStackTrace();
        }
        setvisiblearea();
        position.setSelectedIndex(0);
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jTextField37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField37ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField37ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        staffattendance s = new staffattendance(this, true);
        s.setVisible(true);
    }//GEN-LAST:event_searchActionPerformed

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        staffattendance s = new staffattendance(this, true);
        s.setVisible(true);
        //  s.dispose();
    }//GEN-LAST:event_jButton58ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        if (insmessage.getText() == null || im.getText() == null || publishfor.getSelectedItem() == "none") {

            JOptionPane.showMessageDialog(rootPane, "Please Fill the Mandatory Filed...!");

        } else {
            try {
                String a1 = insmessage.getText();
                String a2 = im.getText();
                String a3 = (String) level.getSelectedItem();
                String a4 = (String) publishfor.getSelectedItem();
                String a5 = (String) titleactive.getSelectedItem();
                DefaultTableModel dtm = (DefaultTableModel) inputm.getModel();
                Vector v = new Vector();

                if (a5 == "Active") {
                    v.add(true);
                } else {
                    v.add(false);
                }

                v.add(a1);
                v.add(a2);
                v.add(a3);
                v.add(a4);
                dtm.addRow(v);

                insmessage.setText(null);
                im.setText(null);
                level.setSelectedIndex(0);
                publishfor.setSelectedIndex(0);
                titleactive.setSelectedIndex(0);
                insmessage.grabFocus();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        saveallmessagedata();

        setmainiconmessage();
        setmessagetable();

    }//GEN-LAST:event_jButton29ActionPerformed

    private void comidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comidKeyTyped
        char x = evt.getKeyChar();
        if (comid.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_comidKeyTyped

    private void pcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcontactActionPerformed

    private void pcontactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pcontactKeyTyped
        char x = evt.getKeyChar();
        if (pcontact.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_pcontactKeyTyped

    private void ssrn5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ssrn5ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ssrn5ItemStateChanged

    private void ssrn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssrn5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssrn5ActionPerformed

    private void iinforKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iinforKeyTyped
        char x = evt.getKeyChar();
        if (iinfor.getText().length() == 0) {

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_iinforKeyTyped

    private void ifaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ifaxKeyTyped
        char x = evt.getKeyChar();
        if (ifax.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_ifaxKeyTyped

    private void ihotKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ihotKeyTyped
        char x = evt.getKeyChar();
        if (ihot.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_ihotKeyTyped

    private void iline5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iline5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iline5ActionPerformed

    private void iline6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iline6ActionPerformed

    }//GEN-LAST:event_iline6ActionPerformed

    private void iline6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iline6KeyTyped
        char x = evt.getKeyChar();
        if (iline6.getText().length() == 0) {

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_iline6KeyTyped

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                logpath = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(iprofile.getWidth(), iprofile.getHeight(), Image.SCALE_SMOOTH);
                iprofile.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void hallpnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallpnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hallpnameActionPerformed

    private void hallemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hallemailActionPerformed

    private void halltpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halltpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_halltpActionPerformed

    private void halltpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_halltpKeyTyped
        char x = evt.getKeyChar();

        if (halltp.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_halltpKeyTyped

    private void hallflownuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallflownuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hallflownuActionPerformed

    private void hallflownuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hallflownuKeyTyped
        char x = evt.getKeyChar();

        if (hallflownu.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_hallflownuKeyTyped

    private void hallactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallactiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hallactiveActionPerformed

    private void hallnumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hallnumberKeyTyped

    }//GEN-LAST:event_hallnumberKeyTyped

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        if (hins.getSelectedItem() == null || hallpname.getText() == null || halltp.getText() == null || hallnumber.getText() == null || hallflownu.getText() == null || hallregisterdate.getDate() == null || hins.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please Fill Mandatory Field...!");
        } else {
            try {
                ResultSet rs = DB.search("select * from hall_registration where hallnumber='" + hallnumber.getText() + "'");
                if (rs.first()) {
                    JOptionPane.showMessageDialog(rootPane, "Already Registed Hall Number...!");
                } else {
                    savehalldata();
                    clearfield();
                    sethallcombo();
                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        if (hallpname.getText() == null || halltp.getText() == null || hallnumber.getText() == null || hallflownu.getText() == null || hallregisterdate.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please Fill Mandatory Field...!");
        } else {
            try {
                ResultSet rs = DB.search("select * from hall_registration where hallnumber='" + hallnumber.getText() + "'");
                if (rs.first()) {

                    updatehall();
                    clearfield();
                    sethallcombo();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Can't Update Data...!");
                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        }


    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        searchhalldata();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        searchcompany();
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        if (searchcompanyid.getText() == null || ihot1.getText() == null || iline10.getText() == null || iline11.getText() == null || irdate1.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please Fill Mandatory Field...!");
        } else {
            try {
                ResultSet rs = DB.search("select * from institute where companyid='" + searchcompanyid.getText() + "'");
                if (rs.first()) {

                    updateinstitute();
                    setmainiconmessage();
                    setfield();
                    clearfield();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Can't Update Data...!");
                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        }


    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        setfield();
    }//GEN-LAST:event_jButton41ActionPerformed

    private void calenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calenderKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_calenderKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            boolean b = false;
            System.out.println("eeeeeeeeweuuuuu");
            String s1 = (String) classsub.getSelectedItem();
            String s2 = (String) classteacher.getSelectedItem();
            String s3 = (String) ihallset.getSelectedItem();
            String s4 = (String) schalltime.getSelectedItem();
            String s5 = (String) schallday.getSelectedItem();
            String s6 = (String) endtime.getSelectedItem();
            String s7 = (String) mass.getSelectedItem();
            String s8 = (String) iset.getSelectedItem();
            DefaultTableModel dtm = (DefaultTableModel) sctable.getModel();
            Vector v = new Vector();
            dtm.setRowCount(0);
            try {
                try {
                    ResultSet rs = DB.search("select * from time where starttime='" + s4 + "'");
                    if (rs.next()) {
                        String a1 = rs.getString("timeid");
                        System.out.println("ddd");
                        ResultSet rb = DB.search("select * from day where date='" + s5 + "'");
                        if (rb.next()) {
                            String a2 = rb.getString("dayid");
                            ResultSet rc = DB.search("select * from timeslot where time_timeid='" + a1 + "' and day_dayid='" + a2 + "'");
                            if (rc.next()) {
                                String a4 = rc.getString("timeslotid");
                                System.out.println("uuuuu");
                                ResultSet eee = DB.search("select * from classregistation where status='Active' and Timeslot_timeslotid='" + a4 + "'");
                                while (eee.next()) {
                                    System.out.println("xxxxxxx");
                                    String a3 = eee.getString("Timeslot_timeslotid");

                                    System.out.println("qwqwqw");
                                    ResultSet d = DB.search("select * from teacher where name='" + classteacher.getSelectedItem() + "'");
                                    if (d.next()) {
                                        String key = d.getString("teacherid");
                                        ResultSet d1 = DB.search("select * from subject_has_teacher where teacher_teacherid='" + key + "'");
                                        while (d1.next()) {
                                            String ggg = d1.getString("subtea_id");
                                            ResultSet rd = DB.search("select * from classregistation where Timeslot_timeslotid='" + a3 + "' and subject_has_teacher_subtea_id='" + ggg + "'");
                                            if (rd.next()) {
                                                JOptionPane.showMessageDialog(rootPane, "Teacher Already used...!");
                                                b = true;
                                                setscheduletable();
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
                if (b == false) {

                    try {
                        ResultSet rs = DB.search("select * from time where starttime='" + s4 + "'");
                        if (rs.next()) {
                            String a1 = rs.getString("timeid");
                            System.out.println("uuuuu11111");
                            ResultSet rb = DB.search("select * from day where date='" + s5 + "'");
                            if (rb.next()) {
                                String a2 = rb.getString("dayid");
                                ResultSet rc = DB.search("select * from timeslot where time_timeid='" + a1 + "' and day_dayid='" + a2 + "'");
                                if (rc.next()) {
                                    String a4 = rc.getString("timeslotid");
                                    System.out.println("uuuuu");
                                    ResultSet eee = DB.search("select * from classregistation where status='Active' and Timeslot_timeslotid='" + a4 + "'");
                                    if (eee.next()) {
                                        String id = eee.getString("classid");

                                        System.out.println("xxxxxxx");
                                        String a3 = eee.getString("Timeslot_timeslotid");

                                        System.out.println("qwqwqw");
                                        ResultSet y = DB.search("select * from hall_Registration where hallnumber='" + s3 + "'");
                                        if (y.next()) {
                                            String h = y.getString("hall_id");
                                            ResultSet rd = DB.search("select * from classregistation where classid='" + id + "' and Hall_Registration_hall_id='" + h + "'");
                                            if (rd.next()) {

                                                JOptionPane.showMessageDialog(rootPane, "Hall Already used...!");
                                            } else {
                                                System.out.println("1234");
                                                v.add(s1);
                                                v.add(s2);
                                                v.add(s3);
                                                v.add(s4);
                                                v.add(s6);
                                                v.add(s5);
                                                v.add(s7);
                                                v.add(s8);
                                                dtm.addRow(v);
                                                classsub.setSelectedIndex(0);
                                                classteacher.setSelectedIndex(0);
                                                ihallset.setSelectedIndex(0);
                                                schalltime.setSelectedIndex(0);
                                                schallday.setSelectedIndex(0);
                                                endtime.setSelectedIndex(0);
                                                mass.setSelectedIndex(0);
                                                iset.setSelectedIndex(0);

                                            }
                                        }
                                    } else {
                                        System.out.println("66767");
                                        v.add(s1);
                                        v.add(s2);
                                        v.add(s3);
                                        v.add(s4);
                                        v.add(s6);
                                        v.add(s5);
                                        v.add(s7);
                                        v.add(s8);
                                        dtm.addRow(v);
                                        classsub.setSelectedIndex(0);
                                        classteacher.setSelectedIndex(0);
                                        ihallset.setSelectedIndex(0);
                                        schalltime.setSelectedIndex(0);
                                        schallday.setSelectedIndex(0);
                                        endtime.setSelectedIndex(0);
                                        mass.setSelectedIndex(0);
                                        iset.setSelectedIndex(0);

                                    }

                                } else {

                                }

                            }
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void classsubItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classsubItemStateChanged
        classteacher.removeAllItems();
        classteacher.removeAllItems();
        try {
            String stid = (String) classsub.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        String name = q.getString("name");

                        classteacher.addItem(name);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_classsubItemStateChanged

    private void classsubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classsubMouseClicked

    }//GEN-LAST:event_classsubMouseClicked

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            settimeslot();

        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        int ie = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (ie == 0) {
            try {
                DefaultTableModel dtm = (DefaultTableModel) sctable.getModel();
                int i = sctable.getSelectedRow();
                String s1 = (String) sctable.getValueAt(i, 0);

                String s2 = (String) sctable.getValueAt(i, 1);
                String s3 = (String) sctable.getValueAt(i, 2);
                String s4 = (String) sctable.getValueAt(i, 3);
                String s5 = (String) sctable.getValueAt(i, 4);
                String s6 = (String) sctable.getValueAt(i, 5);
                String s7 = (String) sctable.getValueAt(i, 6);
                String s8 = (String) sctable.getValueAt(i, 7);
                try {
                    ResultSet rs = DB.search("select * from day where date='" + s6 + "'");
                    if (rs.next()) {
                        System.out.println("dsds");
                        String v1 = rs.getString("dayid");
                        ResultSet rs1 = DB.search("select * from time where starttime='" + s4 + "' and endtime='" + s5 + "'");
                        if (rs1.next()) {
                            String v2 = rs1.getString("timeid");

                            ResultSet rs2 = DB.search("select * from Timeslot where time_timeid='" + v2 + "' and day_dayid='" + v1 + "'");
                            if (rs2.next()) {
                                String v3 = rs2.getString("timeslotid");

                                DB.iud("update   classregistation set status='Deactive' where  Timeslot_timeslotid='" + v3 + "'");
                                setscheduletable();
                            }
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                setcal();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
            }
        }
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        setscheduletable();
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        DefaultTableModel dtmd = (DefaultTableModel) viewallex.getModel();
        dtmd.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        String s1 = sdf.format(searchdate.getDate());
        try {
            ResultSet rs = DB.search("select * from exam where date='" + s1 + "'");
            while (rs.next()) {

                DefaultTableModel dtm = (DefaultTableModel) viewallex.getModel();
                Vector v = new Vector();
                String t = rs.getString("examid");
                v.add(rs.getString("examid"));
                v.add(rs.getString("examsubject"));
                //  v.add(rs.getString("teacher_name"));
                String id = rs.getString("teacher_teacherid");
                ResultSet ek = DB.search("select *  from teacher where teacherid='" + id + "'");
                if (ek.next()) {
                    v.add(ek.getString("name"));
                    v.add(rs.getString("hallno"));
                    ResultSet e = DB.search("select count(student_studentid) as x  from student_has_exam where exam_examid='" + t + "'");
                    if (e.next()) {
                        v.add(e.getString("x"));
                    }
                    v.add(rs.getString("type"));
                    dtmd.addRow(v);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        DefaultTableModel dtmd = (DefaultTableModel) viewallex.getModel();
        int y = viewallex.getSelectedRow();
        String s1 = (String) viewallex.getValueAt(y, 0);
        try {
            DB.iud("update exam set type='Inactivate' where examid='" + s1 + "'");
            DB.iud("update student_has_exam set status='Inactive' where exam_examid='" + s1 + "'");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton51ActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table2.getModel();
        dtm.setRowCount(0);
        int i = table1.getSelectedRow();

        DefaultTableModel dtma = (DefaultTableModel) table3.getModel();
        dtma.setRowCount(0);

        String s1 = (String) table1.getValueAt(i, 0);
        try {
            System.out.println("ssdsd");
            ResultSet rs = DB.search("select * from teacher where name='" + s1 + "'");
            while (rs.next()) {
                String a1 = rs.getString("teacherid");
                ResultSet t = DB.search("select * from subject_has_teacher where teacher_teacherid='" + a1 + "'");
                if (t.next()) {
                    System.out.println("wqqw");
                    String a2 = t.getString("subject_subjectid");
                    ResultSet t1 = DB.search("select * from subject where subjectid='" + a2 + "'");
                    if (t1.next()) {
                        System.out.println("oioi");
                        String a3 = t1.getString("subjectname");
                        DefaultTableModel dtm1 = (DefaultTableModel) table2.getModel();
                        Vector v = new Vector();
                        v.add(a3);
                        dtm1.addRow(v);
                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_table1MouseClicked

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
        DefaultTableModel dtma = (DefaultTableModel) table3.getModel();
        dtma.setRowCount(0);
        setclasstypetotable();
//        DefaultTableModel dtm = (DefaultTableModel) table3.getModel();
//        dtm.setRowCount(0);
//        int i = table2.getSelectedRow();
//        String s1 = (String) table2.getValueAt(i, 0);
//        try {
//            System.out.println("ssdsd");
//            ResultSet rs = DB.search("select * from subject where subjectname='" + s1 + "'");
//            while (rs.next()) {
//                String a1 = rs.getString("subjectid");
//                ResultSet t = DB.search("select * from student_has_subject where subject_subjectid='" + a1 + "'");
//                if (t.next()) {
//                    System.out.println("wqqw");
//                    String a2 = t.getString("student_studentid");
//                    ResultSet t1 = DB.search("select * from student where studentid='" + a2 + "'");
//                    if (t1.next()) {
//                        System.out.println("oioi");
//                        String a3 = t1.getString("indexid");
//                        
//                        String x3 = t1.getString("firstname");
//                        String x4 = t1.getString("middlename");
//                        String x5 = t1.getString("lastname");
//                        String full = x3 + " " + x4 + " " + x5;
//                        DefaultTableModel dtm1 = (DefaultTableModel) table2.getModel();
//                        Vector v = new Vector();
//                        v.add(a3);
//                        v.add(a2);
//                        v.add(full);
//                        dtm1.addRow(v);
//                    }
//                    
//                }
//                
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_table2MouseClicked

    private void examdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examdateMouseClicked

    }//GEN-LAST:event_examdateMouseClicked

    private void examdateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_examdateInputMethodTextChanged
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYYMMdd");
            String s1 = sdf.format(examdate.getDate());
            int i = table2.getSelectedRow();
            String s2 = (String) table2.getValueAt(i, 0);
            String id = s1 + "" + s2;
            sete.setText(null);
            sete.setText(id);
            int t = table1.getSelectedRow();
            String s3 = (String) table1.getValueAt(i, 0);
            jLabel186.setText(null);
            jLabel186.setText(s3);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_examdateInputMethodTextChanged

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        setclearfield();

    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        try {

            DefaultTableModel dtmx = (DefaultTableModel) table1.getModel();

            int jd = table1.getSelectedRow();
            String g = (String) table1.getValueAt(jd, 0);
            ResultSet rs = DB.search("select * from teacher where name='" + g + "'");
            if (rs.next()) {
                String s1 = rs.getString("teacherid");
                int i = table2.getSelectedRow();
                String s2 = (String) table2.getValueAt(i, 0);
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
                String date = sdf.format(examdate.getDate());
                ResultSet rsh = DB.search("select * from time where timeid='" + jComboBox33.getSelectedItem() + "'");
                if (rsh.next()) {
                    System.out.println("444444444");
                    String st = rsh.getString("starttime");
                    String en = rsh.getString("endtime");

                    ResultSet dk = DB.search("select * from exam where date='" + date + "' and  stime='" + st + "' and etime='" + en + "' and hallno='" + jComboBox34.getSelectedItem() + "' and type='Active'");
                    if (dk.next()) {
                        JOptionPane.showMessageDialog(rootPane, "Already Used");
                    } else {
                        ResultSet dk1 = DB.search("select * from exam where examid='" + sete.getText() + "'");
                        if (dk1.next()) {
                            // JOptionPane.showMessageDialog(rootPane, "Already Used");
                            DB.iud("update exam set type='Activate' where examid='" + sete.getText() + "'");
                            DB.iud("update student_has_exam set status='Active' where exam_examid='" + sete.getText() + "'");

                        } else {
                            DB.iud("insert into exam values('" + sete.getText() + "','" + s2 + "','" + date + "','" + st + "','Active','" + s1 + "','" + en + "','" + jComboBox34.getSelectedItem() + "')");
                            DefaultTableModel dtm = (DefaultTableModel) table3.getModel();
                            int j = table3.getRowCount();
                            for (int k = 0; k < j; k++) {
                                String sw = (String) dtm.getValueAt(k, 1);
                                ResultSet d = DB.search("select count(studentexamid) as x from student_has_exam ");
                                if (d.next()) {
                                    int ii = Integer.parseInt(d.getString("x"));
                                    ii++;
                                    DB.iud("insert into student_has_exam values('" + sw + "','" + sete.getText() + "','" + ii + "','Active','Not Released')");

                                }
                            }
                            setclearfield();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Data");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid Data");
        }
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String s1 = sdf.format(examdate.getDate());
            int i = table2.getSelectedRow();
            String s2 = (String) table2.getValueAt(i, 0);
            String id = s1 + "-" + s2;
            sete.setText(null);
            sete.setText(id);
            int t = table1.getSelectedRow();
            String s3 = (String) table1.getValueAt(i, 0);
            jLabel186.setText(null);
            jLabel186.setText(s3);
            settimeslot s = new settimeslot(this, true);
            s.setVisible(true);
        } catch (java.lang.NullPointerException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Date");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        streamregister();
        autostreamid();
        bbbbbbbbb.setEnabled(true);
        setclasssubject();
        addallsubject();
        setstream();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        streamupdate();
        bbbbbbbbb.setEnabled(true);
        addallsubject();
        setstream();
    }//GEN-LAST:event_jButton23ActionPerformed

    private void bbbbbbbbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbbbbbbbbActionPerformed
        String s1 = rstreamname.getText();
        int i = rstreamname.getText().length();
        if (s1.equals(null) || i == 0) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");

        } else {
            serchstream();

        }
    }//GEN-LAST:event_bbbbbbbbbActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        autostreamid();
        newsubjecttable();
        bbbbbbbbb.setEnabled(true);
        addallsubject();
        setstream();
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        addsubject a = new addsubject();
        a.setVisible(true);
        bbbbbbbbb.setEnabled(true);
        addallsubject();
        setstream();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            savefullsubjectdata();
            setid.setText(null);
            setname.setText(null);
            spayment.setText(null);
            setstatus.setSelectedIndex(0);
            jButton32.setEnabled(true);
            autosubjectid();
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        if (setname.getText().equals("") || spayment.getText().equals("")) {
            System.out.print("ddd");

            JOptionPane.showMessageDialog(rootPane, "Please Fill the mandatory Fields....!");
        } else {
            subregister();
            setid.setText(null);
            setname.setText(null);
            setstatus.setSelectedIndex(0);
            spayment.setText(null);
            jButton32.setEnabled(false);
            autosubjectid();
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nicActionPerformed

    private void nicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyTyped
        char x = evt.getKeyChar();
        if (nic.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_nicKeyTyped

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void line3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line3ActionPerformed

    private void smotherphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smotherphoneKeyTyped
        char x = evt.getKeyChar();
        if (smotherphone.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_smotherphoneKeyTyped

    private void sfatherphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfatherphoneKeyTyped
        char x = evt.getKeyChar();
        if (sfatherphone.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_sfatherphoneKeyTyped

    private void sfatherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfatherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sfatherActionPerformed

    private void sfatherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfatherKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_sfatherKeyPressed

    private void sfatherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfatherKeyTyped

        char x = evt.getKeyChar();

        if (x >= '0' && x <= '9' || x == '+') {
            evt.consume();
        } else if (!(x >= '0' && x <= '9')) {

        }
    }//GEN-LAST:event_sfatherKeyTyped

    private void gmobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gmobileKeyTyped
        char x = evt.getKeyChar();
        if (gmobile.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_gmobileKeyTyped

    private void glandKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_glandKeyTyped
        char x = evt.getKeyChar();
        if (gland.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_glandKeyTyped

    private void s1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_s1ItemStateChanged
        try {
            t1.removeAllItems();
            t1.addItem("Please Select");

            String stid = (String) s1.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                System.out.println("erer");
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    System.out.println("bbbbbbb");
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        System.out.println("dsdf");
                        String name = q.getString("name");

                        t1.addItem(name);
                    } else {

                    }
                }
            } else {

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s1ItemStateChanged

    private void s1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s1MouseClicked

    }//GEN-LAST:event_s1MouseClicked

    private void s2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_s2ItemStateChanged
        try {
            t2.removeAllItems();
            t2.addItem("Please Select");
            String stid = (String) s2.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        String name = q.getString("name");

                        t2.addItem(name);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s2ItemStateChanged

    private void s2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s2MouseClicked

    }//GEN-LAST:event_s2MouseClicked

    private void s3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_s3ItemStateChanged
        try {
            t3.removeAllItems();
            t3.addItem("Please Select");
            String stid = (String) s3.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        String name = q.getString("name");
                        t3.addItem(name);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s3ItemStateChanged

    private void s3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s3MouseClicked

    }//GEN-LAST:event_s3MouseClicked

    private void s4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_s4ItemStateChanged
        try {
            t4.removeAllItems();
            t4.addItem("Please Select");
            String stid = (String) s4.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        String name = q.getString("name");
                        t4.addItem(name);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s4ItemStateChanged

    private void s4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s4MouseClicked

    }//GEN-LAST:event_s4MouseClicked

    private void s5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_s5ItemStateChanged
        try {
            t5.removeAllItems();
            t5.addItem("Please Select");
            String stid = (String) s5.getSelectedItem();
            ResultSet rs = DB.search("select * from subject where subjectname='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("subjectid");
                ResultSet e = DB.search("select * from subject_has_teacher where subject_subjectid='" + id + "'");
                while (e.next()) {
                    String d = e.getString("teacher_teacherid");
                    ResultSet q = DB.search("select * from teacher where teacherid='" + d + "'");
                    if (q.next()) {
                        String nn = q.getString("name");

                        t5.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s5ItemStateChanged

    private void s5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s5MouseClicked

    }//GEN-LAST:event_s5MouseClicked

    private void minsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_minsItemStateChanged
        try {
            s1.removeAllItems();
            s2.removeAllItems();
            s3.removeAllItems();
            s4.removeAllItems();
            s5.removeAllItems();
            t1.removeAllItems();
            t2.removeAllItems();
            t3.removeAllItems();
            t4.removeAllItems();
            t5.removeAllItems();

            g1.removeAllItems();
            g2.removeAllItems();
            g3.removeAllItems();
            g4.removeAllItems();
            g5.removeAllItems();
            String stid = (String) mins.getSelectedItem();
            s1.addItem("none");
            s2.addItem("none");
            s3.addItem("none");
            s4.addItem("none");
            s5.addItem("none");
            ResultSet rs = DB.search("select * from stream where stream='" + stid + "'");
            if (rs.next()) {
                String w = rs.getString("streamid");
                ResultSet raa = DB.search("select * from stream_has_subject  where stream_streamid='" + w + "'");
                while (raa.next()) {
                    System.out.print("sdsd");
                    String sub = raa.getString("subject_subjectid");
                    ResultSet e = DB.search("select * from subject where subjectid='" + sub + "'");

                    if (e.next()) {
                        System.out.println(e.getString("subjectname"));
                        String xxx = e.getString("subjectname");

                        s1.addItem(xxx);
                        s2.addItem(xxx);
                        s3.addItem(xxx);
                        s4.addItem(xxx);
                        s5.addItem(xxx);
                        System.err.println(xxx);
                    }

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_minsItemStateChanged

    private void minsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minsMouseClicked
        try {
            s1.removeAllItems();
            s2.removeAllItems();
            s3.removeAllItems();
            s4.removeAllItems();
            s5.removeAllItems();
            t1.removeAllItems();
            t2.removeAllItems();
            t3.removeAllItems();
            t4.removeAllItems();
            t5.removeAllItems();

            g1.removeAllItems();
            g2.removeAllItems();
            g3.removeAllItems();
            g4.removeAllItems();
            g5.removeAllItems();
            String stid = (String) mins.getSelectedItem();
            s1.addItem("none");
            s2.addItem("none");
            s3.addItem("none");
            s4.addItem("none");
            s5.addItem("none");
            ResultSet rs = DB.search("select * from stream where stream='" + stid + "'");
            if (rs.next()) {
                String w = rs.getString("streamid");
                ResultSet raa = DB.search("select * from stream_has_subject  where stream_streamid='" + w + "'");
                while (raa.next()) {
                    System.out.print("sdsd");
                    String sub = raa.getString("subject_subjectid");
                    ResultSet e = DB.search("select * from subject where subjectid='" + sub + "'");

                    if (e.next()) {
                        System.out.println(e.getString("subjectname"));
                        String xxx = e.getString("subjectname");

                        s1.addItem(xxx);
                        s2.addItem(xxx);
                        s3.addItem(xxx);
                        s4.addItem(xxx);
                        s5.addItem(xxx);
                        System.err.println(xxx);
                    }

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_minsMouseClicked

    private void t5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t5ItemStateChanged
        try {
            g5.removeAllItems();
            g5.addItem("select here");
            String stid = (String) t5.getSelectedItem();
            ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("teacherid");
                ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + id + "'");
                if (e.next()) {
                    String d = e.getString("subtea_id");
                    ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                    if (q.next()) {
                        String nn = q.getString("type");

                        g5.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_t5ItemStateChanged

    private void t5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t5MouseEntered

    }//GEN-LAST:event_t5MouseEntered

    private void t1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t1ItemStateChanged
        try {
            g1.removeAllItems();
            g1.addItem("select here");
            String stid = (String) t1.getSelectedItem();
            ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("teacherid");
                ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + id + "'");
                if (e.next()) {
                    String d = e.getString("subtea_id");
                    ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "' and status='Active'");
                    if (q.next()) {
                        String nn = q.getString("type");

                        g1.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_t1ItemStateChanged

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked

    }//GEN-LAST:event_t1MouseClicked

    private void t2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t2ItemStateChanged
        try {
            g2.removeAllItems();
            g2.addItem("select here");
            String stid = (String) t2.getSelectedItem();
            ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("teacherid");
                ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + id + "'");
                if (e.next()) {
                    String d = e.getString("subtea_id");
                    ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                    if (q.next()) {
                        String nn = q.getString("type");

                        g2.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_t2ItemStateChanged

    private void t2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t2MouseClicked

    }//GEN-LAST:event_t2MouseClicked

    private void t3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t3ItemStateChanged
        try {
            g3.removeAllItems();
            g3.addItem("select here");
            String stid = (String) t3.getSelectedItem();
            ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("teacherid");
                ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + id + "'");
                if (e.next()) {
                    String d = e.getString("subtea_id");
                    ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                    if (q.next()) {
                        String nn = q.getString("type");

                        g3.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_t3ItemStateChanged

    private void t3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t3MouseClicked

    }//GEN-LAST:event_t3MouseClicked

    private void t4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t4ItemStateChanged
        try {
            g4.removeAllItems();
            g4.addItem("select here");
            String stid = (String) t4.getSelectedItem();
            ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
            if (rs.next()) {
                String id = rs.getString("teacherid");
                ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + id + "'");
                if (e.next()) {
                    String d = e.getString("subtea_id");
                    ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                    if (q.next()) {
                        String nn = q.getString("type");

                        g4.addItem(nn);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_t4ItemStateChanged

    private void t4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t4MouseClicked

    }//GEN-LAST:event_t4MouseClicked

    private void mhKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mhKeyTyped
        char x = evt.getKeyChar();
        if (mh.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_mhKeyTyped

    private void mtpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mtpKeyTyped
        char x = evt.getKeyChar();
        if (mtp.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_mtpKeyTyped

    private void otherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otherKeyTyped
        char x = evt.getKeyChar();
        if (other.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_otherKeyTyped

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                newpath = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(profile.getWidth(), profile.getHeight(), Image.SCALE_SMOOTH);
                profile.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        webCam c = new webCam();
        c.setVisible(true);
    }//GEN-LAST:event_jButton45ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clearfield();
    }//GEN-LAST:event_clearActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if (schoolname.getText() == null || sfirst.getText() == null || slast.getText() == null || dob.getDate() == null || nic.getText() == null || line1.getText() == null || line2.getText() == null || guardianname.getText() == null || gline1.getText() == null || gline2.getText() == null || mtp.getText() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please Fill the Mandatory Fields...!");
        } else {
            try {
                ResultSet rs = DB.search("select * from student where nic='" + nic.getText() + "'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "Invalid N.I.C....!");

                } else {

                    //  if (!(t1.getSelectedItem() == t2.getSelectedItem()) && (t1.getSelectedItem() == t3.getSelectedItem()) && (t1.getSelectedItem() == t4.getSelectedItem()) && (t1.getSelectedItem() == t5.getSelectedItem()) && (t2.getSelectedItem() == t3.getSelectedItem()) && (t2.getSelectedItem() == t4.getSelectedItem()) && (t2.getSelectedItem() == t5.getSelectedItem()) && (t3.getSelectedItem() == t4.getSelectedItem()) && (t4.getSelectedItem() == t5.getSelectedItem()) || t5.getSelectedItem() == "Please Select") {
                    if (s1.getSelectedItem() == "none" && t1.getSelectedItem() == "Please Select" && g1.getSelectedItem() == "select here" && s2.getSelectedItem() == "none" && t2.getSelectedItem() == "Please Select" && g2.getSelectedItem() == "select here" && s3.getSelectedItem() == "none" && t3.getSelectedItem() == "Please Select" && g3.getSelectedItem() == "select here" && s4.getSelectedItem() == "none" && t4.getSelectedItem() == "Please Select" && g4.getSelectedItem() == "select here" && s5.getSelectedItem() == "none" && t5.getSelectedItem() == "Please Select" && g5.getSelectedItem() == "select here") {
                        JOptionPane.showMessageDialog(rootPane, "please select one class");
                    } else {

                        savedata();

                    }

                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_submitActionPerformed

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
        updatestudent();
        clearfield();
        Studenttab.setEnabledAt(2, false);
        userstab.setEnabledAt(2, false);
        Studenttab.setSelectedIndex(0);
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jButton65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton65ActionPerformed
        try {
            if (xx2.getText() == null) {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                clearfield();
            } else {
                ResultSet rs = DB.search("select * from staff where nic='" + xx2.getText() + "'");
                if (rs.next()) {
                    userstab.setEnabledAt(2, true);
                    userstab.setSelectedIndex(2);
                    searchstaff();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton65ActionPerformed

    private void ssrn4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssrn4KeyReleased
        sssetname.setText(null);
        String s1 = (String) ssrn1.getSelectedItem();
        sssetname.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        wrw.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        jLabel49.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
    }//GEN-LAST:event_ssrn4KeyReleased

    private void ssrn2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssrn2KeyReleased
        sssetname.setText(null);
        String s1 = (String) ssrn1.getSelectedItem();
        sssetname.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        wrw.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        jLabel49.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
    }//GEN-LAST:event_ssrn2KeyReleased

    private void snicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snicActionPerformed

    private void snicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snicKeyReleased
        String a1 = snic.getText();
        sssetid.setText(a1 + "");
    }//GEN-LAST:event_snicKeyReleased

    private void ssrn3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssrn3KeyReleased
        sssetname.setText(null);
        String s1 = (String) ssrn1.getSelectedItem();
        sssetname.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        wrw.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        jLabel49.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
    }//GEN-LAST:event_ssrn3KeyReleased

    private void ssrn1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ssrn1ItemStateChanged
        sssetname.setText(null);
        String s1 = (String) ssrn1.getSelectedItem();
        sssetname.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        wrw.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
        jLabel49.setText(s1 + "" + ssrn2.getText() + " " + ssrn3.getText() + " " + ssrn4.getText());
    }//GEN-LAST:event_ssrn1ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                staffpath = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(saffimage.getWidth(), saffimage.getHeight(), Image.SCALE_SMOOTH);
                saffimage.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        webCam c = new webCam();
        c.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void staffuserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_staffuserKeyReleased
        stu.setText(null);
        String wq = staffuser.getText();
        stu.setText(wq);
    }//GEN-LAST:event_staffuserKeyReleased

    private void staffstatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_staffstatusItemStateChanged

        setstaus.setText(null);
        String s1 = (String) staffstatus.getSelectedItem();

        setstaus.setText(s1);
    }//GEN-LAST:event_staffstatusItemStateChanged

    private void setusertypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_setusertypeItemStateChanged
        aclevel.setText(null);
        String s1 = (String) setusertype.getSelectedItem();
        aclevel.setText(s1);
    }//GEN-LAST:event_setusertypeItemStateChanged

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        try {
            if (useremail.getText() == null || staffpath == null || setusertype.getSelectedItem() == "Select" || ssrn2.getText() == null || ssrn4.getText() == null || staffbirth.getDate() == null || snic.getText() == null || uline1.getText() == null || uline2.getText() == null || staffuser.getText() == null || staffuserpw.getPassword() == null || staffcuserpw.getPassword() == null || answer1.getText() == null || answer2.getText() == null || usermobile.getText() == null || userland.getText() == null) {
                JOptionPane.showMessageDialog(rootPane, "Please Fill the mandatory Fields....!");
            } else {
                ResultSet rs = DB.search("select * from staff where nic='" + snic.getText() + "'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "N.I.C. Already Used....!");
                } else {
                    ResultSet d = DB.search("select * from user where username='" + staffuser.getText() + "'");
                    if (d.next()) {
                        JOptionPane.showMessageDialog(rootPane, "System User Name Already Used....!");
                    } else {
                        saveuser();
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void nic1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nic1KeyTyped
        char x = evt.getKeyChar();
        if (nic1.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_nic1KeyTyped

    private void line6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line6ActionPerformed

    private void zone1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zone1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_zone1KeyTyped

    private void tmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tmKeyTyped
        char x = evt.getKeyChar();
        if (tm.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_tmKeyTyped

    private void tlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tlKeyTyped
        char x = evt.getKeyChar();
        if (tl.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_tlKeyTyped

    private void jButton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton60ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton60ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        try {
            if (school.getText() == null || nic1.getText() == null || staffnewpath == null || sf.getText() == null || sl.getText() == null || dob1.getDate() == null || line4.getText() == null || line5.getText() == null || tm.getText() == null || tl.getText() == null || temail.getText() == null || record.getText() == null) {
                JOptionPane.showMessageDialog(rootPane, "Please Fill the Mandatory Fields....!");
            } else {
                ResultSet rs = DB.search("select * from teacher where NIC_number='" + nic1.getText() + "'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "NIC Number Already Used....!");

                } else {
                    int i = Integer.parseInt(school.getText());
                    if (i <= 100) {
                        savedate();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Invalid Deduction Rate");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (tid.getText() == null) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Data....!");
            tid.setText(null);
            tid.grabFocus();
        } else {
            teachersearch();
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton66ActionPerformed
        if (zz5.getText() == null || tid.getText() == null || m1.getText() == null || m2.getDate() == null || zz4.getText() == null || zz5.getText() == null || zz6.getText() == null || zz1.getText() == null || zz2.getText() == null) {

            JOptionPane.showMessageDialog(rootPane, "Please Fill the Mandatory Fields....!");

        } else {
            int i = Integer.parseInt(zz5.getText());
            if (i <= 100) {

                updateteacher();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Deduction Rate");
            }
        }
    }//GEN-LAST:event_jButton66ActionPerformed

    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                newpath1 = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(q1.getWidth(), q1.getHeight(), Image.SCALE_SMOOTH);
                q1.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton68ActionPerformed

    private void tidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tidKeyTyped
        char x = evt.getKeyChar();
        if (tid.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_tidKeyTyped

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton67ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int i = dtm.getRowCount();
        m2.setDate(null);
        m1.setText(null);
        tid.setText(null);
        q1.setIcon(null);
        zz1.setText(null);
        zz2.setText(null);
        zz3.setText(null);
        zz4.setText(null);
        zz5.setText(null);
        zz6.setText(null);
        dtm.setRowCount(0);
    }//GEN-LAST:event_jButton67ActionPerformed

    private void searchsidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsidActionPerformed
        try {
            String s1 = searchsid.getText();
            searchclass.removeAllItems();
            steachername.removeAllItems();
            ResultSet re = DB.search("select * from student where studentid='" + s1 + "'");
            if (re.next()) {
                String a1 = re.getString("firstname");
                String a2 = re.getString("middlename");
                String a3 = re.getString("lastname");
                searchsname.setText(a1 + " " + a2 + " " + a3);
                ResultSet ew = DB.search("select * from student_has_classregistation where student_studentid='" + s1 + "'");
                while (ew.next()) {
                    System.out.println("fdf");
                    String a4 = ew.getString("classregistation_classid");
                    ResultSet ew1 = DB.search("select * from student_has_classregistation where student_studentid='" + s1 + "'");
                    if (ew1.next()) {
                        System.out.println("5454");
                        String a6 = ew1.getString("classregistation_classid");
                        ResultSet d1 = DB.search("select * from classregistation where classid='" + a6 + "'");
                        if (d1.next()) {
                            System.out.println("32323");
                            String sa = d1.getString("subject_has_teacher_subtea_id");
                            ResultSet h = DB.search("select * from subject_has_teacher where subtea_id='" + sa + "'");
                            if (h.next()) {
                                System.out.print("xsreresxx");
                                String fd = h.getString("subject_subjectid");
                                String fd1 = h.getString("teacher_teacherid");
                                ResultSet ed = DB.search(" select * from subject where subjectid='" + fd + "'");
                                if (ed.next()) {
                                    System.out.print("3232");
                                    String wx = ed.getString("subjectname");
                                    searchclass.addItem(wx);
                                    ResultSet edx = DB.search(" select * from teacher where teacherid='" + fd1 + "'");
                                    if (edx.next()) {
                                        System.out.print("ewew");
                                        String wx3 = edx.getString("name");
                                        System.out.print("xxx");
                                        steachername.addItem(wx3);
                                        try {
                                            ResultSet rel = DB.search("select * from admission where student_studentid='" + searchsid.getText() + "'");
                                            if (rel.next()) {
                                                jRadioButton2.setSelected(true);
                                                jRadioButton2.setVisible(true);
                                                ad.setEnabled(false);
                                                ad.setVisible(false);
                                            } else {

                                                jRadioButton2.setSelected(false);
                                                ad.setEnabled(true);
                                                jRadioButton2.setVisible(false);
                                                ad.setVisible(true);
                                                searchclass.removeAllItems();
                                                steachername.removeAllItems();

                                                ResultSet edxa = DB.search(" select * from subject where subjectname='Institute Fees'");
                                                if (edxa.next()) {
                                                    searchclass.addItem("Institute Fees");
                                                    steachername.addItem("Institute");
                                                    paidamount.setText(edxa.getString("payment"));
                                                    eee1.setText("Institute");
                                                }
                                            }
                                        } catch (Exception e) {
                                            e.printStackTrace();
                                        }
                                    }

                                }
                            }
                        }
                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchsidActionPerformed

    private void searchclassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchclassItemStateChanged
        try {
            ResultSet ts = DB.search("select * from subject where subjectname='" + searchclass.getSelectedItem() + "'");
            if (ts.first()) {
                paidamount.setText(ts.getString("payment"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchclassItemStateChanged

    private void adStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_adStateChanged

    }//GEN-LAST:event_adStateChanged

    private void steachernameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_steachernameItemStateChanged
        try {
            DefaultTableModel dtm = (DefaultTableModel) precord.getModel();

            ResultSet tk = DB.search("select * from teacher where name='" + steachername.getSelectedItem() + "'");
            if (tk.next()) {
                String teacher = tk.getString("teacherid");
                ResultSet tk1 = DB.search("select * from subject where subjectname='" + searchclass.getSelectedItem() + "'");
                if (tk1.next()) {
                    String subject = tk1.getString("subjectid");
                    ResultSet tk11 = DB.search("select * from invoice where student_studentid='" + searchsid.getText() + "' and subject_subjectid='" + subject + "' and teacher_teacherid='" + teacher + "'");
                    while (tk11.next()) {
//                        System.out.println(searchsid.getText());
//                        System.out.println(subject);
//                        System.out.println(teacher);
                        String sid = tk11.getString("payment_paymentid");
                        System.out.println(sid);
                        ResultSet t = DB.search("select * from payment where paymentid='" + sid + "'");
                        if (t.next()) {
                            Vector v = new Vector();
                            v.add(searchclass.getSelectedItem());
                            v.add(t.getString("year"));
                            v.add(t.getString("month"));
                            v.add(t.getString("paidamount"));
                            dtm.addRow(v);
                        }
                    }
                }
            }
            ResultSet w = DB.search("select * from subject where subjectname='" + searchclass.getSelectedItem() + "'");
            if (w.next()) {
                String z1 = w.getString("subjectid");
                ResultSet w1 = DB.search("select * from teacher where name='" + steachername.getSelectedItem() + "'");
                if (w1.next()) {
                    String z2 = w1.getString("teacherid");

                    ResultSet w2 = DB.search("select * from subject_has_teacher where subject_subjectid='" + z1 + "' and teacher_teacherid='" + z2 + "'");
                    if (w2.next()) {
                        String z3 = w2.getString("subtea_id");
                        ResultSet w3 = DB.search("select * from classregistation where subject_has_teacher_subtea_id='" + z3 + "'");
                        if (w3.next()) {
                            String z4 = w3.getString("classid");
                            eee1.setText(null);
                            eee1.setText(z4);

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_steachernameItemStateChanged

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        DefaultTableModel dtmsd = (DefaultTableModel) jTable6.getModel();
        dtmsd.setRowCount(0);

        if (jRadioButton2.isSelected()) {
            DefaultTableModel dtms = (DefaultTableModel) precord.getModel();
            int ifd = precord.getRowCount();
            if (ifd == 0) {
                String a1 = paidamount.getText();
                String a2 = jTextField2.getText();
                int i = Integer.parseInt(a1);
                int r = Integer.parseInt(a2);
                if (r < i) {
                    if (acType.equals("Admin") && jTextField2.getText().equals("0")) {
                        bb.setText(null);

                        int w = r - i;
                        bb.setText("" + w);
                        setinvoice();
                        searchsid.setEditable(false);
                        searchsname.setEditable(false);
                    } else {
                        JOptionPane.showMessageDialog(paidamount, "Invalid data..!");
                        jTextField2.setText(null);
                        jTextField2.grabFocus();

                        DefaultTableModel dtm = (DefaultTableModel) jTable6.getModel();
                        dtm.setRowCount(0);
                        bb.setText(null);
                    }
                } else {

                    bb.setText(null);

                    int w = r - i;
                    bb.setText("" + w);
                    setinvoice();
                    searchsid.setEditable(false);
                    searchsname.setEditable(false);

                }
            } else {
                int month = Integer.parseInt((String) jComboBox35.getSelectedItem());
                int year = Integer.parseInt(w3.getText());
                int pm = month;
                int py = year;
                if (month == 1) {
                    month = 12;
                    year = year - 1;
                } else {

                    month--;

                }
                System.out.println(month);
                System.out.println(year);
                try {
                    boolean b = false;
                    boolean c = false;
                    ResultSet tk = DB.search("select * from teacher where name='" + steachername.getSelectedItem() + "'");
                    if (tk.next()) {
                        String teacher = tk.getString("teacherid");
                        ResultSet tk1 = DB.search("select * from subject where subjectname='" + searchclass.getSelectedItem() + "'");
                        if (tk1.next()) {
                            String subject = tk1.getString("subjectid");
                            ResultSet t = DB.search("select * from invoice where student_studentid='" + searchsid.getText() + "' and subject_subjectid='" + subject + "' and teacher_teacherid='" + teacher + "'");
                            while (t.next()) {
                                String sid = t.getString("payment_paymentid");
                                System.out.println("sssssss");
                                System.out.println(month);
                                System.out.println(year);
                                System.out.println(sid);
                                ResultSet rs = DB.search("select * from payment where month='" + month + "' and year='" + year + "' and paymentid='" + sid + "'");
                                if (rs.next()) {
                                    b = true;
                                    System.out.println(b);

                                }
                                ResultSet rst = DB.search("select * from payment where month='" + pm + "' and year='" + py + "' and paymentid='" + sid + "'");
                                if (rst.next()) {
                                    c = true;
                                    System.out.println(c);
                                }

                            }

                        }
                    }

                    if (b == true) {

                        if (c == true) {
                            JOptionPane.showMessageDialog(rootPane, "Already Payed");
                        } else {
                            String a1 = paidamount.getText();
                            String a2 = jTextField2.getText();
                            int i = Integer.parseInt(a1);
                            int r = Integer.parseInt(a2);
                            bb.setText(null);

                            int w = r - i;
                            bb.setText("" + w);
                            setinvoice();
                            searchsid.setEditable(false);
                            searchsname.setEditable(false);
                        }

                    } else {
                        String a1 = paidamount.getText();
                        String a2 = jTextField2.getText();
                        int i = Integer.parseInt(a1);
                        int r = Integer.parseInt(a2);
                        if (r < i) {
                            if (acType.equals("Admin") && jTextField2.getText().equals("0")) {
                                bb.setText(null);

                                int w = r - i;
                                bb.setText("" + w);
                                setinvoice();
                                searchsid.setEditable(false);
                                searchsname.setEditable(false);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Invalid data..!");
                                jTextField2.setText(null);
                                jTextField2.grabFocus();

                                DefaultTableModel dtm = (DefaultTableModel) jTable6.getModel();
                                dtm.setRowCount(0);
                                bb.setText(null);
                            }
                        }

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {

            String a1 = paidamount.getText();
            String a2 = jTextField2.getText();
            int i = Integer.parseInt(a1);
            int r = Integer.parseInt(a2);
            if (r < i) {
                if (acType.equals("Admin") && jTextField2.getText().equals("0")) {
                    bb.setText(null);

                    int w = r - i;
                    bb.setText("" + w);
                    setinvoice();
                    searchsid.setEditable(false);
                    searchsname.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(paidamount, "Invalid data..!");
                    jTextField2.setText(null);
                    jTextField2.grabFocus();

                    DefaultTableModel dtm = (DefaultTableModel) jTable6.getModel();
                    dtm.setRowCount(0);
                    bb.setText(null);
                }
            } else {

                bb.setText(null);

                int w = r - i;
                bb.setText("" + w);
                setinvoice();
                searchsid.setEditable(false);
                searchsname.setEditable(false);

            }
        }


    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        searchsid.setEditable(true);
        searchsname.setEditable(true);
        if (ad.isSelected()) {

            try {
                Date d = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
                String cdate = sdf.format(d);
                ResultSet tsw = DB.search("select count(admissionid) as x from admission");
                if (tsw.first()) {
                    String z = tsw.getString("x");
                    int y = Integer.parseInt(z);
                    y++;
                    ResultSet x7 = DB.search("select *  from student where studentid='" + searchsid.getText() + "'");
                    if (x7.first()) {
                        String a2 = x7.getString("studentid");
                        DB.iud("insert into admission value('" + y + "','" + jTextField2.getText() + "','" + cdate + "','" + searchsid.getText() + "')");
                        clearfield();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {

            searchsid.setEditable(true);
            searchsname.setEditable(true);
            int qz = 0;
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("dd");
            String cdate = sdf.format(d);
            DefaultTableModel dtm = (DefaultTableModel) jTable6.getModel();
            int i = dtm.getRowCount();
            for (int j = 0; j < i; j++) {
                String s1 = (String) jTable6.getValueAt(j, 0);
                String s2 = (String) jTable6.getValueAt(j, 1);
                String s3 = (String) jTable6.getValueAt(j, 2);
                String s4 = (String) jTable6.getValueAt(j, 3);
                String s5 = (String) jTable6.getValueAt(j, 4);
                String s6 = (String) jTable6.getValueAt(j, 5);
                try {
                    ResultSet ts = DB.search("select count(paymentid) as x from payment");
                    if (ts.first()) {
                        String z = ts.getString("x");
                        int y = Integer.parseInt(z);
                        qz = y++;
                        DB.iud("insert into payment value('" + y + "','" + cdate + "','" + s5 + "','" + s6 + "','" + s2 + "','" + s3 + "','" + s4 + "')");

                        ResultSet tsw = DB.search("select count(invoiceid) as x1 from invoice");
                        if (tsw.first()) {
                            String za = tsw.getString("x1");
                            int ya = Integer.parseInt(za);
                            ya++;

                            ResultSet tsw1 = DB.search("select *  from subject where subjectname='" + searchclass.getSelectedItem() + "'");
                            if (tsw1.first()) {
                                String zas = tsw1.getString("subjectid");

                                ResultSet x = DB.search("select *  from staff where nic='" + email.getText() + "'");
                                if (x.first()) {
                                    String a = x.getString("staffid");

                                    ResultSet x1 = DB.search("select *  from user where staff_staffid='" + a + "'");
                                    if (x1.first()) {
                                        String a1 = x1.getString("userid");
                                        ResultSet xd = DB.search("select *  from teacher where name='" + steachername.getSelectedItem() + "'");
                                        if (xd.first()) {
                                            String tid = xd.getString("teacherid");
                                            ResultSet x2 = DB.search("select *  from student where studentid='" + searchsid.getText() + "'");
                                            if (x2.first()) {
                                                String a2 = x2.getString("studentid");
                                                DB.iud("insert into invoice value('" + ya + "','" + y + "','" + zas + "','" + a1 + "','" + a2 + "','" + tid + "','" + s1 + "','0')");

                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        }
        clearfield();
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton64ActionPerformed
        try {
            if (p5.getText() == null || p6.getText() == null || p1.getText() == null || p2.getText() == null || p3.getText() == null || upstaffpath == null || aa1.getText() == null || aa3.getText() == null || z2.getDate() == null || jTextField3.getText() == null) {
                JOptionPane.showMessageDialog(rootPane, "Please Fill the mandatory Fields....!");

            } else {
                String tt = (String) jComboBox3.getSelectedItem();
                String a4 = aa1.getText();
                String a41 = aa2.getText();
                String a42 = aa3.getText();
                SimpleDateFormat sfd = new SimpleDateFormat("YYYY-MM-dd");

                String a5 = sfd.format(z2.getDate());

                String a6 = z3.getText();

                String a9 = uline1.getText();

                String gender = null;
                if (ss1.isSelected()) {
                    gender = "male";

                } else if (ss2.isSelected()) {
                    gender = "female";
                }
                ResultSet j = DB.search("select * from usertype where usertype='" + jComboBox2.getSelectedItem() + "'");
                if (j.next()) {
                    String h = j.getString("userid");

                    DB.iud("update staff set usertype_userid='" + h + "',title='" + tt + "',firstname='" + a4 + "', lastname='" + a42 + "',middlename='" + a41 + "', dob='" + a5 + "',gender='" + gender + "' ,img='" + upstaffpath + "' where staffid='" + z3.getText() + "'");

                    DB.iud("update staffcontact set mobileno='" + p1.getText() + "',landno='" + p2.getText() + "',email='" + p3.getText() + "', other='" + p4.getText() + "' where staff_staffid='" + z3.getText() + "'");

                    DB.iud("update staffaddress set line1='" + p5.getText() + "',line2='" + p6.getText() + "',line3='" + p7.getText() + "' where staff_staffid='" + z3.getText() + "'");

                    DB.iud("update user set status='" + jComboBox1.getSelectedItem() + "' where staff_staffid='" + z3.getText() + "'");
                }
                jComboBox2.setSelectedIndex(0);
                jComboBox1.setSelectedIndex(0);

                p1.setText(null);
                p2.setText(null);
                p3.setText(null);
                p4.setText(null);
                p5.setText(null);
                p6.setText(null);
                p7.setText(null);
                z3.setText(null);
                z2.setDate(null);
                aa1.setText(null);
                aa2.setText(null);
                aa3.setText(null);
                z4.setIcon(null);
                v1.setIcon(null);
                v2.setIcon(null);
                v3.setIcon(null);
                jComboBox3.setSelectedIndex(0);
                jLabel427.setIcon(null);
                z4.setIcon(null);
                v5.setText(null);
                v7.setText(null);
                v8.setText(null);
                v9.setText(null);
                v10.setText(null);
                userstab.setSelectedIndex(0);
                userstab.setEnabledAt(2, false);

                clearfield();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton64ActionPerformed

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton69ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                upstaffpath = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(z4.getWidth(), z4.getHeight(), Image.SCALE_SMOOTH);
                z4.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton69ActionPerformed

    private void p4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p4KeyTyped
        char x = evt.getKeyChar();
        if (p4.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_p4KeyTyped

    private void p1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p1KeyTyped
        char x = evt.getKeyChar();
        if (p1.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_p1KeyTyped

    private void p2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p2KeyTyped
        char x = evt.getKeyChar();
        if (p2.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_p2KeyTyped

    private void nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyReleased
        jLabel108.setText(null);
        String x = (String) eyear.getSelectedItem();

        String y = nic.getText();

        String k = "" + y + "" + x;
        jLabel108.setText(k);
    }//GEN-LAST:event_nicKeyReleased

    private void sfatherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfatherKeyReleased
        char x = evt.getKeyChar();

        if (x >= '0' && x <= '9' || x == '+') {
            evt.consume();
        } else if (!(x >= '0' && x <= '9')) {
            guardianname.setText(null);
            guardianname.setText(sfather.getText());
        }
    }//GEN-LAST:event_sfatherKeyReleased

    private void serchsidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serchsidActionPerformed
        DefaultTableModel fu = (DefaultTableModel) studentsub.getModel();
        DefaultTableModel fu1 = (DefaultTableModel) jTable3.getModel();
        DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();
        fu.setRowCount(0);
        fu1.setRowCount(0);
        fu2.setRowCount(0);
        searchstudentdata();
    }//GEN-LAST:event_serchsidActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        DefaultTableModel fu = (DefaultTableModel) studentsub.getModel();
        DefaultTableModel fu1 = (DefaultTableModel) jTable3.getModel();
        DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();
        fu2.setRowCount(0);
        fu.setRowCount(0);
        fu1.setRowCount(0);
        searchstudentdata();
        Studenttab.setEnabledAt(2, true);
        Studenttab.setSelectedIndex(2);
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                studentupdate = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(sc3.getWidth(), sc3.getHeight(), Image.SCALE_SMOOTH);
                sc3.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        webCam c = new webCam();
        c.setVisible(true);
    }//GEN-LAST:event_jButton46ActionPerformed

    private void spaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spaymentKeyTyped
        char x = evt.getKeyChar();
        if (pcontact.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_spaymentKeyTyped

    private void rstreamnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstreamnameActionPerformed
        String s1 = rstreamname.getText();
        int i = rstreamname.getText().length();
        if (s1.equals(null) || i == 0) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
        } else {
            serchstream();
            bbbbbbbbb.setEnabled(false);
        }
    }//GEN-LAST:event_rstreamnameActionPerformed

    private void rstreamnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rstreamnameKeyReleased
        bbbbbbbbb.setEnabled(true);
        int s1 = rstreamname.getText().length();
        if (s1 > 1) {
            try {
                ResultSet r = DB.search("select * from stream where stream LIKE '" + rstreamname.getText() + "%'");
                if (r.next()) {
                    rstreamname.setText(r.getString("stream"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_rstreamnameKeyReleased

    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {

            try {
                ResultSet rs = DB.search("select * from securityquestions where question='" + addsecid.getText() + "' and status='Active'");
                if (rs.next()) {

                    JOptionPane.showMessageDialog(rootPane, "Already defined Data...!");
                } else {
                    ResultSet r = DB.search("select count(questionid) as x from securityquestions");
                    if (r.next()) {
                        String x = r.getString("x");
                        int y = Integer.parseInt(x);
                        System.out.print("dsds");
                        y++;
                        DB.iud("insert into securityquestions value('" + y + "','" + addsecid.getText() + "','Active')");
                        addsecid.setText(null);
                        securityquestion();
                        setquestion();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton71ActionPerformed

    private void questiontableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_questiontableMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) questiontable.getModel();
        int p = questiontable.getSelectedRow();
        String c = (String) questiontable.getValueAt(p, 0);
        addsecid.setText(c);
        secdelete.setVisible(true);
        secupdate.setVisible(true);


    }//GEN-LAST:event_questiontableMouseClicked

    private void secupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secupdateActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            try {
                ResultSet rs = DB.search("select * from securityquestions where question='" + addsecid.getText() + "' and status='Active'");
                if (rs.next()) {

                    JOptionPane.showMessageDialog(rootPane, "Already defined Data...!");
                } else {
                    DefaultTableModel dtm = (DefaultTableModel) questiontable.getModel();
                    int p = questiontable.getSelectedRow();
                    String c = (String) questiontable.getValueAt(p, 0);
                    DB.iud("update securityquestions set question ='" + addsecid.getText() + "' where question='" + c + "'");

                    addsecid.setText(null);
                    securityquestion();
                    setquestion();

                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_secupdateActionPerformed

    private void secdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secdeleteActionPerformed
        int hh = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (hh == 0) {
            try {

                DefaultTableModel dtm = (DefaultTableModel) questiontable.getModel();
                int p = questiontable.getSelectedRow();
                String c = (String) questiontable.getValueAt(p, 0);
                System.out.print(c);
                ResultSet rs = DB.search("select * from securityquestions where question='" + addsecid.getText() + "'");
                if (rs.next()) {
                    System.out.print("xdsdf");
                    String q = rs.getString("questionid");
                    ResultSet rs1 = DB.search("select * from user_has_securityquestions where securityquestions_questionid='" + q + "'");
                    if (rs1.next()) {
                        JOptionPane.showMessageDialog(rootPane, "User already defined Data...!");

                    } else {
                        DB.iud("update securityquestions set status ='Inactive' where question='" + c + "'");

                        addsecid.setText(null);
                        securityquestion();
                        setquestion();
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_secdeleteActionPerformed

    private void jButton72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton72ActionPerformed

        int hh = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (hh == 0) {
            try {

                ResultSet rs = DB.search("select * from usertype where usertype='" + jTextField1.getText() + "' and status='Active'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "User already defined Data...!");
                } else {

                    ResultSet r = DB.search("select count(userid) as x from usertype ");
                    if (r.next()) {
                        String s = r.getString("x");
                        int h = Integer.parseInt(s);
                        h++;
                        DB.iud("insert into usertype value('" + h + "','" + jTextField1.getText() + "','Active')");
                        jTextField1.setText(null);
                        setpublish();
                    }

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton72ActionPerformed

    private void jButton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton73ActionPerformed

        int i = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            try {
                ResultSet rs = DB.search("select * from usertype where usertype='" + jTextField1.getText() + "' and status='Active'");
                if (rs.next()) {

                    JOptionPane.showMessageDialog(rootPane, "Already defined Data...!");
                } else {
                    DefaultTableModel dtm = (DefaultTableModel) setposition.getModel();
                    int p = setposition.getSelectedRow();
                    String c = (String) setposition.getValueAt(p, 0);
                    DB.iud("update usertype set usertype ='" + jTextField1.getText() + "' where usertype='" + c + "'");

                    jTextField1.setText(null);
                    setpublish();

                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_jButton73ActionPerformed

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton70ActionPerformed
        int hh = JOptionPane.showConfirmDialog(rootPane, "Are You Sure", "Are You Sure..?", JOptionPane.OK_CANCEL_OPTION);
        if (hh == 0) {
            try {

                DefaultTableModel dtm = (DefaultTableModel) setposition.getModel();
                int p = setposition.getSelectedRow();
                String c = (String) setposition.getValueAt(p, 0);
                System.out.print(c);
                ResultSet rs = DB.search("select * from usertype where usertype='" + jTextField1.getText() + "' and status='Active'");
                if (rs.next()) {
                    System.out.print("xdsdf");
                    String q = rs.getString("userid");
                    ResultSet rs1 = DB.search("select * from staff where usertype_userid='" + q + "'");
                    if (rs1.next()) {
                        JOptionPane.showMessageDialog(rootPane, "User already defined Data...!");

                    } else {
                        DB.iud("update usertype set status ='Inactive' where usertype='" + c + "'");

                        jTextField1.setText(null);
                        setpublish();
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_jButton70ActionPerformed

    private void setpositionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setpositionMouseClicked

        DefaultTableModel dtm = (DefaultTableModel) setposition.getModel();
        int p = setposition.getSelectedRow();
        String c = (String) setposition.getValueAt(p, 0);
        jTextField1.setText(c);
        jButton73.setVisible(true);
        jButton70.setVisible(true);


    }//GEN-LAST:event_setpositionMouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void snicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snicKeyTyped

        char x = evt.getKeyChar();
        if (snic.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_snicKeyTyped

    private void usermobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usermobileKeyTyped
        char x = evt.getKeyChar();
        if (usermobile.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_usermobileKeyTyped

    private void userlandKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userlandKeyTyped
        char x = evt.getKeyChar();
        if (userland.getText().length() == 0) {

            if (!(x >= '0' && x <= '9')) {
                evt.consume();
            }

        } else if (!(x >= '0' && x <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_userlandKeyTyped

    private void jButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton74ActionPerformed
        if (xx2.getText() == null) {
            clearfield();
            JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");

        } else {
            searchstaff();
        }
    }//GEN-LAST:event_jButton74ActionPerformed

    private void xx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xx2ActionPerformed
        if (xx2.getText() == null) {
            clearfield();
            JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");

        } else {
            searchstaff();
        }
    }//GEN-LAST:event_xx2ActionPerformed

    private void p5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_p5KeyTyped

    private void p6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p6KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_p6KeyTyped

    private void jButton75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton75ActionPerformed
        webCam c = new webCam();
        c.setVisible(true);
    }//GEN-LAST:event_jButton75ActionPerformed

    private void jButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton62ActionPerformed
        try {
            JFileChooser jf = new JFileChooser(new File("F:/java/sad 10/food"));
            int i = jf.showOpenDialog(this);
            if (i == jf.APPROVE_OPTION) {
                File selectedFile = jf.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                staffnewpath = path.replace("\\", "/");
                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(profile1.getWidth(), profile1.getHeight(), Image.SCALE_SMOOTH);
                profile1.setIcon(new ImageIcon(img));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton62ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        webCam c = new webCam();
        c.setVisible(true);
    }//GEN-LAST:event_jButton48ActionPerformed

    private void tidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tidActionPerformed
        if (tid.getText() == null) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Data....!");
            tid.setText(null);
            tid.grabFocus();
        } else {
            teachersearch();
        }
    }//GEN-LAST:event_tidActionPerformed

    private void schalltimeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_schalltimeItemStateChanged
        try {

            endtime.removeAllItems();
            ResultSet rs1 = DB.search("select * from time where starttime='" + schalltime.getSelectedItem() + "'");
            while (rs1.next()) {

                String k2 = rs1.getString("endtime");

                endtime.addItem(k2);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_schalltimeItemStateChanged

    private void jLabel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseMoved
        visiblefalse();
    }//GEN-LAST:event_jLabel6MouseMoved

    private void calenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calenderMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        int i = calender.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);


    }//GEN-LAST:event_calenderMouseClicked

    private void maninsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maninsMouseClicked

    }//GEN-LAST:event_maninsMouseClicked

    private void HometabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HometabMouseClicked
        clearfield();
    }//GEN-LAST:event_HometabMouseClicked

    private void jButton76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton76ActionPerformed
        updatestream();

        autostreamid();
        bbbbbbbbb.setEnabled(true);
        setclasssubject();
        addallsubject();
        setstream();
    }//GEN-LAST:event_jButton76ActionPerformed

    private void searchcompanyidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcompanyidActionPerformed
        searchcompany();
    }//GEN-LAST:event_searchcompanyidActionPerformed

    private void newsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newsubjectMouseClicked

        int i = newsubject.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel) newsubject.getModel();

        setid.setText((String) dtm.getValueAt(i, 1));
        setname.setText((String) dtm.getValueAt(i, 2));

        setstatus.setSelectedItem(dtm.getValueAt(i, 3));
        spayment.setText((String) dtm.getValueAt(i, 4));
        dtm.setRowCount(0);

        jButton28.setEnabled(false);
        jButton77.setEnabled(true);
    }//GEN-LAST:event_newsubjectMouseClicked

    private void jButton77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton77ActionPerformed
        try {
            DefaultTableModel dtmxx = (DefaultTableModel) newsubject.getModel();
            int u = dtmxx.getRowCount();
            for (int i = 0; i < u; i++) {
                Boolean s1 = (Boolean) newsubject.getValueAt(i, 0);
                String s2 = (String) newsubject.getValueAt(i, 1);
                String s3 = (String) newsubject.getValueAt(i, 2);
                String s5 = (String) newsubject.getValueAt(i, 4);
                String s4 = (String) newsubject.getValueAt(i, 3);

                String ee;
                if (s1 == true) {

                    ResultSet rs = DB.search("select * from subject where subjectid='" + s2 + "'");
                    if (rs.next()) {
                        ResultSet rsw = DB.search("select * from subject where subjectid='" + s2 + "' and status='Deactive'");
                        if (rsw.next()) {
                            DB.iud("update subject set subjectname ='" + s3 + "',payment='" + s5 + "', status='Active' where subjectid='" + s2 + "'");
                            System.out.println("ok");

                        } else {
                            DB.iud("update subject set subjectname ='" + s3 + "',payment='" + s5 + "',status='Deactive' where subjectid='" + s2 + "'");
                            System.out.println("ok");

                        }
                    }

                } else {
                    System.out.println("o32k");
                    ResultSet rs1 = DB.search("select * from subject where subjectid='" + s2 + "'");
                    if (rs1.first()) {
                        System.out.println("o32kgfg");

                        DB.iud("update subject set subjectname ='" + s3 + "',payment='" + s5 + "',status='" + s4 + "' where subjectid='" + s2 + "'");
                        setid.setText(null);
                        setname.setText(null);
                        setstatus.setSelectedIndex(0);
                        spayment.setText(null);

                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Invalid Update..!");
                    }

                }

            }
            dtmxx.setRowCount(0);
            newsubjecttable();
        } catch (Exception e) {
            e.printStackTrace();
        }

        jButton32.setEnabled(true);
        jButton28.setEnabled(true);
        setid.setText(null);
        setname.setText(null);
        spayment.setText(null);
        setstatus.setSelectedIndex(0);
        jButton32.setEnabled(true);
        autosubjectid();
    }//GEN-LAST:event_jButton77ActionPerformed

    private void newsubjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newsubjectMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_newsubjectMouseEntered

    private void jComboBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox7ItemStateChanged
        //setupdatesubject();


    }//GEN-LAST:event_jComboBox7ItemStateChanged

    private void jComboBox7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox7MouseClicked
        try {
            setstudentupdate s = new setstudentupdate(this, true);
            s.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox7MouseClicked

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s1ActionPerformed

private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
    DefaultTableModel fu = (DefaultTableModel) studentsub.getModel();
    DefaultTableModel fu1 = (DefaultTableModel) jTable3.getModel();
    DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();
    fu.setRowCount(0);
    fu1.setRowCount(0);
    fu2.setRowCount(0);
    searchstudentdata();
}//GEN-LAST:event_jButton43ActionPerformed

    private void tthuesdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tthuesdayMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tthuesday.getModel();
        int i = tthuesday.getSelectedRow();
        //   String f = (String) dtm.getValueAt(i, 0);

        //  DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        //int i = calender.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_tthuesdayMouseClicked

    private void twendsdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twendsdayMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) twendsday.getModel();
        int i = twendsday.getSelectedRow();

        //    DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        // int i = calender.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {
                // String si = z.getString("subject_subjectid");
                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_twendsdayMouseClicked

    private void tthursadyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tthursadyMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tthursady.getModel();
        int i = tthursady.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }
        //  DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        //int i = calender.getSelectedRow();
        // String f = (String) dtm.getValueAt(i, 0);

        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_tthursadyMouseClicked

    private void tfridayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfridayMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tfriday.getModel();
        int i = tfriday.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }

        //   DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        // int i = calender.getSelectedRow();
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_tfridayMouseClicked

    private void tsaturdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tsaturdayMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tsaturday.getModel();
        int i = tsaturday.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);

        if (!(zz == null)) {
            zz.dispose();
        }
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_tsaturdayMouseClicked

    private void tsundayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tsundayMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tsunday.getModel();
        int i = tsunday.getSelectedRow();
        String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }

        //      DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
        // int i = calender.getSelectedRow();
        // String f = (String) dtm.getValueAt(i, 0);
        if (!(zz == null)) {
            zz.dispose();
        }
        zz = new calenderview();
        //   zz.abc.setText(f);
        //  setcalenderdetails();
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
            ResultSet z = DB.search("select * from classregistation where classid='" + f + "'");
            if (z.next()) {

                String ti = z.getString("subject_has_teacher_subtea_id");
                String q = z.getString("Timeslot_timeslotid");
                ResultSet zk = DB.search("select * from subject_has_teacher where subtea_id='" + ti + "'");
                if (zk.next()) {
                    String teacherid = zk.getString("teacher_teacherid");
                    ResultSet a = DB.search("select * from teacher where teacherid='" + teacherid + "'");
                    if (a.next()) {
                        String name = a.getString("name");
                        String si = zk.getString("subject_subjectid");
                        ResultSet d = DB.search("select * from subject where subjectid='" + si + "'");
                        if (d.next()) {
                            String subjectname = d.getString("subjectname");

                            ResultSet sa = DB.search("select * from timeslot where timeslotid='" + q + "'");
                            if (sa.next()) {
                                String e1 = sa.getString("time_timeid");
                                String e2 = sa.getString("day_dayid");
                                ResultSet t = DB.search("select * from time where timeid='" + e1 + "'");

                                if (t.next()) {
                                    String stime = t.getString("starttime");
                                    String etime = t.getString("endtime");
                                    ResultSet t1 = DB.search("select * from day where dayid='" + e2 + "'");

                                    if (t1.next()) {
                                        String daydetails = t1.getString("date");

                                        zz.jLabel9.setText(subjectname);
                                        zz.jLabel10.setText(name);
                                        zz.jLabel11.setText(daydetails);
                                        zz.jLabel12.setText(stime);
                                        zz.jLabel13.setText(etime);
                                        zz.jLabel14.setText(z.getString("type"));
                                        //  zz.jLabel15.setText(subjectname);

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        zz.setVisible(true);

    }//GEN-LAST:event_tsundayMouseClicked

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged

    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void adItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_adItemStateChanged

    }//GEN-LAST:event_adItemStateChanged

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton79ActionPerformed
        try {
            String s1 = serchsid.getText();
            System.out.println("s1");

            ResultSet rs = DB.search("select * from student where studentid='" + s1 + "'");
            if (rs.next()) {

                if (!(por == null)) {
                    por.dispose();
                }
                por = new studentPortal();
                por.setVisible(true);
            } else {

                JOptionPane.showMessageDialog(rootPane, "Invalid Data");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton79ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed

        try {
            ResultSet rs = DB.search("select * from staff where nic='" + jTextField38.getText() + "'");
            if (rs.next()) {
                jLabel178.setText("" + rs.getString("title") + " " + rs.getString("firstname") + " " + rs.getString("middlename") + " " + rs.getString("lastname"));

                File f = new File(rs.getString("img"));
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(jLabel179.getWidth(), jLabel179.getHeight(), Image.SCALE_SMOOTH);
                jLabel179.setIcon(new ImageIcon(img));

                String s1 = rs.getString("staffid");

                ResultSet re = DB.search("select * from user where staff_staffid='" + s1 + "'");
                if (re.next()) {

                    String g = rs.getString("usertype_userid");

                    ResultSet re1 = DB.search("select * from usertype where userid='" + g + "'");
                    if (re1.next()) {
                        jLabel175.setText(re1.getString("usertype"));

                    }
                }
                DefaultTableModel dtm = (DefaultTableModel) jTable7.getModel();
                ResultSet ts = DB.search("select * from staff_has_monthlyslary where staff_staffid='" + s1 + "'");
                while (ts.next()) {
                    ResultSet ts1 = DB.search("select * from monthlyslary where salaryid='" + ts.getString("monthlyslary_salaryid") + "'");
                    if (ts1.next()) {
                        Vector v = new Vector();
                        v.add(ts1.getString("year"));
                        v.add(ts1.getString("month"));
                        v.add(ts.getString("date"));
                        v.add(ts1.getString("working hours"));
                        v.add(ts.getString("totalsalary"));
                        dtm.addRow(v);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                clearfield();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        Date df = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String sdate = sdf.format(df);
        String mi = jTextField36.getText();
        int i = Integer.parseInt(mi);

        String d = jTextField37.getText();
        int y = Integer.parseInt(d);
        int g = i * y;
        jTextField9.setText("" + g);

        String x = jTextField10.getText();
        int cc = Integer.parseInt(x);
        int rd = g - cc;
        jLabel173.setText("" + rd);
        try {

            ResultSet rs = DB.search("select count(salaryid) as x from monthlyslary");
            if (rs.next()) {
                int t = Integer.parseInt(rs.getString("x"));
                t++;
                DB.iud("insert into monthlyslary values('" + t + "','" + jTextField36.getText() + "','" + jTextField37.getText() + "','" + jLabel173.getText() + "','" + jComboBox8.getSelectedItem() + "','" + jComboBox36.getSelectedItem() + "') ");
                ResultSet rsy = DB.search("select count(staffhassalary) as x from staff_has_monthlyslary");
                if (rsy.next()) {
                    int tr = Integer.parseInt(rsy.getString("x"));
                    tr++;
                    ResultSet rsc = DB.search("select * from staff where nic='" + jTextField38.getText() + "'");
                    if (rsc.next()) {
                        String s1 = rsc.getString("staffid");
                        DB.iud("insert into staffhassalary values('" + s1 + "','" + t + "','" + jLabel173.getText() + "','" + jTextField10.getText() + "','" + tr + "','" + sdate + "')");
                    }
                }

            }
            clearfield();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        safielter s = new safielter(this, true);
        s.setVisible(true);
    }//GEN-LAST:event_search1ActionPerformed

    private void jButton80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton80ActionPerformed
        safielter s = new safielter(this, true);
        s.setVisible(true);
        // s.dispose();
    }//GEN-LAST:event_jButton80ActionPerformed

    private void viewallexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewallexMouseClicked
        System.out.println("dsd");
        DefaultTableModel dtm = (DefaultTableModel) viewallex.getModel();
        int i = viewallex.getSelectedRow();
        String s1 = (String) viewallex.getValueAt(i, 0);
        String p = String.valueOf(i);
        changestate.x = s1;
        changestate s = new changestate(this, true);
        s.setVisible(true);
        //    String s1=viewallex.getValueAt(i, 0);
    }//GEN-LAST:event_viewallexMouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        jTextField4.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        int i = jTable2.getSelectedRow();
        String s1 = (String) jTable2.getValueAt(i, 0);
        jTextField4.setText(s1);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String s1 = jTextField4.getText();
        try {
            DB.iud("update user set logstate='Signed_out' where userid='" + s1 + "'");
            jTextField4.setText(null);
            viewstate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton81ActionPerformed
        studentattendance a = new studentattendance();
        a.setVisible(true);
        try {
            System.out.println("ok1");
            ResultSet rs = DB.search("select * from staff where nic ='" + email.getText() + "'");
            if (rs.first()) {

                String idc = rs.getString("staffid");
                System.out.println(idc);
                MyDB.iud("update user set logstate='Signed_out' where staff_staffid='" + idc + "'");
                // DB.iud("update user set  comment='"+4545+"' where staff_staffid='" + idc+ "'");

                this.dispose();
            } else {
                System.out.println("notok");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jButton81ActionPerformed

    private void jButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton78ActionPerformed
        markstaffattendance a = new markstaffattendance();
        a.setVisible(true);
        try {
            System.out.println("ok1");
            ResultSet rs = DB.search("select * from staff where nic ='" + email.getText() + "'");
            if (rs.first()) {

                String idc = rs.getString("staffid");
                System.out.println(idc);
                MyDB.iud("update user set logstate='Signed_out' where staff_staffid='" + idc + "'");
                // DB.iud("update user set  comment='"+4545+"' where staff_staffid='" + idc+ "'");

                this.dispose();
            } else {
                System.out.println("notok");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton78ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        teacherpayment p = new teacherpayment();
        p.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jComboBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox8ItemStateChanged
        try {
            long tot = 0;
            System.out.println("sdsdsewerpppppppppppps");
            ResultSet rs = DB.search("select * from staff where nic='" + jTextField38.getText() + "'");
            if (rs.next()) {
                String s1 = rs.getString("staffid");
                ResultSet s = DB.search("select * from staff_has_monthlyslary where staff_staffid='" + s1 + "'");
                if (s.next()) {
                    String se = (String) jComboBox8.getSelectedItem();
                    int z = Integer.parseInt(se);
                    z = z - 1;
                    System.out.println("eerer");
                    ResultSet sx = DB.search("select * from monthlyslary where salaryid='" + s.getString("monthlyslary_salaryid") + "' and month='" + z + "'");
                    if (sx.next()) {
                        JOptionPane.showMessageDialog(rootPane, "Already Paid");
                    } else {
                        System.out.println("sdsdsdsd");
                        z = z + 1;
                        Date d = new Date();
                        SimpleDateFormat sdf = new SimpleDateFormat("MM");
                        String cm = sdf.format(d);
                        int h = Integer.parseInt(cm);
                        if (h <= z) {
                            z = z - 1;
                            ResultSet sxz = DB.search("select * from staffattendance where month='" + z + "' and year='" + jComboBox36.getSelectedItem() + "'");
                            while (sxz.next()) {
                                String in = sxz.getString("intime");
                                String out = sxz.getString("outtime");
                                //     String ad=sdf.format(sxz.getString("date"));
                                //   int h=Integer.parseInt(cm);
                                // This example works
                                String dateStart = in;
                                String dateStop = out;

// This example doesnt work
//String dateStart = "2330";
//String dateStop = "0245";
// Custom date format
                                SimpleDateFormat format = new SimpleDateFormat("HH:mm");

                                Date d1 = null;
                                Date d2 = null;
                                try {
                                    d1 = format.parse(dateStart);
                                    d2 = format.parse(dateStop);
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }

// MY ADDITION TO YOUR CODE STARTS HERE
                                if (d2.before(d1)) {
                                    Calendar c = Calendar.getInstance();
                                    c.setTime(d2);
                                    c.add(Calendar.DATE, 1);
                                    d2 = c.getTime();
                                }
// ENDS HERE

                                long diff = d2.getTime() - d1.getTime();
                                long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);
                                tot += minutes;
                                // System.out.println("Time in minutes: " + minutes + " minutes.");

                            }

                        } else {

                            JOptionPane.showMessageDialog(rootPane, "future Money");
                        }
                    }
                } else {
                    try {
                        String se = (String) jComboBox8.getSelectedItem();
                        int z = Integer.parseInt(se);
                        z = z - 1;
                        ResultSet sxz = DB.search("select * from staffattendance where month='" + z + "' and year='" + jComboBox36.getSelectedItem() + "'");
                        if (sxz.next()) {
                            while (sxz.next()) {
                                String in = sxz.getString("intime");
                                String out = sxz.getString("outtime");
                                //     String ad=sdf.format(sxz.getString("date"));
                                //   int h=Integer.parseInt(cm);
                                // This example works
                                String dateStart = in;
                                String dateStop = out;

// This example doesnt work
//String dateStart = "2330";
//String dateStop = "0245";
// Custom date format
                                SimpleDateFormat format = new SimpleDateFormat("HH:mm");

                                Date d1 = null;
                                Date d2 = null;
                                try {
                                    d1 = format.parse(dateStart);
                                    d2 = format.parse(dateStop);
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }

// MY ADDITION TO YOUR CODE STARTS HERE
                                if (d2.before(d1)) {
                                    Calendar c = Calendar.getInstance();
                                    c.setTime(d2);
                                    c.add(Calendar.DATE, 1);
                                    d2 = c.getTime();
                                }
// ENDS HERE

                                long diff = d2.getTime() - d1.getTime();
                                long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);
                                tot += minutes;
                            }

                        } else {

                            JOptionPane.showMessageDialog(rootPane, "No Data");

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }
            jTextField36.setText("" + tot);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jComboBox8ItemStateChanged

    private void jComboBox8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox8MouseClicked


    }//GEN-LAST:event_jComboBox8MouseClicked

    private void jComboBox36ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox36ItemStateChanged
        try {
            long tot = 0;
            System.out.println("sdsdsewerpppppppppppps");
            ResultSet rs = DB.search("select * from staff where nic='" + jTextField38.getText() + "'");
            if (rs.next()) {
                String s1 = rs.getString("staffid");
                ResultSet s = DB.search("select * from staff_has_monthlyslary where staff_staffid='" + s1 + "'");
                if (s.next()) {
                    String se = (String) jComboBox8.getSelectedItem();
                    int z = Integer.parseInt(se);
                    z = z - 1;
                    System.out.println("eerer");
                    ResultSet sx = DB.search("select * from monthlyslary where salaryid='" + s.getString("monthlyslary_salaryid") + "' and month='" + z + "'");
                    if (sx.next()) {
                        JOptionPane.showMessageDialog(rootPane, "Already Paid");
                    } else {
                        System.out.println("sdsdsdsd");
                        z = z + 1;
                        Date d = new Date();
                        SimpleDateFormat sdf = new SimpleDateFormat("MM");
                        String cm = sdf.format(d);
                        int h = Integer.parseInt(cm);
                        if (h <= z) {
                            z = z - 1;
                            ResultSet sxz = DB.search("select * from staffattendance where month='" + z + "' and year='" + jComboBox36.getSelectedItem() + "'");
                            while (sxz.next()) {
                                String in = sxz.getString("intime");
                                String out = sxz.getString("outtime");
                                //     String ad=sdf.format(sxz.getString("date"));
                                //   int h=Integer.parseInt(cm);
                                // This example works
                                String dateStart = in;
                                String dateStop = out;

// This example doesnt work
//String dateStart = "2330";
//String dateStop = "0245";
// Custom date format
                                SimpleDateFormat format = new SimpleDateFormat("HH:mm");

                                Date d1 = null;
                                Date d2 = null;
                                try {
                                    d1 = format.parse(dateStart);
                                    d2 = format.parse(dateStop);
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }

// MY ADDITION TO YOUR CODE STARTS HERE
                                if (d2.before(d1)) {
                                    Calendar c = Calendar.getInstance();
                                    c.setTime(d2);
                                    c.add(Calendar.DATE, 1);
                                    d2 = c.getTime();
                                }
// ENDS HERE

                                long diff = d2.getTime() - d1.getTime();
                                long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);
                                tot += minutes;
                                // System.out.println("Time in minutes: " + minutes + " minutes.");

                            }

                        } else {

                            JOptionPane.showMessageDialog(rootPane, "future Money");
                        }
                    }
                } else {
                    try {
                        String se = (String) jComboBox8.getSelectedItem();
                        int z = Integer.parseInt(se);
                        z = z - 1;
                        ResultSet sxz = DB.search("select * from staffattendance where month='" + z + "' and year='" + jComboBox36.getSelectedItem() + "'");
                        if (sxz.next()) {
                            while (sxz.next()) {
                                String in = sxz.getString("intime");
                                String out = sxz.getString("outtime");
                                //     String ad=sdf.format(sxz.getString("date"));
                                //   int h=Integer.parseInt(cm);
                                // This example works
                                String dateStart = in;
                                String dateStop = out;

// This example doesnt work
//String dateStart = "2330";
//String dateStop = "0245";
// Custom date format
                                SimpleDateFormat format = new SimpleDateFormat("HH:mm");

                                Date d1 = null;
                                Date d2 = null;
                                try {
                                    d1 = format.parse(dateStart);
                                    d2 = format.parse(dateStop);
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }

// MY ADDITION TO YOUR CODE STARTS HERE
                                if (d2.before(d1)) {
                                    Calendar c = Calendar.getInstance();
                                    c.setTime(d2);
                                    c.add(Calendar.DATE, 1);
                                    d2 = c.getTime();
                                }
// ENDS HERE

                                long diff = d2.getTime() - d1.getTime();
                                long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);
                                tot += minutes;
                            }

                        } else {

                            JOptionPane.showMessageDialog(rootPane, "No Data");

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }
            jTextField36.setText("" + tot);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox36ItemStateChanged

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        clearfield();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void rstreamnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rstreamnameKeyTyped

    }//GEN-LAST:event_rstreamnameKeyTyped

    private void rstreamnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rstreamnameKeyPressed

    }//GEN-LAST:event_rstreamnameKeyPressed

    private void serchsidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serchsidKeyReleased
        int s1 = serchsid.getText().length();
        if (s1 > 4) {
            try {
                ResultSet r = DB.search("select * from student where nic LIKE '" + serchsid.getText() + "%'");
                if (r.next()) {
                    serchsid.setText(r.getString("nic"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_serchsidKeyReleased

    private void xx2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_xx2KeyReleased
        int s1 = xx2.getText().length();
        if (s1 > 4) {
            try {
                ResultSet r = DB.search("select * from staff where nic LIKE '" + xx2.getText() + "%'");
                if (r.next()) {
                    xx2.setText(r.getString("nic"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_xx2KeyReleased

    private void tidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tidKeyReleased

        int s1 = tid.getText().length();
        if (s1 > 4) {
            try {
                ResultSet r = DB.search("select * from teacher where NIC_number LIKE '" + tid.getText() + "%'");
                if (r.next()) {
                    tid.setText(r.getString("NIC_number"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tidKeyReleased

    private void search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search1KeyReleased

        int s1 = search1.getText().length();
        if (s1 > 4) {
            try {
                ResultSet r = DB.search("select * from student where nic LIKE '" + search1.getText() + "%'");
                if (r.next()) {
                    search1.setText(r.getString("nic"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_search1KeyReleased

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        int s1 = search.getText().length();
        if (s1 > 4) {
            try {
                ResultSet r = DB.search("select * from staff where nic LIKE '" + search.getText() + "%'");
                if (r.next()) {
                    search.setText(r.getString("nic"));

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_searchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    private void tabSize() {

        //Maintabs
        JLabel Manage_Institute = new JLabel("", SwingConstants.CENTER);
        JLabel Messages = new JLabel("", SwingConstants.CENTER);
        JLabel Calendar = new JLabel("", SwingConstants.CENTER);
        JLabel Classsch = new JLabel("", SwingConstants.CENTER);
        JLabel Examination = new JLabel("", SwingConstants.CENTER);
        JLabel examview1 = new JLabel("", SwingConstants.CENTER);
        JLabel viewexam2 = new JLabel("", SwingConstants.CENTER);

        JLabel Institute = new JLabel("", SwingConstants.CENTER);
        JLabel Insmessages = new JLabel("", SwingConstants.CENTER);
        JLabel Insregistration = new JLabel("", SwingConstants.CENTER);
        JLabel Hall_registration = new JLabel("", SwingConstants.CENTER);
        JLabel Searchins = new JLabel("", SwingConstants.CENTER);
        //JLabel Edit_deleteins  = new JLabel();

        JLabel Courcecontent = new JLabel("", SwingConstants.CENTER);
        JLabel Regstream1 = new JLabel("", SwingConstants.CENTER);
        JLabel Regsubject2 = new JLabel("", SwingConstants.CENTER);

        JLabel Students = new JLabel("", SwingConstants.CENTER);
        JLabel studentinfo = new JLabel("", SwingConstants.CENTER);
        JLabel studentreg = new JLabel("", SwingConstants.CENTER);
        JLabel studentreenroll = new JLabel("", SwingConstants.CENTER);
        JLabel studentreport = new JLabel("", SwingConstants.CENTER);

        JLabel Home = new JLabel("", SwingConstants.CENTER);

        JLabel Users = new JLabel("", SwingConstants.CENTER);
        JLabel staffinfo = new JLabel("", SwingConstants.CENTER);
        JLabel addnewstaff = new JLabel("", SwingConstants.CENTER);
        JLabel editdeletestaff = new JLabel("", SwingConstants.CENTER);
        JLabel addnewtea = new JLabel("", SwingConstants.CENTER);
        JLabel viewtea = new JLabel("", SwingConstants.CENTER);

        JLabel Attendance = new JLabel("", SwingConstants.CENTER);

        JLabel Settings = new JLabel("", SwingConstants.CENTER);

        JLabel Financial_Tools = new JLabel("", SwingConstants.CENTER);
        JLabel Studentpayment = new JLabel("", SwingConstants.CENTER);
        //JLabel Teacherpayment = new JLabel("", SwingConstants.CENTER);
        JLabel staffpayment = new JLabel("", SwingConstants.CENTER);
        JLabel expenses = new JLabel("", SwingConstants.CENTER);

        //Sub-tabs
        Manage_Institute.setText("<html><b>Manage<br>Institute</b></html>");
        Messages.setText("<html><b>Messages</b></html>");
        Calendar.setText("<html><b>Calendar</b></html>");
        Classsch.setText("<html><b>Class<br>Schedule</b></html>");
        Examination.setText("<html><b>Examinations</b></html>");
        examview1.setText("<html><b>View<br>Examinations</b></html>");
        viewexam2.setText("<html><b>New/Edit<br>Examination</b></html>");

        Institute.setText("<html><b>Institute</b></html>");
        Insmessages.setText("<html><b>Institute<br>Messages</b></html>");
        Insregistration.setText("<html><b>Institute<br>Registration</b></html>");
        Hall_registration.setText("<html><b>Hall<br>Registration</b></html>");
        Searchins.setText("<html><b>Search<br>Institute</b></html>");
        //Edit_deleteins.setText("<html>Edit<br>Delete</html>");

        Courcecontent.setText("<html><b>Course<br>Content</br></html>");
        Regstream1.setText("<html><b>Register<br>Stream</br></html>");
        Regsubject2.setText("<html><b>Register<br>Subject</br></html>");

        Students.setText("Students");
        studentinfo.setText("<html>Student<br>Information</html>");
        studentreg.setText("<html>Student<br>Registration</html>");
        studentreenroll.setText("<html>Student<br>Re-Enroll</html>");
        studentreport.setText("<html>Student<br>Report</html>");

        Users.setText("Users");
        staffinfo.setText("<html>Staff<br>Information</html>");
        addnewstaff.setText("<html>Add New<br>Staff</html>");
        editdeletestaff.setText("<html>Edit Del.<br>Staff</html>");
        addnewtea.setText("<html>Add New<br>Teacher</html>");
        viewtea.setText("<html>View<br>Teachers</html>");

        Attendance.setText("Attendance");

        Settings.setText("Settings");

        Financial_Tools.setText("<html>Financial<br>Tools</html>");
        Studentpayment.setText("<html>Student<br>Payments</html>");
        //Teacherpayment.setText("<html>Teacher<br>Payment</html>");
        staffpayment.setText("<html>Staff<br>Payment</html>");
        expenses.setText("Expenses");

        Home.setText("Home");

        Home.setPreferredSize(new Dimension(178, 48));

        Manage_Institute.setPreferredSize(new Dimension(178, 48));
        Messages.setPreferredSize(new Dimension(210, 28));
        Calendar.setPreferredSize(new Dimension(210, 28));
        Classsch.setPreferredSize(new Dimension(210, 28));
        Examination.setPreferredSize(new Dimension(210, 28));
        examview1.setPreferredSize(new Dimension(120, 50));
        viewexam2.setPreferredSize(new Dimension(120, 50));

        Institute.setPreferredSize(new Dimension(210, 28));
        Insmessages.setPreferredSize(new Dimension(120, 50));
        Insregistration.setPreferredSize(new Dimension(120, 50));
        Hall_registration.setPreferredSize(new Dimension(120, 50));
        Searchins.setPreferredSize(new Dimension(120, 50));
        //Edit_deleteins.setPreferredSize(new Dimension(120, 50));

        Courcecontent.setPreferredSize(new Dimension(210, 28));
        Regstream1.setPreferredSize(new Dimension(120, 80));
        Regsubject2.setPreferredSize(new Dimension(120, 80));

        Students.setPreferredSize(new Dimension(176, 48));
        studentinfo.setPreferredSize(new Dimension(120, 80));
        studentreg.setPreferredSize(new Dimension(120, 80));
        studentreenroll.setPreferredSize(new Dimension(120, 80));
        studentreport.setPreferredSize(new Dimension(120, 80));

        Users.setPreferredSize(new Dimension(176, 48));
        staffinfo.setPreferredSize(new Dimension(120, 80));
        addnewstaff.setPreferredSize(new Dimension(120, 80));
        editdeletestaff.setPreferredSize(new Dimension(120, 80));
        addnewtea.setPreferredSize(new Dimension(120, 80));
        viewtea.setPreferredSize(new Dimension(120, 80));

        Attendance.setPreferredSize(new Dimension(176, 48));

        Settings.setPreferredSize(new Dimension(178, 48));

        Financial_Tools.setPreferredSize(new Dimension(178, 48));
        Studentpayment.setPreferredSize(new Dimension(120, 80));
        //Teacherpayment.setPreferredSize(new Dimension(120, 80));
        staffpayment.setPreferredSize(new Dimension(120, 80));
        expenses.setPreferredSize(new Dimension(120, 80));

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/Home.png")));

        Manage_Institute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/Manageins.png")));
        Messages.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/messages.png")));
        Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/calendar.png")));
        Classsch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/calendar.png")));
        Examination.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/exam.png")));
        examview1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/coursecontent.png")));
        viewexam2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/exam.png")));

        Institute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/institute.png")));
        Insmessages.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/messages.png")));
        Insregistration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/addins.png")));
        Hall_registration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/institute.png")));
        Searchins.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/insinfo.png")));
        //Edit_deleteins.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/messages.png"))); 	

        Courcecontent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/coursecontent.png")));
        Regstream1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/stream1.png")));
        Regsubject2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/addsub.png")));

        Students.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/student.png")));
        studentinfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/studentinfo.png")));
        studentreg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/studentadd.png")));
        studentreenroll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/studentreenroll.png")));
        studentreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/studentreenroll.png")));

        Users.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/users.png")));
        staffinfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/staffinfo.png")));
        addnewstaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/staffadd.png")));
        editdeletestaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/staffdelete.png")));
        addnewtea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/users.png")));
        viewtea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/users.png")));

        Settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/settings.png")));

        Financial_Tools.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/financialtools.png")));
        Studentpayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/financialtools.png")));
        //Teacherpayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/duepayments.png")));
        staffpayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images3/staffpayment.png")));
        //expenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/financialtools.png")));

        Attendance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images2/Coursecontent.png")));

        Hometab.setTabComponentAt(0, Home);
        Hometab.setTabComponentAt(1, Manage_Institute);
        Hometab.setTabComponentAt(2, Students);
        Hometab.setTabComponentAt(3, Users);
        Hometab.setTabComponentAt(4, Attendance);
        Hometab.setTabComponentAt(5, Settings);
        Hometab.setTabComponentAt(6, Financial_Tools);

        manins.setTabComponentAt(0, Messages);
        manins.setTabComponentAt(1, Institute);
        manins.setTabComponentAt(2, Calendar);
        manins.setTabComponentAt(3, Classsch);
        manins.setTabComponentAt(4, Examination);
        manins.setTabComponentAt(5, Courcecontent);

        institutetab.setTabComponentAt(0, Insmessages);
        institutetab.setTabComponentAt(1, Insregistration);
        institutetab.setTabComponentAt(2, Hall_registration);
        institutetab.setTabComponentAt(3, Searchins);
        //institutetab.setTabComponentAt(4, Edit_deleteins);

        Studenttab.setTabComponentAt(0, studentinfo);
        Studenttab.setTabComponentAt(1, studentreg);
        Studenttab.setTabComponentAt(2, studentreenroll);
        //Studenttab.setTabComponentAt(3, studentreport);

        userstab.setTabComponentAt(0, staffinfo);
        userstab.setTabComponentAt(1, addnewstaff);
        userstab.setTabComponentAt(2, editdeletestaff);
        userstab.setTabComponentAt(3, addnewtea);
        userstab.setTabComponentAt(4, viewtea);

        paymenttab.setTabComponentAt(0, Studentpayment);
        paymenttab.setTabComponentAt(1, staffpayment);
        //paymenttab.setTabComponentAt(2, Teacherpayment);

        examtab.setTabComponentAt(1, examview1);
        examtab.setTabComponentAt(0, viewexam2);

        coursecontenttab.setTabComponentAt(0, Regstream1);
        coursecontenttab.setTabComponentAt(1, Regsubject2);

        //coursetab.setComponentAt(0, Regstream);
        //coursetab.setComponentAt(1, Regsubject);
        //UIManager.getLookAndFeelDefaults().put("TabbedPane:TabbedPaneTab.contentMargins", new Insets(25, 100, 0, 0));
        //UIManager.getLookAndFeelDefaults().put("TabbedPane:TabbedPaneTab.contentMargins", new Insets(25, 100, 0, 0));
        //set all tabbedpanes into given size
//        studentInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/0010.png")));
//        studentInfo.setHorizontalTextPosition(JLabel.CENTER);
//        studentInfo.setVerticalTextPosition(JLabel.CENTER);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Hometab;
    private javax.swing.JTabbedPane Studenttab;
    private javax.swing.JLabel a11;
    private javax.swing.JLabel a12;
    private javax.swing.JLabel a13;
    private javax.swing.JLabel a14;
    private javax.swing.JLabel a15;
    private javax.swing.JTextField aa1;
    private javax.swing.JTextField aa2;
    private javax.swing.JTextField aa3;
    private javax.swing.JLabel acType;
    private javax.swing.JLabel aclevel;
    private javax.swing.JRadioButton ad;
    private javax.swing.JTextField addsecid;
    private javax.swing.JTextField answer1;
    private javax.swing.JTextField answer2;
    private javax.swing.JLabel b10;
    private javax.swing.JLabel b11;
    private javax.swing.JLabel b12;
    private javax.swing.JLabel b13;
    private javax.swing.JLabel b14;
    private javax.swing.JLabel bb;
    private javax.swing.JButton bbbbbbbbb;
    private javax.swing.JTextField bid;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel c1;
    private javax.swing.JTextField c10;
    private javax.swing.JTextField c11;
    private javax.swing.JTextField c12;
    private javax.swing.JComboBox<String> c13;
    private javax.swing.JComboBox<String> c14;
    private javax.swing.JComboBox c15;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel c3;
    private javax.swing.JTable calender;
    private javax.swing.JComboBox classsub;
    private javax.swing.JComboBox classteacher;
    private javax.swing.JButton clear;
    private javax.swing.JLabel clock;
    private javax.swing.JTextField comid;
    private javax.swing.JTextArea comment;
    private javax.swing.JTextArea comments;
    private javax.swing.JTextField comname;
    private javax.swing.JComboBox<String> country;
    private javax.swing.JComboBox<String> country1;
    private javax.swing.JTabbedPane coursecontenttab;
    private javax.swing.JLabel day;
    private com.toedter.calendar.JDateChooser dob;
    private com.toedter.calendar.JDateChooser dob1;
    private javax.swing.JLabel dsd;
    private javax.swing.JComboBox<String> edzone;
    private javax.swing.JLabel eee1;
    public static javax.swing.JLabel email;
    private javax.swing.JTextField email1;
    private javax.swing.JComboBox endtime;
    private com.toedter.calendar.JDateChooser examdate;
    private javax.swing.JTabbedPane examtab;
    private javax.swing.JComboBox eyear;
    private javax.swing.JComboBox<String> ezone;
    private javax.swing.JRadioButton female;
    private javax.swing.JRadioButton female1;
    private javax.swing.JComboBox g1;
    private javax.swing.JComboBox g2;
    private javax.swing.JComboBox g3;
    private javax.swing.JComboBox g4;
    private javax.swing.JComboBox g5;
    private javax.swing.JLabel gg;
    private javax.swing.JTextField gland;
    private javax.swing.JTextField gline1;
    private javax.swing.JTextField gline2;
    private javax.swing.JTextField gline3;
    private javax.swing.JTextField gmobile;
    private javax.swing.JTextField go;
    private javax.swing.JComboBox grelation;
    private javax.swing.JTextField guardianname;
    private javax.swing.JComboBox<String> hallactive;
    private javax.swing.JTextField hallemail;
    private javax.swing.JTextField hallflownu;
    private javax.swing.JTextField hallnumber;
    private javax.swing.JTextField hallpname;
    private com.toedter.calendar.JDateChooser hallregisterdate;
    private javax.swing.JTextField halltp;
    private javax.swing.JComboBox<String> hins;
    private javax.swing.JComboBox<String> hins1;
    private javax.swing.JTextField iemail;
    private javax.swing.JTextField iemail1;
    private javax.swing.JTextField ifax;
    private javax.swing.JTextField ifax1;
    private javax.swing.JComboBox ihallset;
    private javax.swing.JTextField ihot;
    private javax.swing.JTextField ihot1;
    private javax.swing.JTextField iinfor;
    private javax.swing.JTextField iinfor1;
    private javax.swing.JTextField iline1;
    private javax.swing.JTextField iline10;
    private javax.swing.JTextField iline11;
    private javax.swing.JTextField iline12;
    private javax.swing.JTextField iline2;
    private javax.swing.JTextField iline3;
    private javax.swing.JComboBox iline4;
    private javax.swing.JComboBox iline5;
    private javax.swing.JTextField iline6;
    private javax.swing.JComboBox iline7;
    private javax.swing.JComboBox iline8;
    private javax.swing.JTextField iline9;
    private javax.swing.JTextField im;
    private javax.swing.JTable inputm;
    private javax.swing.JTextField insmessage;
    private javax.swing.JTabbedPane institutetab;
    private javax.swing.JLabel iprofile;
    private com.toedter.calendar.JDateChooser irdate;
    private com.toedter.calendar.JDateChooser irdate1;
    private com.toedter.calendar.JDateChooser irdate2;
    private javax.swing.JComboBox<String> iset;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JButton jButton73;
    private javax.swing.JButton jButton74;
    private javax.swing.JButton jButton75;
    private javax.swing.JButton jButton76;
    private javax.swing.JButton jButton77;
    private javax.swing.JButton jButton78;
    private javax.swing.JButton jButton79;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton80;
    private javax.swing.JButton jButton81;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox13;
    private javax.swing.JComboBox<String> jComboBox14;
    private javax.swing.JComboBox<String> jComboBox15;
    private javax.swing.JComboBox<String> jComboBox16;
    private javax.swing.JComboBox<String> jComboBox17;
    private javax.swing.JComboBox<String> jComboBox18;
    private javax.swing.JComboBox<String> jComboBox19;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox20;
    private javax.swing.JComboBox<String> jComboBox21;
    private javax.swing.JComboBox<String> jComboBox22;
    private javax.swing.JComboBox<String> jComboBox23;
    private javax.swing.JComboBox<String> jComboBox24;
    private javax.swing.JComboBox<String> jComboBox25;
    private javax.swing.JComboBox<String> jComboBox26;
    private javax.swing.JComboBox<String> jComboBox27;
    private javax.swing.JComboBox<String> jComboBox28;
    private javax.swing.JComboBox<String> jComboBox29;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox30;
    private javax.swing.JComboBox<String> jComboBox31;
    private javax.swing.JComboBox jComboBox32;
    public static javax.swing.JComboBox jComboBox33;
    private javax.swing.JComboBox jComboBox34;
    private javax.swing.JComboBox jComboBox35;
    private javax.swing.JComboBox<String> jComboBox36;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    public static javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel169;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel187;
    private javax.swing.JLabel jLabel188;
    private javax.swing.JLabel jLabel189;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JLabel jLabel192;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel194;
    private javax.swing.JLabel jLabel195;
    private javax.swing.JLabel jLabel196;
    private javax.swing.JLabel jLabel197;
    private javax.swing.JLabel jLabel198;
    private javax.swing.JLabel jLabel199;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel200;
    private javax.swing.JLabel jLabel201;
    private javax.swing.JLabel jLabel202;
    private javax.swing.JLabel jLabel203;
    private javax.swing.JLabel jLabel204;
    private javax.swing.JLabel jLabel205;
    private javax.swing.JLabel jLabel206;
    private javax.swing.JLabel jLabel207;
    private javax.swing.JLabel jLabel208;
    private javax.swing.JLabel jLabel209;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel210;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel212;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JLabel jLabel214;
    private javax.swing.JLabel jLabel215;
    private javax.swing.JLabel jLabel216;
    private javax.swing.JLabel jLabel217;
    private javax.swing.JLabel jLabel218;
    private javax.swing.JLabel jLabel219;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel220;
    private javax.swing.JLabel jLabel221;
    private javax.swing.JLabel jLabel222;
    private javax.swing.JLabel jLabel223;
    private javax.swing.JLabel jLabel224;
    private javax.swing.JLabel jLabel225;
    private javax.swing.JLabel jLabel226;
    private javax.swing.JLabel jLabel227;
    private javax.swing.JLabel jLabel228;
    private javax.swing.JLabel jLabel229;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel230;
    private javax.swing.JLabel jLabel231;
    private javax.swing.JLabel jLabel232;
    private javax.swing.JLabel jLabel233;
    private javax.swing.JLabel jLabel234;
    private javax.swing.JLabel jLabel235;
    private javax.swing.JLabel jLabel236;
    private javax.swing.JLabel jLabel237;
    private javax.swing.JLabel jLabel238;
    private javax.swing.JLabel jLabel239;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel240;
    private javax.swing.JLabel jLabel241;
    private javax.swing.JLabel jLabel242;
    private javax.swing.JLabel jLabel243;
    private javax.swing.JLabel jLabel244;
    private javax.swing.JLabel jLabel245;
    private javax.swing.JLabel jLabel246;
    private javax.swing.JLabel jLabel247;
    private javax.swing.JLabel jLabel248;
    private javax.swing.JLabel jLabel249;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel250;
    private javax.swing.JLabel jLabel251;
    private javax.swing.JLabel jLabel252;
    private javax.swing.JLabel jLabel253;
    private javax.swing.JLabel jLabel254;
    private javax.swing.JLabel jLabel255;
    private javax.swing.JLabel jLabel256;
    private javax.swing.JLabel jLabel257;
    private javax.swing.JLabel jLabel258;
    private javax.swing.JLabel jLabel259;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel260;
    private javax.swing.JLabel jLabel261;
    private javax.swing.JLabel jLabel262;
    private javax.swing.JLabel jLabel263;
    private javax.swing.JLabel jLabel264;
    private javax.swing.JLabel jLabel265;
    private javax.swing.JLabel jLabel266;
    private javax.swing.JLabel jLabel267;
    private javax.swing.JLabel jLabel268;
    private javax.swing.JLabel jLabel269;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel270;
    private javax.swing.JLabel jLabel271;
    private javax.swing.JLabel jLabel272;
    private javax.swing.JLabel jLabel273;
    private javax.swing.JLabel jLabel274;
    private javax.swing.JLabel jLabel275;
    private javax.swing.JLabel jLabel276;
    private javax.swing.JLabel jLabel277;
    private javax.swing.JLabel jLabel278;
    private javax.swing.JLabel jLabel279;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel280;
    private javax.swing.JLabel jLabel281;
    private javax.swing.JLabel jLabel282;
    private javax.swing.JLabel jLabel283;
    private javax.swing.JLabel jLabel284;
    private javax.swing.JLabel jLabel285;
    private javax.swing.JLabel jLabel286;
    private javax.swing.JLabel jLabel287;
    private javax.swing.JLabel jLabel288;
    private javax.swing.JLabel jLabel289;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel290;
    private javax.swing.JLabel jLabel291;
    private javax.swing.JLabel jLabel292;
    private javax.swing.JLabel jLabel293;
    private javax.swing.JLabel jLabel294;
    private javax.swing.JLabel jLabel295;
    private javax.swing.JLabel jLabel296;
    private javax.swing.JLabel jLabel297;
    private javax.swing.JLabel jLabel298;
    private javax.swing.JLabel jLabel299;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel300;
    private javax.swing.JLabel jLabel301;
    private javax.swing.JLabel jLabel302;
    private javax.swing.JLabel jLabel303;
    private javax.swing.JLabel jLabel304;
    private javax.swing.JLabel jLabel305;
    private javax.swing.JLabel jLabel306;
    private javax.swing.JLabel jLabel307;
    private javax.swing.JLabel jLabel308;
    private javax.swing.JLabel jLabel309;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel310;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel312;
    private javax.swing.JLabel jLabel313;
    private javax.swing.JLabel jLabel314;
    private javax.swing.JLabel jLabel315;
    private javax.swing.JLabel jLabel316;
    private javax.swing.JLabel jLabel317;
    private javax.swing.JLabel jLabel318;
    private javax.swing.JLabel jLabel319;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel320;
    private javax.swing.JLabel jLabel321;
    private javax.swing.JLabel jLabel322;
    private javax.swing.JLabel jLabel323;
    private javax.swing.JLabel jLabel324;
    private javax.swing.JLabel jLabel325;
    private javax.swing.JLabel jLabel326;
    private javax.swing.JLabel jLabel327;
    private javax.swing.JLabel jLabel328;
    private javax.swing.JLabel jLabel329;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel330;
    private javax.swing.JLabel jLabel331;
    private javax.swing.JLabel jLabel332;
    private javax.swing.JLabel jLabel333;
    private javax.swing.JLabel jLabel334;
    private javax.swing.JLabel jLabel335;
    private javax.swing.JLabel jLabel336;
    private javax.swing.JLabel jLabel337;
    private javax.swing.JLabel jLabel338;
    private javax.swing.JLabel jLabel339;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel340;
    private javax.swing.JLabel jLabel341;
    private javax.swing.JLabel jLabel342;
    private javax.swing.JLabel jLabel343;
    private javax.swing.JLabel jLabel344;
    private javax.swing.JLabel jLabel345;
    private javax.swing.JLabel jLabel346;
    private javax.swing.JLabel jLabel347;
    private javax.swing.JLabel jLabel348;
    private javax.swing.JLabel jLabel349;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel350;
    private javax.swing.JLabel jLabel351;
    private javax.swing.JLabel jLabel352;
    private javax.swing.JLabel jLabel353;
    private javax.swing.JLabel jLabel354;
    private javax.swing.JLabel jLabel355;
    private javax.swing.JLabel jLabel356;
    private javax.swing.JLabel jLabel357;
    private javax.swing.JLabel jLabel358;
    private javax.swing.JLabel jLabel359;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel360;
    private javax.swing.JLabel jLabel361;
    private javax.swing.JLabel jLabel362;
    private javax.swing.JLabel jLabel363;
    private javax.swing.JLabel jLabel364;
    private javax.swing.JLabel jLabel365;
    private javax.swing.JLabel jLabel366;
    private javax.swing.JLabel jLabel367;
    private javax.swing.JLabel jLabel368;
    private javax.swing.JLabel jLabel369;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel370;
    private javax.swing.JLabel jLabel371;
    private javax.swing.JLabel jLabel372;
    private javax.swing.JLabel jLabel373;
    private javax.swing.JLabel jLabel374;
    private javax.swing.JLabel jLabel375;
    private javax.swing.JLabel jLabel376;
    private javax.swing.JLabel jLabel377;
    private javax.swing.JLabel jLabel378;
    private javax.swing.JLabel jLabel379;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel380;
    private javax.swing.JLabel jLabel381;
    private javax.swing.JLabel jLabel382;
    private javax.swing.JLabel jLabel383;
    private javax.swing.JLabel jLabel384;
    private javax.swing.JLabel jLabel385;
    private javax.swing.JLabel jLabel386;
    private javax.swing.JLabel jLabel387;
    private javax.swing.JLabel jLabel388;
    private javax.swing.JLabel jLabel389;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel390;
    private javax.swing.JLabel jLabel391;
    private javax.swing.JLabel jLabel392;
    private javax.swing.JLabel jLabel393;
    private javax.swing.JLabel jLabel394;
    private javax.swing.JLabel jLabel395;
    private javax.swing.JLabel jLabel396;
    private javax.swing.JLabel jLabel397;
    private javax.swing.JLabel jLabel398;
    private javax.swing.JLabel jLabel399;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel400;
    private javax.swing.JLabel jLabel401;
    private javax.swing.JLabel jLabel402;
    private javax.swing.JLabel jLabel403;
    private javax.swing.JLabel jLabel404;
    private javax.swing.JLabel jLabel405;
    private javax.swing.JLabel jLabel406;
    private javax.swing.JLabel jLabel407;
    private javax.swing.JLabel jLabel408;
    private javax.swing.JLabel jLabel409;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel410;
    private javax.swing.JLabel jLabel411;
    private javax.swing.JLabel jLabel412;
    private javax.swing.JLabel jLabel413;
    private javax.swing.JLabel jLabel414;
    private javax.swing.JLabel jLabel415;
    private javax.swing.JLabel jLabel416;
    private javax.swing.JLabel jLabel417;
    private javax.swing.JLabel jLabel418;
    private javax.swing.JLabel jLabel419;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel420;
    private javax.swing.JLabel jLabel421;
    private javax.swing.JLabel jLabel422;
    private javax.swing.JLabel jLabel423;
    private javax.swing.JLabel jLabel424;
    private javax.swing.JLabel jLabel425;
    private javax.swing.JLabel jLabel426;
    private javax.swing.JLabel jLabel427;
    private javax.swing.JLabel jLabel428;
    private javax.swing.JLabel jLabel429;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel430;
    private javax.swing.JLabel jLabel431;
    private javax.swing.JLabel jLabel432;
    private javax.swing.JLabel jLabel433;
    private javax.swing.JLabel jLabel434;
    private javax.swing.JLabel jLabel435;
    private javax.swing.JLabel jLabel436;
    private javax.swing.JLabel jLabel437;
    private javax.swing.JLabel jLabel438;
    private javax.swing.JLabel jLabel439;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel440;
    private javax.swing.JLabel jLabel441;
    private javax.swing.JLabel jLabel442;
    private javax.swing.JLabel jLabel443;
    private javax.swing.JLabel jLabel444;
    private javax.swing.JLabel jLabel445;
    private javax.swing.JLabel jLabel446;
    private javax.swing.JLabel jLabel447;
    private javax.swing.JLabel jLabel448;
    private javax.swing.JLabel jLabel449;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel450;
    private javax.swing.JLabel jLabel451;
    private javax.swing.JLabel jLabel452;
    private javax.swing.JLabel jLabel453;
    private javax.swing.JLabel jLabel454;
    private javax.swing.JLabel jLabel455;
    private javax.swing.JLabel jLabel456;
    private javax.swing.JLabel jLabel457;
    private javax.swing.JLabel jLabel458;
    private javax.swing.JLabel jLabel459;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel460;
    private javax.swing.JLabel jLabel461;
    private javax.swing.JLabel jLabel462;
    private javax.swing.JLabel jLabel463;
    private javax.swing.JLabel jLabel464;
    private javax.swing.JLabel jLabel465;
    private javax.swing.JLabel jLabel466;
    private javax.swing.JLabel jLabel467;
    private javax.swing.JLabel jLabel468;
    private javax.swing.JLabel jLabel469;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel470;
    private javax.swing.JLabel jLabel471;
    private javax.swing.JLabel jLabel472;
    private javax.swing.JLabel jLabel473;
    private javax.swing.JLabel jLabel474;
    private javax.swing.JLabel jLabel475;
    private javax.swing.JLabel jLabel476;
    private javax.swing.JLabel jLabel477;
    private javax.swing.JLabel jLabel478;
    private javax.swing.JLabel jLabel479;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel480;
    private javax.swing.JLabel jLabel481;
    private javax.swing.JLabel jLabel482;
    private javax.swing.JLabel jLabel483;
    private javax.swing.JLabel jLabel484;
    private javax.swing.JLabel jLabel485;
    private javax.swing.JLabel jLabel486;
    private javax.swing.JLabel jLabel487;
    private javax.swing.JLabel jLabel488;
    private javax.swing.JLabel jLabel489;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel490;
    private javax.swing.JLabel jLabel491;
    private javax.swing.JLabel jLabel492;
    private javax.swing.JLabel jLabel493;
    private javax.swing.JLabel jLabel494;
    private javax.swing.JLabel jLabel495;
    private javax.swing.JLabel jLabel496;
    private javax.swing.JLabel jLabel497;
    private javax.swing.JLabel jLabel498;
    private javax.swing.JLabel jLabel499;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel500;
    private javax.swing.JLabel jLabel501;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel553;
    private javax.swing.JLabel jLabel554;
    private javax.swing.JLabel jLabel555;
    private javax.swing.JLabel jLabel556;
    private javax.swing.JLabel jLabel557;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel100;
    private javax.swing.JPanel jPanel101;
    private javax.swing.JPanel jPanel102;
    private javax.swing.JPanel jPanel103;
    private javax.swing.JPanel jPanel104;
    private javax.swing.JPanel jPanel105;
    private javax.swing.JPanel jPanel106;
    private javax.swing.JPanel jPanel107;
    private javax.swing.JPanel jPanel108;
    private javax.swing.JPanel jPanel109;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel110;
    private javax.swing.JPanel jPanel111;
    private javax.swing.JPanel jPanel112;
    private javax.swing.JPanel jPanel113;
    private javax.swing.JPanel jPanel114;
    private javax.swing.JPanel jPanel115;
    private javax.swing.JPanel jPanel116;
    private javax.swing.JPanel jPanel117;
    private javax.swing.JPanel jPanel118;
    private javax.swing.JPanel jPanel119;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel120;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JPanel jPanel122;
    private javax.swing.JPanel jPanel123;
    private javax.swing.JPanel jPanel124;
    private javax.swing.JPanel jPanel125;
    private javax.swing.JPanel jPanel126;
    private javax.swing.JPanel jPanel127;
    private javax.swing.JPanel jPanel128;
    private javax.swing.JPanel jPanel129;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel130;
    private javax.swing.JPanel jPanel131;
    private javax.swing.JPanel jPanel132;
    private javax.swing.JPanel jPanel133;
    private javax.swing.JPanel jPanel134;
    private javax.swing.JPanel jPanel135;
    private javax.swing.JPanel jPanel136;
    private javax.swing.JPanel jPanel137;
    private javax.swing.JPanel jPanel138;
    private javax.swing.JPanel jPanel139;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel147;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel68;
    private javax.swing.JPanel jPanel69;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel72;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel74;
    private javax.swing.JPanel jPanel75;
    private javax.swing.JPanel jPanel76;
    private javax.swing.JPanel jPanel77;
    private javax.swing.JPanel jPanel78;
    private javax.swing.JPanel jPanel79;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel80;
    private javax.swing.JPanel jPanel81;
    private javax.swing.JPanel jPanel82;
    private javax.swing.JPanel jPanel83;
    private javax.swing.JPanel jPanel84;
    private javax.swing.JPanel jPanel85;
    private javax.swing.JPanel jPanel86;
    private javax.swing.JPanel jPanel87;
    private javax.swing.JPanel jPanel88;
    private javax.swing.JPanel jPanel89;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel90;
    private javax.swing.JPanel jPanel91;
    private javax.swing.JPanel jPanel92;
    private javax.swing.JPanel jPanel93;
    private javax.swing.JPanel jPanel94;
    private javax.swing.JPanel jPanel95;
    private javax.swing.JPanel jPanel96;
    private javax.swing.JPanel jPanel97;
    private javax.swing.JPanel jPanel98;
    private javax.swing.JPanel jPanel99;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane10;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jTextField3;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel lastlogin;
    private javax.swing.JComboBox level;
    private javax.swing.JTextField line1;
    private javax.swing.JTextField line2;
    private javax.swing.JTextField line3;
    private javax.swing.JTextField line4;
    private javax.swing.JTextField line5;
    private javax.swing.JTextField line6;
    private javax.swing.JLabel loguserName;
    private javax.swing.JTextField m1;
    private com.toedter.calendar.JDateChooser m2;
    private javax.swing.JLabel mainicon;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton male1;
    private javax.swing.JTabbedPane manins;
    private javax.swing.JComboBox mass;
    private javax.swing.JTextField mh;
    private javax.swing.JComboBox<String> mins;
    private javax.swing.JTextField mtp;
    private javax.swing.JTextField nat;
    private javax.swing.JTextField nationality;
    private javax.swing.JTable newsubject;
    private javax.swing.JTextField nic;
    private javax.swing.JTextField nic1;
    private javax.swing.JTextField other;
    private javax.swing.JTextField p1;
    private javax.swing.JTextField p2;
    private javax.swing.JTextField p3;
    private javax.swing.JTextField p4;
    private javax.swing.JTextField p5;
    private javax.swing.JTextField p6;
    private javax.swing.JTextField p7;
    private javax.swing.JTextField paidamount;
    private javax.swing.JComboBox<String> passedlevel;
    private javax.swing.JComboBox<String> passedlevel1;
    private javax.swing.JTabbedPane paymenttab;
    private javax.swing.JTextField pcontact;
    private javax.swing.JTextField pemail;
    private javax.swing.JComboBox position;
    private javax.swing.JTable precord;
    private javax.swing.JTextField principale;
    private javax.swing.JLabel profile;
    private javax.swing.JLabel profile1;
    private javax.swing.JComboBox publishfor;
    private javax.swing.JLabel q1;
    private javax.swing.JComboBox<String> question1;
    private javax.swing.JComboBox<String> question2;
    private javax.swing.JTable questiontable;
    private javax.swing.JLabel ra1;
    private javax.swing.JLabel ra2;
    private javax.swing.JLabel ra3;
    private javax.swing.JLabel rb1;
    private javax.swing.JLabel rb2;
    private javax.swing.JLabel rb3;
    private javax.swing.JTextField rc1;
    private javax.swing.JTextField rc2;
    private javax.swing.JTextField rc3;
    private javax.swing.JTextField record;
    private javax.swing.JTextField region;
    private javax.swing.JTextField region1;
    public static javax.swing.JTextField rstreamid;
    private javax.swing.JComboBox<String> rstreamlevel;
    public static javax.swing.JTextField rstreamname;
    private javax.swing.JComboBox<String> s1;
    private javax.swing.JComboBox<String> s2;
    private javax.swing.JComboBox<String> s3;
    private javax.swing.JComboBox<String> s4;
    private javax.swing.JComboBox<String> s5;
    private javax.swing.JLabel sa1;
    private javax.swing.JLabel sa11;
    private javax.swing.JLabel sa12;
    private javax.swing.JLabel sa2;
    private javax.swing.JLabel sa3;
    private javax.swing.JLabel sa4;
    private javax.swing.JLabel sa5;
    private javax.swing.JLabel sa6;
    private javax.swing.JLabel sa7;
    private javax.swing.JLabel saffimage;
    private javax.swing.JLabel sb1;
    private javax.swing.JLabel sb2;
    private javax.swing.JLabel sb3;
    private javax.swing.JLabel sb4;
    private javax.swing.JLabel sb5;
    private javax.swing.JTextField sc11;
    private javax.swing.JTextField sc12;
    private javax.swing.JTextField sc13;
    private javax.swing.JTextField sc2;
    private javax.swing.JLabel sc3;
    private com.toedter.calendar.JDateChooser sc4;
    private javax.swing.JRadioButton sc51;
    private javax.swing.JRadioButton sc52;
    private javax.swing.JComboBox<String> schallday;
    private javax.swing.JComboBox schalltime;
    private javax.swing.JTextField school;
    private javax.swing.JTextField schoolname;
    private javax.swing.JTable sctable;
    public static javax.swing.JTextField search;
    public static javax.swing.JTextField search1;
    private javax.swing.JComboBox<String> searchclass;
    private javax.swing.JTextField searchcompanyid;
    public static com.toedter.calendar.JDateChooser searchdate;
    private javax.swing.JTextField searchsid;
    private javax.swing.JTextField searchsname;
    private javax.swing.JLabel searchstaffimg;
    private javax.swing.JButton secdelete;
    private javax.swing.JButton secupdate;
    public static javax.swing.JTextField serchsid;
    public static javax.swing.JTable setaction;
    private javax.swing.JLabel sete;
    private javax.swing.JTextField setid;
    private javax.swing.JTextField setname;
    private javax.swing.JTable setposition;
    private javax.swing.JComboBox<String> setstatus;
    private javax.swing.JLabel setstaus;
    private javax.swing.JTable setting;
    private javax.swing.JComboBox<String> setusertype;
    private javax.swing.JTextField sf;
    private javax.swing.JTextField sfather;
    private javax.swing.JTextField sfathero;
    private javax.swing.JTextField sfatherphone;
    private javax.swing.JRadioButton sfemale;
    private javax.swing.JTextField sfirst;
    private javax.swing.JTextField sl;
    private javax.swing.JTextField slast;
    private javax.swing.JTextField sm;
    private javax.swing.JRadioButton smale;
    private javax.swing.JTextField smiddle;
    private javax.swing.JTextField smother;
    private javax.swing.JTextField smothero;
    private javax.swing.JTextField smotherphone;
    private javax.swing.JTextField sna;
    private javax.swing.JTextField snic;
    private javax.swing.JTextField spayment;
    private javax.swing.JTextField sre;
    private javax.swing.JRadioButton ss1;
    private javax.swing.JRadioButton ss2;
    private javax.swing.JComboBox<String> ssactive;
    private javax.swing.JComboBox<String> ssrn1;
    private javax.swing.JTextField ssrn2;
    private javax.swing.JTextField ssrn3;
    private javax.swing.JTextField ssrn4;
    private javax.swing.JComboBox<String> ssrn5;
    private javax.swing.JLabel sssetid;
    private javax.swing.JLabel sssetname;
    private com.toedter.calendar.JDateChooser staffbirth;
    private javax.swing.JPasswordField staffcuserpw;
    private javax.swing.JComboBox<String> staffstatus;
    private javax.swing.JTextField staffuser;
    private javax.swing.JPasswordField staffuserpw;
    private javax.swing.JComboBox steachername;
    public static javax.swing.JTable streamsubject;
    private javax.swing.JLabel stu;
    private javax.swing.JLabel studentid;
    private javax.swing.JTable studentsub;
    private javax.swing.JButton submit;
    private javax.swing.JLabel subpaymentset;
    private javax.swing.JComboBox<String> t1;
    private javax.swing.JComboBox<String> t2;
    private javax.swing.JComboBox<String> t3;
    private javax.swing.JComboBox<String> t4;
    private javax.swing.JComboBox<String> t5;
    public static javax.swing.JTable table1;
    public static javax.swing.JTable table2;
    public static javax.swing.JTable table3;
    public static javax.swing.JTable tb;
    private javax.swing.JTextField temail;
    private javax.swing.JTable tfriday;
    private javax.swing.JTextField tid;
    private javax.swing.JComboBox titleactive;
    private javax.swing.JTextField tl;
    private javax.swing.JTextField tm;
    private javax.swing.JLabel todate;
    private javax.swing.JLabel todate1;
    private javax.swing.JTable tsaturday;
    private javax.swing.JComboBox tsub1;
    private javax.swing.JComboBox tsub2;
    private javax.swing.JComboBox tsub3;
    private javax.swing.JComboBox tsub4;
    private javax.swing.JTable tsunday;
    private javax.swing.JTable tthuesday;
    private javax.swing.JTable tthursady;
    private javax.swing.JTable twendsday;
    private javax.swing.JTextField uline1;
    private javax.swing.JTextField uline2;
    private javax.swing.JTextField uline3;
    private javax.swing.JComboBox<String> uline4;
    private javax.swing.JComboBox<String> uline5;
    private javax.swing.JTextField useremail;
    private javax.swing.JTextField userland;
    private javax.swing.JTextField usermobile;
    private javax.swing.JTextField userother;
    private javax.swing.JTabbedPane userstab;
    private javax.swing.JLabel v1;
    private javax.swing.JLabel v10;
    private javax.swing.JLabel v11;
    private javax.swing.JLabel v12;
    private javax.swing.JLabel v15;
    private javax.swing.JLabel v16;
    private javax.swing.JLabel v17;
    private javax.swing.JLabel v18;
    private javax.swing.JLabel v2;
    private javax.swing.JLabel v3;
    private javax.swing.JLabel v4;
    private javax.swing.JLabel v5;
    private javax.swing.JLabel v6;
    private javax.swing.JLabel v7;
    private javax.swing.JLabel v8;
    private javax.swing.JLabel v9;
    public static javax.swing.JTable viewallex;
    private javax.swing.JTable viewmessages;
    private javax.swing.JLabel w3;
    private javax.swing.JLabel wrw;
    private javax.swing.JTextField xx2;
    private com.toedter.calendar.JDateChooser z2;
    private javax.swing.JLabel z3;
    private javax.swing.JLabel z4;
    private javax.swing.JComboBox<String> zone;
    private javax.swing.JComboBox<String> zone1;
    private javax.swing.JTextField zz1;
    private javax.swing.JTextField zz2;
    private javax.swing.JTextField zz3;
    private javax.swing.JTextField zz4;
    private javax.swing.JTextField zz5;
    private javax.swing.JTextField zz6;
    // End of variables declaration//GEN-END:variables

    private void savedata2() {
        try {
            String companyid = comid.getText();
            String companyname = comname.getText();
            String branchid = bid.getText();
            String fd = (String) ssrn5.getSelectedItem();
            String go = principale.getText();
            String pname = fd + "" + go;
            String principlecontact = pcontact.getText();
            String principleemail = pemail.getText();

            String ic1 = ihot.getText();
            String ic2 = iemail.getText();
            String ic3 = iinfor.getText();
            String ic4 = ifax.getText();

            String a1 = iline1.getText();
            String a2 = iline2.getText();
            String a3 = iline3.getText();
            String a4 = (String) iline4.getSelectedItem();
            String a5 = (String) iline5.getSelectedItem();
            String a6 = iline6.getText();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = sdf.format(irdate2.getDate());

            ResultSet e = DB.search("select * from institute where status='Default'");
            while (e.next()) {
                String xx = e.getString("idcompany");
                DB.iud("update institute set status='Disconnect' where idcompany='" + xx + "'");
            }
            ResultSet rs = DB.search("select count(idcompany) as x from institute ");
            if (rs.next()) {
                String idcompanyx = rs.getString("x");
                int r = Integer.parseInt(idcompanyx);
                int rr = r++;
                DB.iud("insert into institute value('" + r + "','" + companyid + "','" + companyname + "','" + branchid + "','" + sdate + "','" + logpath + "','Default')");

                ResultSet q = DB.search("select count(principleid) as x from principle ");
                if (q.next()) {
                    String ppx = q.getString("x");
                    int r1 = Integer.parseInt(ppx);
                    int rr1 = r1++;
                    DB.iud("insert into principle value('" + rr1 + "','" + pname + "','" + principlecontact + "','" + principleemail + "','" + r + "')");

                    ResultSet t = DB.search("select count(contactid) as x from inscontact ");
                    if (t.next()) {
                        String ppx1 = t.getString("x");
                        int r11 = Integer.parseInt(ppx1);
                        int rr11 = r11++;
                        DB.iud("insert into inscontact value('" + rr11 + "','" + ic1 + "','" + ic2 + "','" + ic3 + "','" + ic4 + "','" + r + "')");

                        ResultSet u = DB.search("select count(iaddressid) as x from iaddress");
                        if (u.next()) {
                            String ppx11 = t.getString("x");
                            int r111 = Integer.parseInt(ppx11);
                            int rr111 = r111++;
                            DB.iud("insert into iaddress value('" + rr111 + "','" + a1 + "','" + a2 + "','" + a3 + "','" + a4 + "','" + a5 + "','" + a6 + "','" + r + "')");

                        }
                    }

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid data");
        }
    }

    private void setinforcombo() {
        try {
            hins.removeAll();
            ResultSet rs = DB.search("select * from institute");
            while (rs.next()) {
                String k = rs.getString("companyname");
                hins.addItem(k);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void signOut() {
        try {
            System.out.println("ok1");
            ResultSet rs = DB.search("select * from staff where nic ='" + email.getText() + "'");
            if (rs.first()) {

                String idc = rs.getString("staffid");
                System.out.println(idc);
                MyDB.iud("update user set logstate='Signed_out' where staff_staffid='" + idc + "'");
                // DB.iud("update user set  comment='"+4545+"' where staff_staffid='" + idc+ "'");
                login i = new login();
                i.setVisible(true);
                this.dispose();
            } else {
                System.out.println("notok");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void clearfield() {

        jTextField38.setText(null);
        jLabel179.setIcon(null);
        jLabel178.setText(null);
        jLabel175.setText(null);
        jComboBox32.setSelectedIndex(0);
        jComboBox36.setSelectedIndex(0);
        jTextField36.setText(null);
        jTextField37.setText(null);
        jTextField10.setText(null);
        jTextField9.setText(null);
        jLabel173.setText(null);
        DefaultTableModel fuscz = (DefaultTableModel) jTable7.getModel();
        fuscz.setRowCount(0);

        bb.setText(null);
        DefaultTableModel fus = (DefaultTableModel) jTable6.getModel();
        fus.setRowCount(0);

        DefaultTableModel fusc = (DefaultTableModel) precord.getModel();
        fusc.setRowCount(0);
        jTextField2.setText(null);
        searchsid.setEditable(true);
        paidamount.setText(null);
        eee1.setText(null);
        paidamount.setText(null);
        searchsid.setText(null);
        searchsname.setText(null);
        steachername.removeAllItems();
        searchclass.removeAllItems();

        ad.setVisible(true);
        jRadioButton2.setVisible(true);
        //    steachername.removeAllItems();steachername.removeAllItems();

        DefaultTableModel fu = (DefaultTableModel) studentsub.getModel();
        DefaultTableModel fu1 = (DefaultTableModel) jTable3.getModel();
        DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();
        fu.setRowCount(0);
        fu1.setRowCount(0);
        fu2.setRowCount(0);
        serchsid.setText(null);
        jComboBox32.setSelectedIndex(0);
        jComboBox7.setSelectedIndex(0);
        c14.setSelectedIndex(0);
        c15.setSelectedIndex(0);
        c13.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);

        rc1.setText(null);
        rc2.setText(null);
        rc3.setText(null);
        c12.setText(null);
        c10.setText(null);
        c11.setText(null);
        sc51.setSelected(true);
        sc2.setText(null);
        sc4.setDate(null);
        sc12.setText(null);
        sc11.setText(null);
        sc13.setText(null);
        sc3.setIcon(null);
        sb3.setIcon(null);
        sb1.setText(null);
        sb4.setText(null);
        sb2.setText(null);
        sb5.setText(null);
        b10.setText(null);
        b11.setText(null);
        b12.setText(null);
        b13.setText(null);
        b14.setText(null);
        rb1.setText(null);
        rb2.setText(null);
        rb3.setText(null);
        jLabel209.setText(null);
        studentupdate = null;
        staffpath = null;
        newpath = null;
        logpath = null;
        staffnewpath = null;
        newpath1 = null;
        hins1.setSelectedIndex(0);
        m2.setDate(null);
        m1.setText(null);
        tid.setText(null);
        q1.setIcon(null);
        zz1.setText(null);
        zz2.setText(null);
        zz3.setText(null);
        zz4.setText(null);
        zz5.setText(null);
        zz6.setText(null);
        dob1.setDate(null);
        nic1.setText(null);
        comid.setText(null);
        ssrn5.setSelectedIndex(0);
        comname.setText(null);
        bid.setText(null);
        irdate2.setDate(null);
        iprofile.setIcon(null);
        profile1.setIcon(null);
        principale.setText(null);
        pcontact.setText(null);
        pemail.setText(null);
        dob.setDate(null);
        male.setSelected(true);
        sf.setText(null);
        sm.setText(null);
        sl.setText(null);
        male.setSelected(true);
        sfirst.setText(null);
        smiddle.setText(null);
        slast.setText(null);
        nic.setText(null);
        line1.setText(null);
        nat.setText(null);
        region.setText(null);
        line2.setText(null);
        line3.setText(null);
        passedlevel.setSelectedIndex(0);
        ezone.setSelectedIndex(0);
        schoolname.setText(null);
        comments.setText(null);
        sssetname.setText(null);
        jLabel49.setText(null);
        usermobile.setText(null);
        userland.setText(null);
        useremail.setText(null);
        userother.setText(null);
        wrw.setText(null);
        stu.setText(null);
        setstaus.setText(null);
        aclevel.setText(null);
        zone.setSelectedIndex(0);
        eyear.setSelectedIndex(0);
        country.setSelectedIndex(0);
        smother.setText(null);
        smothero.setText(null);
        smotherphone.setText(null);
        sfather.setText(null);
        sfathero.setText(null);
        sfatherphone.setText(null);
        guardianname.setText(null);
        gline1.setText(null);
        gline2.setText(null);
        gline3.setText(null);
        grelation.setSelectedIndex(0);
        go.setText(null);
        gmobile.setText(null);
        gland.setText(null);
        mtp.setText(null);
        mh.setText(null);
        email1.setText(null);
        //  email.setText(null);
        other.setText(null);
        mins.setSelectedIndex(0);
        s1.removeAllItems();
        s2.removeAllItems();
        s3.removeAllItems();
        s4.removeAllItems();
        s5.removeAllItems();
        profile.setText(null);
        dob.setDate(null);
        profile.setIcon(null);
        nic.setText(null);
        line1.setText(null);
        line2.setText(null);
        line3.setText(null);

        zone.setSelectedIndex(0);
        country.setSelectedIndex(0);

        nationality.setText(null);
        tm.setText(null);
        tl.setText(null);
        temail.setText(null);
        region1.setText(null);
        passedlevel.setSelectedIndex(0);
        edzone.setSelectedIndex(0);
        school.setText(null);
        comment.setText(null);
        record.setText(null);
        profile.setText(null);
        profile.setIcon(null);
        //tsub1.setSelectedIndex(0);
        //  tsub2.setSelectedIndex(0);
        //  tsub3.setSelectedIndex(0);
        //tsub4.setSelectedIndex(0);
        ihot.setText(null);
        iemail.setText(null);
        iinfor.setText(null);
        ifax.setText(null);

        iline1.setText(null);
        iline2.setText(null);
        iline3.setText(null);
        iline4.setSelectedIndex(0);
        iline5.setSelectedIndex(0);
        iline6.setText(null);
        comid.grabFocus();

        hallpname.setText(null);
        halltp.setText(null);
        hallemail.setText(null);
        //  hins.setSelectedIndex(0);
        hallnumber.setText(null);
        hallflownu.setText(null);
        hallactive.setSelectedIndex(0);
        irdate.setDate(null);
        hallregisterdate.setDate(null);

        iprofile.setIcon(null);
        ssrn1.setSelectedIndex(0);
        ssrn2.setText(null);
        ssrn3.setText(null);
        ssrn4.setText(null);

        staffbirth.setDate(null);
        sna.setText(null);
        sre.setText(null);
        snic.setText(null);

        uline1.setText(null);

        uline2.setText(null);
        uline3.setText(null);
        uline4.setSelectedIndex(0);
        // uline5.setSelectedIndex(0);

        setusertype.setSelectedIndex(0);

        usermobile.getText();
        userland.getText();
        useremail.getText();
        userother.getText();
        staffuser.getText();
        staffuserpw.setText(null);
        staffcuserpw.setText(null);

        staffstatus.setSelectedIndex(0);
//        question1.setSelectedIndex(0);
        //    question2.setSelectedIndex(0);
        answer1.setText(null);
        answer2.setText(null);
        saffimage.setIcon(null);

        smale.setSelected(true);
        sssetid.setText(null);
        saffimage.setIcon(null);
        staffbirth.setDate(null);
        setmainiconmessage();
        sa1.setText(null);
        sa3.setIcon(null);
        sa2.setText(null);
        sa11.setText(null);
        sa4.setText(null);
        sa6.setText(null);
        sa12.setText(null);
        sa5.setText(null);
        sa7.setText(null);
        a11.setText(null);
        a12.setText(null);
        a13.setText(null);
        a14.setText(null);
        a15.setText(null);
        dsd.setText(null);
        ra1.setText(null);
        ra2.setText(null);
        ra3.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) studentsub.getModel();
        dtm.setRowCount(0);
        sa3.setIcon(null);
        sa3.setText(null);
        staffuser.setText(null);
        answer1.setText(null);
        answer2.setText(null);
        v4.setText(null);
        v12.setText(null);
        v11.setText(null);
        xx2.setText(null);
        jLabel404.setText(null);
        jLabel403.setText(null);
        jLabel406.setText(null);
        v15.setText(null);
        v16.setText(null);
        jLabel400.setText(null);
        v17.setText(null);
        c1.setText(null);
        c2.setText(null);
        c3.setText(null);
        line4.setText(null);
        line5.setText(null);
        line6.setText(null);
        searchstaffimg.setIcon(null);
        searchcompanyid.setText(null);
        ihot1.setText(null);
        iemail1.setText(null);
        iinfor1.setText(null);
        ifax1.setText(null);
        iline10.setText(null);
        iline11.setText(null);
        iline12.setText(null);
        iline9.setText(null);
        irdate1.setDate(null);
        iline7.setSelectedIndex(0);
        iline8.setSelectedIndex(0);
        jLabel108.setText("INDEX ID COMES HERE");
        //    jComboBox5.setSelectedIndex(0);
        //  jComboBox15.setSelectedIndex(0);
        //jComboBox6.setSelectedIndex(0);
        //jComboBox31.setSelectedIndex(0);
        jButton77.setEnabled(false);
    }

    private void setmainiconmessage() {
        try {
            String j = acType.getText();
            mainicon.setText(null);
            ResultSet e = DB.search("select * from institute where status='Default'");
            if (e.next()) {
                String path = e.getString("logo");

                File f = new File(path);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(mainicon.getWidth(), mainicon.getHeight(), Image.SCALE_SMOOTH);
                mainicon.setIcon(new ImageIcon(img));
            }
            try {

                ResultSet q = DB.search("select * from message where action='Active' and publishoption='" + j + "'");
                DefaultTableModel dtmc = (DefaultTableModel) viewmessages.getModel();
                dtmc.setRowCount(0);
                while (q.next()) {
                    DefaultTableModel dtm = (DefaultTableModel) viewmessages.getModel();
                    System.out.println("kkk");
                    Vector v = new Vector();
                    v.add(q.getString("title"));
                    v.add(q.getString("message"));
                    v.add(q.getString("level"));
                    v.add(q.getString("publishoption"));
                    dtm.addRow(v);

                }
            } catch (Exception s) {
                s.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addzonedis() {
        iline4.addItem("Ampara");
        iline4.addItem("Anuradhapura");
        iline4.addItem("Badulla");
        iline4.addItem("Batticaloa");
        iline4.addItem("Colombo");
        iline4.addItem("Galle");
        iline4.addItem("Gampaha");
        iline4.addItem("Hambanthota");
        iline4.addItem("Jaffna");
        iline4.addItem("Kaluthara");
        iline4.addItem("Kandy");
        iline4.addItem("Kegalle");
        iline4.addItem("Kilinochchi");
        iline4.addItem("Kurunegala");
        iline4.addItem("Mannar");
        iline4.addItem("Matale");
        iline4.addItem("Matara");
        iline4.addItem("Monaragala");
        iline4.addItem("Mulativu");
        iline4.addItem("Nuwara Eliya");
        iline4.addItem("Polonnaruwa");
        iline4.addItem("Puttalam");
        iline4.addItem("Rathnapura");
        iline4.addItem("Trincomalee");
        iline4.addItem("Vavuniya");
        iline5.addItem("Central");
        iline5.addItem("Eastern");
        iline5.addItem("North Central");
        iline5.addItem("Northern");
        iline5.addItem("North Western");
        iline5.addItem("Sabaragamuwa");
        iline5.addItem("Southern");
        iline5.addItem("Uva");
        iline5.addItem("Western");
        iline7.addItem("Ampara");
        iline7.addItem("Anuradhapura");
        iline7.addItem("Badulla");
        iline7.addItem("Batticaloa");
        iline7.addItem("Colombo");
        iline7.addItem("Galle");
        iline7.addItem("Gampaha");
        iline7.addItem("Hambanthota");
        iline7.addItem("Jaffna");
        iline7.addItem("Kaluthara");
        iline7.addItem("Kandy");
        iline7.addItem("Kegalle");
        iline7.addItem("Kilinochchi");
        iline7.addItem("Kurunegala");
        iline7.addItem("Mannar");
        iline7.addItem("Matale");
        iline7.addItem("Matara");
        iline7.addItem("Monaragala");
        iline7.addItem("Mulativu");
        iline7.addItem("Nuwara Eliya");
        iline7.addItem("Polonnaruwa");
        iline7.addItem("Puttalam");
        iline7.addItem("Rathnapura");
        iline7.addItem("Trincomalee");
        iline7.addItem("Vavuniya");
        iline8.addItem("Central");
        iline8.addItem("Eastern");
        iline8.addItem("North Central");
        iline8.addItem("Northern");
        iline8.addItem("North Western");
        iline8.addItem("Sabaragamuwa");
        iline8.addItem("Southern");
        iline8.addItem("Uva");
        iline8.addItem("Western");
        uline4.addItem("Ampara");
        uline4.addItem("Anuradhapura");
        uline4.addItem("Badulla");
        uline4.addItem("Batticaloa");
        uline4.addItem("Colombo");
        uline4.addItem("Galle");
        uline4.addItem("Gampaha");
        uline4.addItem("Hambanthota");
        uline4.addItem("Jaffna");
        uline4.addItem("Kaluthara");
        uline4.addItem("Kandy");
        uline4.addItem("Kegalle");
        uline4.addItem("Kilinochchi");
        uline4.addItem("Kurunegala");
        uline4.addItem("Mannar");
        uline4.addItem("Matale");
        uline4.addItem("Matara");
        uline4.addItem("Monaragala");
        uline4.addItem("Mulativu");
        uline4.addItem("Nuwara Eliya");
        uline4.addItem("Polonnaruwa");
        uline4.addItem("Puttalam");
        uline4.addItem("Rathnapura");
        uline4.addItem("Trincomalee");
        uline4.addItem("Vavuniya");
        zone.addItem("Ampara");
        zone.addItem("Anuradhapura");
        zone.addItem("Badulla");
        zone.addItem("Batticaloa");
        zone.addItem("Colombo");
        zone.addItem("Galle");
        zone.addItem("Gampaha");
        zone.addItem("Hambanthota");
        zone.addItem("Jaffna");
        zone.addItem("Kaluthara");
        zone.addItem("Kandy");
        zone.addItem("Kegalle");
        zone.addItem("Kilinochchi");
        zone.addItem("Kurunegala");
        zone.addItem("Mannar");
        zone.addItem("Matale");
        zone.addItem("Matara");
        zone.addItem("Monaragala");
        zone.addItem("Mulativu");
        zone.addItem("Nuwara Eliya");
        zone.addItem("Polonnaruwa");
        zone.addItem("Puttalam");
        zone.addItem("Rathnapura");
        zone.addItem("Trincomalee");
        zone.addItem("Vavuniya");
        country.addItem("Srilanka");
        country.addItem("India");
        country.addItem("Pakisthan");
        country.addItem("Bangaladesh");
        country.addItem("Bhuthan");
        country.addItem("Maladives");
        zone1.addItem("Ampara");
        zone1.addItem("Anuradhapura");
        zone1.addItem("Badulla");
        zone1.addItem("Batticaloa");
        zone1.addItem("Colombo");
        zone1.addItem("Galle");
        zone1.addItem("Gampaha");
        zone1.addItem("Hambanthota");
        zone1.addItem("Jaffna");
        zone1.addItem("Kaluthara");
        zone1.addItem("Kandy");
        zone1.addItem("Kegalle");
        zone1.addItem("Kilinochchi");
        zone1.addItem("Kurunegala");
        zone1.addItem("Mannar");
        zone1.addItem("Matale");
        zone1.addItem("Matara");
        zone1.addItem("Monaragala");
        zone1.addItem("Mulativu");
        zone1.addItem("Nuwara Eliya");
        zone1.addItem("Polonnaruwa");
        zone1.addItem("Puttalam");
        zone1.addItem("Rathnapura");
        zone1.addItem("Trincomalee");
        zone1.addItem("Vavuniya");
        country1.addItem("Srilanka");
        country1.addItem("India");
        country1.addItem("Pakisthan");
        country1.addItem("Bangaladesh");
        country1.addItem("Bhuthan");
        country1.addItem("Maladives");
        c13.addItem("Ampara");
        c13.addItem("Anuradhapura");
        c13.addItem("Badulla");
        c13.addItem("Batticaloa");
        c13.addItem("Colombo");
        c13.addItem("Galle");
        c13.addItem("Gampaha");
        c13.addItem("Hambanthota");
        c13.addItem("Jaffna");
        c13.addItem("Kaluthara");
        c13.addItem("Kandy");
        c13.addItem("Kegalle");
        c13.addItem("Kilinochchi");
        c13.addItem("Kurunegala");
        c13.addItem("Mannar");
        c13.addItem("Matale");
        c13.addItem("Matara");
        c13.addItem("Monaragala");
        c13.addItem("Mulativu");
        c13.addItem("Nuwara Eliya");
        c13.addItem("Polonnaruwa");
        c13.addItem("Puttalam");
        c13.addItem("Rathnapura");
        c13.addItem("Trincomalee");
        c13.addItem("Vavuniya");
        c13.addItem("Central");
        c13.addItem("Eastern");
        c13.addItem("North Central");
        c13.addItem("Northern");
        c13.addItem("North Western");
        c13.addItem("Sabaragamuwa");
        c13.addItem("Southern");
        c13.addItem("Uva");
        c13.addItem("Western");
        c13.addItem("Ampara");
        c13.addItem("Anuradhapura");
        c13.addItem("Badulla");
        c13.addItem("Batticaloa");
        c13.addItem("Colombo");
        c13.addItem("Galle");
        c13.addItem("Gampaha");
        c13.addItem("Hambanthota");
        c13.addItem("Jaffna");
        c13.addItem("Kaluthara");
        c13.addItem("Kandy");
        c13.addItem("Kegalle");
        c13.addItem("Kilinochchi");
        c13.addItem("Kurunegala");
        c13.addItem("Mannar");
        c13.addItem("Matale");
        c13.addItem("Matara");
        c13.addItem("Monaragala");
        c13.addItem("Mulativu");
        c13.addItem("Nuwara Eliya");
        c13.addItem("Polonnaruwa");
        c13.addItem("Puttalam");
        c13.addItem("Rathnapura");
        c13.addItem("Trincomalee");
        c13.addItem("Vavuniya");
        c13.addItem("Central");
        c13.addItem("Eastern");
        c13.addItem("North Central");
        c13.addItem("Northern");
        c13.addItem("North Western");
        c13.addItem("Sabaragamuwa");
        c13.addItem("Southern");
        c13.addItem("Uva");
        c13.addItem("Western");
        c13.addItem("Ampara");
        c13.addItem("Anuradhapura");
        c13.addItem("Badulla");
        c13.addItem("Batticaloa");
        c13.addItem("Colombo");
        c13.addItem("Galle");
        c13.addItem("Gampaha");
        c13.addItem("Hambanthota");
        c13.addItem("Jaffna");
        c13.addItem("Kaluthara");
        c13.addItem("Kandy");
        c13.addItem("Kegalle");
        c13.addItem("Kilinochchi");
        c13.addItem("Kurunegala");
        c13.addItem("Mannar");
        c13.addItem("Matale");
        c13.addItem("Matara");
        c13.addItem("Monaragala");
        c13.addItem("Mulativu");
        c13.addItem("Nuwara Eliya");
        c13.addItem("Polonnaruwa");
        c13.addItem("Puttalam");
        c13.addItem("Rathnapura");
        c13.addItem("Trincomalee");
        c13.addItem("Vavuniya");

        c14.addItem("Srilanka");
        c14.addItem("India");
        c14.addItem("Pakisthan");
        c14.addItem("Bangaladesh");
        c14.addItem("Bhuthan");
        c14.addItem("Maladives");

        uline5.addItem("Srilanka");
        uline5.addItem("India");
        uline5.addItem("Pakisthan");
        uline5.addItem("Bangaladesh");
        uline5.addItem("Bhuthan");
        uline5.addItem("Maladives");
    }

    private void searchhalldata() {
        try {
            String a5 = hallnumber.getText();
            ResultSet rs = DB.search("select * from Hall_Registration where hallnumber='" + a5 + "'");
            if (rs.next()) {
                String k1 = rs.getString("Flow_no");
                String k2 = rs.getString("authorizedperaon");
                String k3 = rs.getString("tp");
                String k4 = rs.getString("email");
                String k5 = rs.getString("status");
                String k6 = rs.getString("institute_idcompany");
                String k8 = rs.getString("registerdate");
                jComboBox32.setSelectedItem(rs.getString("maxcount"));
                hallpname.setText(k2);
                halltp.setText(k3);
                hallemail.setText(k4);
                ResultSet ww = DB.search("select * from institute where idcompany='" + k6 + "'");
                if (ww.next()) {
                    String k7 = ww.getString("companyname");
                    hins.setSelectedItem(k7);
                }
                hallflownu.setText(k1);
                hallactive.setSelectedItem(k5);
                hins1.setSelectedItem(rs.getString("type"));

                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");

                hallregisterdate.setDate(sdf.parse(rs.getString("registerdate")));
            } else {
                clearfield();
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid data");
        }
    }

    private void updatehall() {
        try {
            String a1 = hallpname.getText();
            String a2 = halltp.getText();
            String a3 = hallemail.getText();
            String a4 = (String) hins.getSelectedItem();
            String a5 = hallnumber.getText();
            String a6 = hallflownu.getText();
            String a7 = (String) hallactive.getSelectedItem();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = sdf.format(hallregisterdate.getDate());

            DB.iud("Update Hall_Registration set maxcount='" + jComboBox32.getSelectedItem() + "' , type='" + hins1.getSelectedItem() + "', Flow_no='" + a6 + "' , authorizedperaon='" + a1 + "' ,tp='" + a2 + "' ,email='" + a3 + "' ,status='" + a7 + "' ,registerdate='" + sdate + "' where hallnumber='" + a5 + "'  ");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid data");
        }
    }

    private void savehalldata() {
        try {
            String a1 = hallpname.getText();
            String a2 = halltp.getText();
            String a3 = hallemail.getText();
            String a4 = (String) hins.getSelectedItem();
            String a5 = hallnumber.getText();
            String a6 = hallflownu.getText();
            String a7 = (String) hallactive.getSelectedItem();

            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String sdate = sdf.format(hallregisterdate.getDate());
            ResultSet rsw = DB.search("select count(hall_id) as x from Hall_Registration ");
            if (rsw.next()) {
                String hallid = rsw.getString("x");
                int r = Integer.parseInt(hallid);
                int rrw = r++;
                ResultSet e = DB.search("select * from institute where status='Default'");
                if (e.next()) {
                    String xx = e.getString("idcompany");

                    DB.iud("insert into Hall_Registration value('" + rrw + "','" + a6 + "','" + a1 + "','" + a2 + "','" + a3 + "','" + a5 + "','" + xx + "','" + a7 + "','" + sdate + "','" + hins1.getSelectedItem() + "','" + jComboBox32.getSelectedItem() + "')");

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid data");

        }
    }

    private void sysClock() {
        final int timeRun = 0;
        new Thread() {
            public void run() {
                while (timeRun == 0) {
                    Date d = new Date();
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                    clock.setText(sdf.format(d));

                    Date today = new Date();
                    DateFormat df = DateFormat.getDateInstance(DateFormat.LONG, Locale.ENGLISH);
                    String strDate = df.format(today);
                    day.setText(strDate);
                    todate.setText(strDate);
                }
            }
        }.start();
    }

    private void setcalender() {
        try {
            //  DB.search("select * from ")
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void sethallcombo() {
        try {

            jComboBox34.removeAllItems();

            ihallset.removeAllItems();
            ResultSet rs = DB.search("select * from Hall_Registration where status='Active' ");
            while (rs.next()) {
                String k = rs.getString("hallnumber");
                ihallset.addItem(k);
                jComboBox34.addItem(k);
            }
            schallday.removeAllItems();
            schalltime.removeAllItems();
            endtime.removeAllItems();
            ResultSet rs1 = DB.search("select * from time");
            while (rs1.next()) {
                String k1 = rs1.getString("starttime");
                // String k2 = rs1.getString("endtime");
                schalltime.addItem(k1);
                // endtime.addItem(k2);
            }
            ResultSet rs2 = DB.search("select * from day");
            while (rs2.next()) {
                String k1 = rs2.getString("date");
                schallday.addItem(k1);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setclasssubject() {
        try {
            classsub.removeAllItems();
            ResultSet rs = DB.search("select * from  subject where status='Active'");
            while (rs.next()) {

                String a1 = rs.getString("subjectname");
                classsub.addItem(a1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setpublish() {
        try {
            jButton73.setVisible(false);
            jButton70.setVisible(false);
            setusertype.removeAllItems();
            publishfor.removeAllItems();
            position.removeAllItems();
            ResultSet rs = DB.search("select * from usertype where status='Active'");
            position.addItem("none");
            publishfor.addItem("none");
            setusertype.addItem("none");
            DefaultTableModel dtm = (DefaultTableModel) setposition.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                DefaultTableModel dtm1 = (DefaultTableModel) setposition.getModel();
                Vector v = new Vector();
                v.add(rs.getString("usertype"));
                dtm1.addRow(v);
                publishfor.addItem(rs.getString("usertype"));
                position.addItem(rs.getString("usertype"));
                setusertype.addItem(rs.getString("usertype"));
                jComboBox2.addItem(rs.getString("usertype"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void newsubjecttable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) newsubject.getModel();
            DefaultTableModel dtm1 = (DefaultTableModel) streamsubject.getModel();
            dtm.setRowCount(0);
            dtm1.setRowCount(0);
            ResultSet rsw = DB.search("select * from subject");
            while (rsw.next()) {
                String a1 = rsw.getString("subjectid");
                String a2 = rsw.getString("subjectname");
                String a3 = rsw.getString("status");
                String a4 = rsw.getString("payment");
                Vector v = new Vector();
                v.add(false);
                v.add(a1);
                v.add(a2);
                v.add(a3);
                v.add(a4);
                dtm.addRow(v);
                Vector v1 = new Vector();
                v1.add(false);
                v1.add(a1);
                v1.add(a2);
                v1.add(a3);

                dtm1.addRow(v1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void autosubjectid() {
        try {
            ResultSet dd = DB.search("select count(subjectid) as x from subject");
            if (dd.next()) {
                String s = dd.getString("x");
                int y = Integer.parseInt(s);

                String f = "3232" + y;

                setid.setText(f);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void autostreamid() {
        try {
            rstreamid.setText(null);
            rstreamname.setText(null);
            rstreamlevel.setSelectedIndex(0);
            ssactive.setSelectedIndex(0);
            ResultSet dd = DB.search("select count(streamid) as x from stream");
            if (dd.next()) {
                String s = dd.getString("x");
                int y = Integer.parseInt(s);

                String f = "4343" + y;

                rstreamid.setText(f);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setscheduletable() {
        try {
            DefaultTableModel dtm1 = (DefaultTableModel) sctable.getModel();
            dtm1.setRowCount(0);
            System.out.print("dsd");
            ResultSet rs = DB.search("select * from classregistation where status='Active'");
            while (rs.next()) {
                String s1 = rs.getString("registerdate");
                String s2 = rs.getString("Hall_Registration_hall_id");
                String s3 = rs.getString("Timeslot_timeslotid");
                String s4 = rs.getString("type");
                String s5 = rs.getString("status");
                //   String s6 = rs.getString("subject_subjectid");
                //     String s7 = rs.getString("subject_subjectname");
                String s8 = rs.getString("subject_has_teacher_subtea_id");
                System.out.print("dsd");
                DefaultTableModel dtm = (DefaultTableModel) sctable.getModel();
                Vector v = new Vector();

                ResultSet j1 = DB.search("select * from subject_has_teacher where subtea_id='" + s8 + "'");
                if (j1.next()) {
                    String i1 = j1.getString("teacher_teacherid");

                    ResultSet j11 = DB.search("select * from teacher where teacherid='" + i1 + "'");
                    if (j11.next()) {
                        v.add(j11.getString("name"));

                    }
                    ResultSet j = DB.search("select * from subject where subjectid='" + j1.getString("subject_subjectid") + "'");
                    if (j.next()) {
                        v.add(j.getString("subjectname"));
                    }
                }

                ResultSet j3 = DB.search("select * from hall_Registration where hall_id='" + s2 + "'");
                if (j3.next()) {
                    v.add(j3.getString("hallnumber"));

                }

                try {
                    ResultSet y = DB.search("select * from timeslot where timeslotid='" + s3 + "'");
                    if (y.next()) {
                        System.out.print("dsd");
                        String timezz = y.getString("time_timeid");
                        String dateq = y.getString("day_dayid");
                        ResultSet w = DB.search("select * from time where timeid='" + timezz + "'");
                        if (w.next()) {
                            System.out.print("dsd");
                            v.add(w.getString("starttime"));
                            v.add(w.getString("endtime"));

                            ResultSet a = DB.search("select * from day where dayid='" + dateq + "'");
                            if (a.next()) {
                                v.add(a.getString("date"));

                            }

                        }
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

                v.add(s4);
                v.add(s5);
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setcal() {
        try {

            DefaultTableModel dtmz = (DefaultTableModel) calender.getModel();
            DefaultTableModel dtmz1 = (DefaultTableModel) tsunday.getModel();
            DefaultTableModel dtmzz1 = (DefaultTableModel) tsaturday.getModel();
            DefaultTableModel dtmzz2 = (DefaultTableModel) tsunday.getModel();
            DefaultTableModel dtmz3 = (DefaultTableModel) tthuesday.getModel();
            DefaultTableModel dtmz4 = (DefaultTableModel) tthuesday.getModel();
            DefaultTableModel dtmz5 = (DefaultTableModel) tfriday.getModel();
            dtmz.setRowCount(0);
            dtmz1.setRowCount(0);
            dtmzz1.setRowCount(0);
            dtmzz2.setRowCount(0);
            dtmz3.setRowCount(0);
            dtmz4.setRowCount(0);
            dtmz5.setRowCount(0);

            ResultSet rs = DB.search("select * from classregistation where status='Active'");
            while (rs.next()) {
                System.err.println("fdf");
                String s1 = rs.getString("Timeslot_timeslotid");
                String s2 = rs.getString("subject_has_teacher_subtea_id");
                String ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q1 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");

                if (q1.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q1.getString("time_timeid");
                    String p2 = q1.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Monday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) calender.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }

                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q11 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q11.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q11.getString("time_timeid");
                    String p2 = q11.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Sunday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) tsunday.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }

                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q111 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q111.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q111.getString("time_timeid");
                    String p2 = q111.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Tuesday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) tthuesday.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }

                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q12 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q12.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q12.getString("time_timeid");
                    String p2 = q12.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Wednesday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) twendsday.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }

                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q121 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q121.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q121.getString("time_timeid");
                    String p2 = q121.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Thursday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) tthursady.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }
                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q113 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q113.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q113.getString("time_timeid");
                    String p2 = q113.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Friday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) tfriday.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }

                System.err.println("fdf");
                s1 = rs.getString("Timeslot_timeslotid");
                s2 = rs.getString("subject_has_teacher_subtea_id");
                ba = rs.getString("Hall_Registration_hall_id");
                ResultSet q14 = DB.search("select * from timeslot where timeslotid='" + s1 + "'");
                if (q14.next()) {
                    System.err.println("gfgfgf");
                    String p1 = q14.getString("time_timeid");
                    String p2 = q14.getString("day_dayid");
                    ResultSet qw = DB.search("select * from day where dayid='" + p2 + "'");
                    if (qw.next()) {
                        System.err.println("5545");
                        String setd = qw.getString("date");
                        ResultSet z = DB.search("select * from time where timeid='" + p1 + "'");
                        if (z.first()) {
                            String xx1 = z.getString("starttime");
                            System.err.println("fffffffr");
                            String xx2 = z.getString("endtime");
                            System.err.println(setd);
                            if (setd.equals("Saturday")) {

                                System.err.println(setd);
                                ResultSet qe = DB.search("select * from subject_has_teacher where subtea_id='" + s2 + "'");
                                if (qe.next()) {
                                    String aqq = qe.getString("subject_subjectid");
                                    String va = qe.getString("teacher_teacherid");
                                    System.err.println("eeeeeeeee");
                                    ResultSet wqwq = DB.search("select * from subject where subjectid='" + aqq + "'");
                                    if (wqwq.next()) {
                                        String za = wqwq.getString("subjectname");

                                        ResultSet wqwq1 = DB.search("select * from teacher where teacherid='" + va + "'");
                                        if (wqwq1.next()) {
                                            String za1 = wqwq1.getString("name");

                                            DefaultTableModel dtm = (DefaultTableModel) tsaturday.getModel();
                                            Vector V = new Vector();
                                            String a = rs.getString("classid");
                                            V.add(a);
                                            String full = za + " " + za1 + " " + "start at" + xx1 + "end at" + xx2 + "Hall NO:" + ba;
                                            V.add(full);
                                            dtm.addRow(V);

                                        }

                                    }
                                }

                            }

                        }

                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setvisiblearea() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) setting.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from visiblearea");
            while (rs.next()) {

                Vector v = new Vector();
                v.add(false);
                v.add(rs.getString("visiblearea"));
                dtm.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setquestion() {
        try {
            question1.removeAllItems();
            question2.removeAllItems();

            ResultSet s = DB.search("select * from securityquestions where status='Active'");
            while (s.next()) {
                String s1 = s.getString("question");
                question1.addItem(s1);
                question2.addItem(s1);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setFinaldate() {
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("MM");
        //w2.setText(sdf.format(d));
        SimpleDateFormat sdf1 = new SimpleDateFormat("YYYY");
        w3.setText(sdf1.format(d));
    }

    private void searchcompany() {
        try {
            ResultSet rs = DB.search("select * from institute where companyid='" + searchcompanyid.getText() + "'");
            if (rs.next()) {
                String s1 = rs.getString("idcompany");
                ResultSet t = DB.search("select * from inscontact where adyapanainstitute_idcompany='" + s1 + "'");
                if (t.next()) {
                    ihot1.setText(t.getString("hotline"));
                    iemail1.setText(t.getString("email"));
                    iinfor1.setText(t.getString("informationline"));
                    ifax1.setText(t.getString("faxline"));
                    SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");

                    irdate1.setDate(sdf.parse(rs.getString("registerdate")));

                }
                ResultSet t1 = DB.search("select * from iaddress where adyapanainstitute_idcompany='" + s1 + "'");
                if (t1.next()) {
                    iline10.setText(t1.getString("line1"));
                    iline11.setText(t1.getString("line2"));

                    iline12.setText(t1.getString("line3"));
                    iline7.setSelectedItem(t1.getString("district"));
                    iline8.setSelectedItem(t1.getString("province"));
                    iline9.setText(t1.getString("zipcode"));

                }

            } else {

                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                setfield();
                clearfield();

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateinstitute() {
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String k = sdf.format(irdate1.getDate());
            DB.iud("update  institute set registerdate='" + k + "' where companyid='" + searchcompanyid.getText() + "'");

            ResultSet rs = DB.search("select * from institute where companyid='" + searchcompanyid.getText() + "'");
            if (rs.next()) {
                String s1 = rs.getString("idcompany");

                DB.iud("Update   inscontact set hotline='" + ihot1.getText() + "', email='" + iemail1.getText() + "', informationline='" + iinfor1.getText() + "', faxline='" + ifax1.getText() + "' where adyapanainstitute_idcompany='" + s1 + "'");

                DB.iud("Update  iaddress set line1='" + iline10.getText() + "' , line2='" + iline11.getText() + "' , line3='" + iline12.getText() + "' , district='" + iline7.getSelectedItem() + "',province='" + iline8.getSelectedItem() + "',zipcode='" + iline9.getText() + "' where adyapanainstitute_idcompany='" + s1 + "'");
                System.out.println(iline7.getSelectedItem());
                System.out.println(iline8.getSelectedItem());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setfield() {
        ihot1.setText(null);
        iemail1.setText(null);
        iinfor1.setText(null);
        ifax1.setText(null);
        irdate.setDate(null);
        iline10.setText(null);
        iline11.setText(null);
        irdate1.setDate(null);
        iline12.setText(null);
        iline7.setSelectedIndex(0);
        iline8.setSelectedIndex(0);
        iline9.setText(null);
        searchcompanyid.setText(null);
    }

    private void saveallmessagedata() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) inputm.getModel();
            ResultSet rs = DB.search("select * from message");
            while (rs.next()) {
                String a1 = rs.getString("messageid");
                DB.iud("delete from message where messageid='" + a1 + "'");
                System.out.println("ok");

            }

            int u = dtm.getRowCount();
            for (int i = 0; i < u; i++) {
                Boolean s1 = (Boolean) inputm.getValueAt(i, 0);
                String s2 = (String) inputm.getValueAt(i, 1);
                String s3 = (String) inputm.getValueAt(i, 2);
                String s4 = (String) inputm.getValueAt(i, 3);
                String s5 = (String) inputm.getValueAt(i, 4);
                System.out.println("fffffffff");
                ResultSet rs1 = DB.search("select count(messageid) as x from message");
                if (rs1.next()) {
                    String a1 = rs1.getString("x");
                    int q = Integer.parseInt(a1);
                    int rr = q++;
                    String ee;
                    if (s1 == true) {
                        ee = "Active";

                    } else {
                        ee = "Cancel";
                    }
                    System.out.println("fffffffff");
                    ResultSet rw = DB.search("select * from institute where status='Default'");
                    if (rw.first()) {
                        String d = rw.getString("idcompany");
                        DB.iud("insert into message value('" + rr + "','" + ee + "','" + s2 + "','" + s3 + "','" + s4 + "','" + s5 + "','" + d + "')");
                    }
                }
            }
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(rootPane, "Successfull....!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid data");
        }
    }

    private void saveuser() {
        try {
            String a1 = (String) ssrn1.getSelectedItem();
            String a2 = ssrn2.getText();
            String a3 = ssrn3.getText();
            String a4 = ssrn4.getText();

            SimpleDateFormat sfd = new SimpleDateFormat("YYYY-MM-dd");

            String a5 = sfd.format(staffbirth.getDate());
            String a6 = sna.getText();
            String a7 = sre.getText();
            String a8 = snic.getText();

            String a9 = uline1.getText();

            String a10 = uline2.getText();
            String a11 = uline3.getText();
            String a12 = (String) uline4.getSelectedItem();

            String a14 = (String) setusertype.getSelectedItem();

            String a15 = usermobile.getText();
            String a16 = userland.getText();
            String a17 = useremail.getText();
            String a18 = userother.getText();
            String a19 = staffuser.getText();
            char[] a20 = staffuserpw.getPassword();
            char[] a21 = staffcuserpw.getPassword();
            String pw = String.valueOf(a20);
            String cpw = String.valueOf(a21);
            String a22 = (String) staffstatus.getSelectedItem();
            String s43 = (String) question1.getSelectedItem();
            String s44 = (String) question2.getSelectedItem();
            String an1 = answer1.getText();
            String an2 = answer2.getText();
            String gender;
            if (smale.isSelected()) {
                gender = "male";

            } else {
                gender = "female";
            }
            String staffid = sssetid.getText();

            if (pw.equals(cpw)) {
                if (!(s43 == s44)) {
                    ResultSet rs = DB.search("select * from institute where status='Default' ");
                    if (rs.next()) {
                        System.out.println("dsds");
                        String d1 = rs.getString("idcompany");
                        ResultSet ds = DB.search("select * from usertype where usertype='" + a14 + "'");
                        if (ds.next()) {
                            String sd = ds.getString("userid");
                            System.out.println("d12121sds");
                            DB.iud("insert into staff value('" + sssetid.getText() + "','" + a2 + "','" + a4 + "','" + gender + "','" + a5 + "','" + a8 + "','" + d1 + "','" + staffpath + "','" + sd + "','" + a1 + "','" + a2 + "','" + a12 + "','" + a14 + "')");
                            ResultSet dsw = DB.search("select count(addressid) as x from staffaddress");
                            if (dsw.next()) {
                                String q = dsw.getString("x");
                                int ee = Integer.parseInt(q);
                                ee = ee++;
                                System.out.println("4343");
                                DB.iud("insert into staffaddress value('" + ee + "','" + a9 + "','" + a10 + "','" + a11 + "','" + staffid + "')");

                                ResultSet dsw1 = DB.search("select count(contactid) as x from staffcontact");
                                if (dsw1.next()) {
                                    String q1 = dsw1.getString("x");
                                    int ee1 = Integer.parseInt(q1);
                                    ee1 = ee1 + 2;
                                    System.out.println("dsds");
                                    DB.iud("insert into staffcontact value('" + ee1 + "','" + a15 + "','" + a16 + "','" + a17 + "','" + staffid + "','" + a18 + "')");

                                    ResultSet wdsw1 = DB.search("select count(userid) as x from user");
                                    if (wdsw1.next()) {
                                        String q11 = wdsw1.getString("x");
                                        int ee11 = Integer.parseInt(q11);
                                        ee11 = ee11 + 2;
                                        System.out.println("dsds");
                                        DB.iud("insert into user value('" + ee11 + "','" + a19 + "','" + pw + "','" + a22 + "','" + staffid + "','null','Signed_out')");

                                        ResultSet qw = DB.search("select * from securityquestions where question='" + s43 + "'");
                                        if (qw.next()) {
                                            String q141 = qw.getString("questionid");
                                            System.out.println("dsds");
                                            ResultSet qw1 = DB.search("select * from securityquestions where question='" + s44 + "'");
                                            if (qw1.next()) {
                                                String q1411 = qw1.getString("questionid");
                                                ResultSet wqw = DB.search("select count(userquestionid) as x from user_has_securityquestions");
                                                if (wqw.next()) {
                                                    String sj = wqw.getString("x");
                                                    int j = Integer.parseInt(sj);
                                                    j++;
                                                    DB.iud("insert into user_has_securityquestions value('" + ee11 + "','" + q141 + "','" + an1 + "','" + j + "')");
                                                    j++;
                                                    DB.iud("insert into user_has_securityquestions value('" + ee11 + "','" + q1411 + "','" + an2 + "','" + j + "')");
                                                    sendmail();
                                                    clearfield();

                                                }
                                            }

                                        }
                                    }

                                }

                            }
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Unmatch Question...!");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Unmatch password...!");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void savefullsubjectdata() {
        try {
            DefaultTableModel dtmxx = (DefaultTableModel) newsubject.getModel();
            int u = dtmxx.getRowCount();
            for (int i = 0; i < u; i++) {
                Boolean s1 = (Boolean) newsubject.getValueAt(i, 0);
                String s2 = (String) newsubject.getValueAt(i, 1);
                String s3 = (String) newsubject.getValueAt(i, 2);
                String s5 = (String) newsubject.getValueAt(i, 4);
                String s4 = (String) newsubject.getValueAt(i, 3);

                String ee;
                if (s1 == true) {

                    ResultSet rs = DB.search("select * from subject where subjectid='" + s2 + "'");
                    if (rs.next()) {
                        ResultSet rsw = DB.search("select * from subject where subjectid='" + s2 + "' and status='Deactive'");
                        if (rsw.next()) {
                            DB.iud("update subject set status='Active' where subjectid='" + s2 + "'");
                            System.out.println("ok");

                        } else {
                            DB.iud("update subject set status='Deactive' where subjectid='" + s2 + "'");
                            System.out.println("ok");

                        }
                    }

                } else {
                    System.out.println("o32k");
                    ResultSet rs1 = DB.search("select * from subject where subjectid='" + s2 + "'");
                    if (rs1.first()) {
                        System.out.println("o32kddddddddddddgfg");

                    } else {
                        System.out.println("o32kgfg");

                        DB.iud("insert into subject value('" + s2 + "','" + s3 + "','" + s4 + "','" + s5 + "')");
                        setid.setText(null);
                        setname.setText(null);
                        setstatus.setSelectedIndex(0);
                        spayment.setText(null);

                    }

                }

            }
            dtmxx.setRowCount(0);
            newsubjecttable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void subregister() {
        try {
            String a1 = setid.getText();
            String a2 = setname.getText();
            String a3 = (String) setstatus.getSelectedItem();
            String pay = spayment.getText();
            DefaultTableModel dtm = (DefaultTableModel) newsubject.getModel();
            Vector v = new Vector();

            v.add(false);
            v.add(a1);
            v.add(a2);

            v.add(a3);
            v.add(pay);
            dtm.addRow(v);

            //DB.search(cc)
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void streamregister() {
        try {
            String a1 = rstreamid.getText();
            String a2 = rstreamname.getText();
            String a3 = (String) rstreamlevel.getSelectedItem();
            String a4 = (String) ssactive.getSelectedItem();

            DB.iud("insert into stream value('" + a1 + "','" + a2 + "','" + a3 + "','" + a4 + "')");
            System.err.println("eeee");

            DefaultTableModel dtmxx = (DefaultTableModel) streamsubject.getModel();
            int u = dtmxx.getRowCount();

            for (int i = 0; i < u; i++) {
                Boolean s1 = (Boolean) streamsubject.getValueAt(i, 0);
                String s2 = (String) streamsubject.getValueAt(i, 1);
                String s3 = (String) streamsubject.getValueAt(i, 2);
                String s4 = (String) streamsubject.getValueAt(i, 3);

                String ee;
                if (s1 == true) {
                    ResultSet dd = DB.search("select count(ssid) as x from stream_has_subject");
                    while (dd.next()) {
                        String s = dd.getString("x");
                        int ii = Integer.parseInt(s);
                        ii = ii++;
                        System.out.println("dsd");
                        DB.iud("insert into stream_has_subject value('" + a1 + "','" + s2 + "','" + ii + "','Active')");

                    }
                }
            }

            autostreamid();
            newsubjecttable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void streamupdate() {
        try {
            String a1 = rstreamid.getText();
            String a2 = rstreamname.getText();
            String a3 = (String) rstreamlevel.getSelectedItem();
            String a4 = (String) ssactive.getSelectedItem();
            //   DB.iud("delete from stream_has_subject where stream_streamid='" + a1 + "'");
            //  DB.iud("delete from stream where streamid='" + a1 + "' ");

            ResultSet q = DB.search("select * from stream where streamid='" + a1 + "'");
            if (q.next()) {

                try {

                    DB.iud("update stream set stream='" + a2 + "',level='" + a3 + "',status='" + a4 + "' where streamid='" + a1 + "'");
                    System.err.println("set");

                    DefaultTableModel dtmxx = (DefaultTableModel) streamsubject.getModel();
                    int u = dtmxx.getRowCount();

                    for (int i = 0; i < u; i++) {
                        Boolean s1 = (Boolean) streamsubject.getValueAt(i, 0);
                        String s2 = (String) streamsubject.getValueAt(i, 1);
                        String s3 = (String) streamsubject.getValueAt(i, 2);
                        String s4 = (String) streamsubject.getValueAt(i, 3);

                        String ee;
                        if (s1 == false) {
                            System.out.println("false");
                            ResultSet e = DB.search("select * from stream_has_subject where stream_streamid='" + a1 + "' and subject_subjectid='" + s2 + "'");
                            if (e.next()) {

                                DB.iud("update stream_has_subject set status='Active' where stream_streamid='" + a1 + "' and subject_subjectid='" + s2 + "'");

                            } else {
                                ResultSet dd = DB.search("select count(ssid) as x from stream_has_subject");
                                while (dd.next()) {
                                    String s = dd.getString("x");
                                    int ii = Integer.parseInt(s);
                                    ii = ii++;
                                    System.out.println("dsd");
                                    DB.iud("insert into stream_has_subject value('" + a1 + "','" + s2 + "','" + ii + "','Active')");

                                }

                            }

                        } else {
                            ResultSet es = DB.search("select * from stream_has_subject where stream_streamid='" + a1 + "' ");
                            if (es.next()) {
                                DB.iud("update stream_has_subject set status='Deactive' where stream_streamid='" + a1 + "'  and subject_subjectid='" + s2 + "'");
                            }

                        }
                    }

                    autostreamid();
                    newsubjecttable();
                    jButton23.setEnabled(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Stream Details");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void serchstream() {
        try {
            DefaultTableModel dtmxx = (DefaultTableModel) streamsubject.getModel();
            dtmxx.setRowCount(0);

            String a2 = rstreamname.getText();
            ResultSet q = DB.search("select * from stream where stream='" + a2 + " '");
            if (q.next()) {
                String a1 = q.getString("streamid");
                ssactive.setSelectedItem(q.getString("status"));
                rstreamid.setText(a1);
                zzzz = a1;
                ResultSet q1 = DB.search("select * from stream_has_subject where stream_streamid='" + a1 + "' and status='Active'");
                while (q1.next()) {
                    String a11 = q1.getString("subject_subjectid");
                    ResultSet s1 = DB.search("select * from subject where subjectid='" + a11 + "'");
                    if (s1.next()) {
                        System.err.println("ss");

                        String a3 = s1.getString("subjectname");
                        rstreamlevel.setSelectedItem(q.getString("level"));
                        Vector v = new Vector();

                        v.add(false);

                        v.add(a11);
                        v.add(a3);
                        ResultSet er = DB.search("select * from subject where subjectid='" + a11 + "'");
                        if (er.next()) {
                            String a33 = er.getString("status");
                            v.add(a33);
                        }

                        dtmxx.addRow(v);
                    }

                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                autostreamid();
                newsubjecttable();
                bbbbbbbbb.setEnabled(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void operation() {
        try {
            tsub1.removeAllItems();
            tsub2.removeAllItems();
            tsub3.removeAllItems();
            tsub4.removeAllItems();

            tsub1.addItem("Select One Subject");
            tsub2.addItem("Select One Subject");
            tsub3.addItem("Select One Subject");
            tsub4.addItem("Select One Subject");
            ResultSet rs = DB.search("select * from subject where status='Active'");
            while (rs.next()) {
                tsub1.addItem(rs.getString("subjectname"));
                tsub2.addItem(rs.getString("subjectname"));
                tsub3.addItem(rs.getString("subjectname"));
                tsub4.addItem(rs.getString("subjectname"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void savedate() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = sdf.format(dob1.getDate());
            String gender;
            if (male.isSelected()) {
                gender = "male";

            } else {

                gender = "female";
            }
            String a = sf.getText();
            String m = sm.getText();
            String f = sl.getText();
            String name = a + " " + m + " " + f;
            String nid = nic1.getText();
            String a1 = line4.getText();
            String a2 = line5.getText();
            String a3 = line6.getText();

            String ez = (String) zone.getSelectedItem();
            String co = (String) country.getSelectedItem();
            String na = nationality.getText();
            String c1 = tm.getText();
            String c2 = tl.getText();
            String c3 = temail.getText();

            String pl = (String) passedlevel.getSelectedItem();

            String tez = (String) edzone.getSelectedItem();
            String sn = school.getText();
            String tcomment = comment.getText();
            String re = record.getText();
            ResultSet rs = DB.search("select count(teacherid) as x from teacher");
            if (rs.next()) {
                int i = Integer.parseInt(rs.getString("x"));
                i++;
                int d = i;
                DB.iud("insert into teacher value('" + d + "','" + name + "','" + gender + "','" + nid + "','" + sdate + "','" + staffnewpath + "','" + todate.getText() + "','" + na + "','" + co + "','" + ez + "','" + jComboBox5.getSelectedItem() + "','" + jComboBox15.getSelectedItem() + "','" + sn + "')");
                ResultSet rs1 = DB.search("select count(addressid) as x from taddress");
                if (rs1.next()) {
                    int e = Integer.parseInt(rs.getString("x"));
                    e++;
                    int ff = e;
                    DB.iud("insert into taddress value('" + ff + "','" + a1 + "','" + a2 + "','" + a3 + "','" + d + "')");
                    ResultSet rs2 = DB.search("select count(contactid) as x from tcontact");
                    if (rs2.next()) {
                        int e1 = Integer.parseInt(rs.getString("x"));
                        e1++;
                        int fff = e1;

                        DB.iud("insert into tcontact value('" + fff + "','" + c1 + "','" + c2 + "','" + c3 + "','" + d + "')");

                        ResultSet s = DB.search("select * from institute where status='Default'");
                        if (s.next()) {
                            String id = s.getString("idcompany");
                            DB.iud("insert into institute_has_teacher(institute_idcompany,teacher_teacherid) value('" + id + "','" + d + "')");

                            ResultSet rr = DB.search("select count(serviceid) as x from servicerecords");
                            if (rr.next()) {
                                int e11 = Integer.parseInt(rs.getString("x"));
                                e11++;
                                int yf = e11;

                                DB.iud("insert into servicerecords value('" + yf + "','" + pl + "','" + re + "','" + tcomment + "','" + id + "','" + d + "')");
                                ResultSet wq = DB.search("select count(subtea_id) as x from subject_has_teacher");
                                if (wq.next()) {
                                    int ea = Integer.parseInt(wq.getString("x"));

                                    int ddd = ea;
                                    String o1 = (String) tsub1.getSelectedItem();
                                    String o2 = (String) tsub2.getSelectedItem();
                                    String o3 = (String) tsub3.getSelectedItem();
                                    String o4 = (String) tsub4.getSelectedItem();
                                    if ((!((o1 == o2) && (o1 == o3) && (o1 == o4) && (o2 == o3) && (o3 == o4) || o1 == "Select One Subject"))) {
                                        ResultSet zz = DB.search("select * from subject where subjectname='" + o1 + "'");
                                        if (zz.next()) {
                                            String sw = zz.getString("subjectid");
                                            System.out.println("1");
                                            ResultSet zz1 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sw + "' and teacher_teacherid='" + d + "'");
                                            if (zz1.next()) {
                                                System.out.println("11");
                                            } else {

                                                ddd++;
                                                DB.iud("insert into subject_has_teacher value('" + sw + "','" + d + "','" + ddd + "','Active')");
                                            }
                                        }

                                    }
                                    if ((!((o1 == o2) && (o1 == o3) && (o1 == o4) && (o2 == o3) && (o3 == o4) || o2 == "Select One Subject"))) {
                                        ResultSet zz = DB.search("select * from subject where subjectname='" + o2 + "'");
                                        if (zz.next()) {
                                            String sw = zz.getString("subjectid");
                                            ResultSet zz1 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sw + "' and teacher_teacherid='" + d + "'");
                                            if (zz1.next()) {

                                            } else {

                                                ddd++;
                                                DB.iud("insert into subject_has_teacher value('" + sw + "','" + d + "','" + ddd + "','Active')");
                                            }
                                        }
                                    }
                                    if ((!((o1 == o2) && (o1 == o3) && (o1 == o4) && (o2 == o3) && (o3 == o4) || o3 == "Select One Subject"))) {
                                        ResultSet zz = DB.search("select * from subject where subjectname='" + o3 + "'");
                                        if (zz.next()) {
                                            String sw = zz.getString("subjectid");
                                            ResultSet zz1 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sw + "' and teacher_teacherid='" + d + "'");
                                            if (zz1.next()) {

                                            } else {
                                                ddd++;
                                                DB.iud("insert into subject_has_teacher value('" + sw + "','" + d + "','" + ddd + "','Active')");
                                            }
                                        }
                                    }
                                    if ((!((o1 == o2) && (o1 == o3) && (o1 == o4) && (o2 == o3) && (o3 == o4) || o4 == "Select One Subject"))) {
                                        ResultSet zz = DB.search("select * from subject where subjectname='" + o4 + "'");
                                        if (zz.next()) {
                                            String sw = zz.getString("subjectid");
                                            ResultSet zz1 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sw + "' and teacher_teacherid='" + d + "'");
                                            if (zz1.next()) {

                                            } else {
                                                ddd++;
                                                DB.iud("insert into subject_has_teacher value('" + sw + "','" + d + "','" + ddd + "','Active')");

                                            }
                                        }
                                    }

                                }

                                clearfield();
                            }

                        } else {
                            System.out.println("kkk");
                            JOptionPane.showMessageDialog(rootPane, "System Cannot Recognized the Active Institute Data...!");
                        }

                    }

                }

            }
        } catch (Exception e) {
            clearfield();
            e.printStackTrace();
        }
    }

    private void addallsubject() {
        try {
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            dtm1.setRowCount(0);
            ResultSet rs = DB.search("select *from subject where status='Active'");
            while (rs.next()) {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                Vector v = new Vector();
                v.add(false);
                v.add(rs.getString("subjectid"));
                v.add(rs.getString("subjectname"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setstream() {

        try {
            mins.removeAllItems();
            jComboBox7.removeAllItems();
            ResultSet r = DB.search("select * from stream where status='Active'");
            while (r.next()) {
                mins.addItem(r.getString("stream"));
                jComboBox7.addItem(r.getString("stream"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void savedata() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = sdf.format(dob.getDate());
            String gender;
            if (male.isSelected()) {
                gender = "male";

            } else {

                gender = "female";
            }
            String fname = sfirst.getText();
            String mname = smiddle.getText();
            String lname = slast.getText();
            String id = nic.getText();
            String a1 = line1.getText();
            String nationality = nat.getText();
            String regio = region.getText();
            String a2 = line2.getText();
            String a3 = line3.getText();

            String ple = (String) passedlevel.getSelectedItem();
            String ezple = (String) ezone.getSelectedItem();
            String sn = (String) schoolname.getText();
            String com = (String) comments.getText();

            String zon = (String) zone.getSelectedItem();
            String examyear = (String) eyear.getSelectedItem();
            String cou = (String) country.getSelectedItem();
            String moname = smother.getText();
            String moo = smothero.getText();
            String mophone = smotherphone.getText();
            String faname = sfather.getText();
            String fao = sfathero.getText();
            String faophone = sfatherphone.getText();
            String gname = guardianname.getText();
            String gaddress1 = gline1.getText();
            String gaddress2 = gline2.getText();
            String gaddress3 = gline3.getText();
            String gr = (String) grelation.getSelectedItem();
            String goccupation = go.getText();
            String gm = gmobile.getText();
            String gl = gland.getText();
            String tp1 = mtp.getText();
            String tp2 = mh.getText();
            String tp3 = email1.getText();
            String tp4 = other.getText();

            ResultSet rad = DB.search("select count(addressid) as x from saddress");
            if (rad.next()) {
                int ad = Integer.parseInt(rad.getString("x"));
                int saddressid = ad++;
                indexid = id + "" + saddressid + "" + examyear;
                DB.iud("insert into saddress Value('" + saddressid + "','" + a1 + "','" + a2 + "','" + a3 + "','" + zon + "','" + cou + "')");
                ResultSet rcon = DB.search("select count(contactid) as y from scontact");
                if (rcon.next()) {
                    int co = Integer.parseInt(rcon.getString("y"));
                    int contactid = co++;
                    DB.iud("insert into scontact Value('" + contactid + "','" + tp1 + "','" + tp2 + "','" + tp3 + "','" + tp4 + "')");
                    ResultSet gur = DB.search("select count(guradianid) as z from guradian");
                    if (gur.next()) {
                        int gurc = Integer.parseInt(gur.getString("z"));
                        int guradianid = gurc + 2;
                        DB.iud("insert into guradian Value('" + guradianid + "','" + gname + "','" + gr + "','" + goccupation + "')");
                        ResultSet guradd = DB.search("select count(gaddressid) as a from gaddress");
                        if (guradd.next()) {
                            int gurci = Integer.parseInt(guradd.getString("a"));
                            int gaddressid = gurci++;
                            DB.iud("insert into gaddress Value('" + gaddressid + "','" + gaddress1 + "','" + gaddress2 + "','" + gaddress3 + "','" + guradianid + "')");
                            ResultSet gurco = DB.search("select count(contactid) as q from gcontact");
                            if (gurco.next()) {
                                int gusrsetc = Integer.parseInt(gurco.getString("q"));
                                int ccontactid = gusrsetc++;
                                DB.iud("insert into gcontact Value('" + ccontactid + "','" + gm + "','" + gl + "','" + guradianid + "')");
                                //    String index = nic + "" + examyear;
                                DB.iud("insert into student value('" + id + "','" + fname + "','" + mname + "','" + lname + "','" + nationality + "','" + regio + "','" + sdate + "','" + gender + "','" + newpath + "','" + examyear + "','" + contactid + "','" + saddressid + "','" + guradianid + "','" + indexid + "','" + todate.getText() + "','" + nic.getText() + "')");
                                ResultSet pa = DB.search("select count(parentid) as p from parents");
                                if (pa.next()) {
                                    int pad = Integer.parseInt(pa.getString("p"));
                                    int parentid = pad++;
                                    DB.iud("insert into parents Value('" + parentid + "','" + fname + "','" + fao + "','" + fao + "','" + moname + "','" + moo + "','" + mophone + "','" + id + "')");
                                    ResultSet pass = DB.search("select count(precordid) as v from passedrcords");
                                    if (pass.next()) {
                                        int paid = Integer.parseInt(pass.getString("v"));
                                        int precordid = paid++;
                                        DB.iud("insert into passedrcords Value('" + precordid + "','" + ple + "','" + ezple + "','" + sn + "','" + co + "','" + id + "')");

                                        //
                                        //ResultSet
                                        ResultSet qa = DB.search("select count(studentsubjectid) as x from student_has_classregistation");
                                        if (qa.next()) {
                                            String dd = qa.getString("x");
                                            int o = Integer.parseInt(dd);

                                            try {
                                                String stid = (String) t1.getSelectedItem();

                                                if (!(s1.getSelectedItem() == "none" || t1.getSelectedItem() == "Please Select" || g1.getSelectedItem() == "select here")) {

                                                    ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
                                                    if (rs.next()) {
                                                        String xid = rs.getString("teacherid");
                                                        ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + xid + "'");
                                                        if (e.next()) {

                                                            String d = e.getString("subtea_id");
                                                            ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                                                            if (q.next()) {
                                                                String nn = q.getString("classid");
                                                                String c = q.getString("subject_has_teacher_subtea_id");

                                                                // DB.iud(" insert into student_has_classregistation Value('" + id + "','" + indexid + "','" + nn + "','" + c + "','Active')");
                                                                ResultSet m = DB.search("select * from student_has_classregistation where student_studentid='" + id + "' and classregistation_classid='" + nn + "'");
                                                                if (m.next()) {

                                                                } else {
                                                                    o++;
                                                                    DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                    ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                                    if (qa1.next()) {
                                                                        String dd1 = qa1.getString("x");
                                                                        int o1 = Integer.parseInt(dd1);
                                                                        o1 = o1 + 1;
                                                                        String news = e.getString("subject_subjectid");
                                                                        DB.iud("insert into student_has_subject value('" + id + "','" + news + "','" + o1 + "','Active')");

                                                                    }

                                                                }

                                                            }
                                                        }
                                                    }
                                                } else {

                                                }
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }

                                            //
                                            //
                                            try {

                                                String stid = (String) t2.getSelectedItem();
                                                if (!(s2.getSelectedItem() == "none" || t2.getSelectedItem() == "Please Select" || g2.getSelectedItem() == "select here")) {
                                                    ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
                                                    if (rs.next()) {
                                                        String xid = rs.getString("teacherid");
                                                        ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + xid + "'");
                                                        if (e.next()) {
                                                            String d = e.getString("subtea_id");
                                                            ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                                                            if (q.next()) {
                                                                String nn = q.getString("classid");
                                                                String c = q.getString("subject_has_teacher_subtea_id");

                                                                //  DB.iud(" insert into student_has_classregistation Value('" + id + "','" + indexid + "','" + nn + "','" + c + "','Active')");
                                                                o++;
                                                                //  DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");

                                                                ResultSet m = DB.search("select * from student_has_classregistation where student_studentid='" + id + "' and classregistation_classid='" + nn + "'");
                                                                if (m.next()) {
                                                                } else {
                                                                    DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                    ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                                    if (qa1.next()) {
                                                                        String dd1 = qa1.getString("x");
                                                                        int o1 = Integer.parseInt(dd1);
                                                                        o1 = o1 + 1;
                                                                        String news = e.getString("subject_subjectid");
                                                                        DB.iud("insert into student_has_subject value('" + id + "','" + news + "','" + o1 + "','Active')");

                                                                    }

                                                                }

                                                            }
                                                        }
                                                    }
                                                }
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }

                                            //
                                            //
                                            try {
                                                String stid = (String) t3.getSelectedItem();
                                                if (!(s3.getSelectedItem() == "none" || t3.getSelectedItem() == "Please Select" || g3.getSelectedItem() == "select here")) {
                                                    if (!(s3.getSelectedItem() == "none" || t3.getSelectedItem() == "Please Select" || g3.getSelectedItem() == "select here")) {
                                                        ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
                                                        if (rs.next()) {
                                                            String xid = rs.getString("teacherid");
                                                            ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + xid + "'");
                                                            if (e.next()) {
                                                                String d = e.getString("subtea_id");
                                                                ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                                                                if (q.next()) {
                                                                    String nn = q.getString("classid");
                                                                    String c = q.getString("subject_has_teacher_subtea_id");

                                                                    //    DB.iud(" insert into student_has_classregistation Value('" + id + "','" + indexid + "','" + nn + "','" + c + "','Active')");
                                                                    o++;
                                                                    //   DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                    ResultSet m = DB.search("select * from student_has_classregistation where student_studentid='" + id + "' and classregistation_classid='" + nn + "'");
                                                                    if (m.next()) {
                                                                    } else {
                                                                        DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                        ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                                        if (qa1.next()) {
                                                                            String dd1 = qa1.getString("x");
                                                                            int o1 = Integer.parseInt(dd1);
                                                                            o1 = o1 + 1;
                                                                            String news = e.getString("subject_subjectid");
                                                                            DB.iud("insert into student_has_subject value('" + id + "','" + news + "','" + o1 + "','Active')");

                                                                        }

                                                                    }

                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }

                                            //
                                            //
                                            try {
                                                String stid = (String) t4.getSelectedItem();
                                                if (!(s4.getSelectedItem() == "none" || t4.getSelectedItem() == "Please Select" || g4.getSelectedItem() == "select here")) {
                                                    ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
                                                    if (rs.next()) {
                                                        String xid = rs.getString("teacherid");
                                                        ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + xid + "'");
                                                        if (e.next()) {
                                                            String d = e.getString("subtea_id");
                                                            ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                                                            if (q.next()) {
                                                                String nn = q.getString("classid");
                                                                String c = q.getString("subject_has_teacher_subtea_id");

                                                                //     DB.iud(" insert into student_has_classregistation Value('" + id + "','" + indexid + "','" + nn + "','" + c + "','Active')");
                                                                o++;
                                                                //  DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");

                                                                ResultSet m = DB.search("select * from student_has_classregistation where student_studentid='" + id + "' and classregistation_classid='" + nn + "'");
                                                                if (m.next()) {

                                                                } else {
                                                                    DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                    ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                                    if (qa1.next()) {
                                                                        String dd1 = qa1.getString("x");
                                                                        int o1 = Integer.parseInt(dd1);
                                                                        o1 = o1 + 1;
                                                                        String news = e.getString("subject_subjectid");
                                                                        DB.iud("insert into student_has_subject value('" + id + "','" + news + "','" + o1 + "','Active')");

                                                                    }

                                                                }

                                                            }
                                                        }
                                                    }
                                                }
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }

                                            //
                                            //
                                            try {
                                                String stid = (String) t4.getSelectedItem();
                                                if (!(s5.getSelectedItem() == "none" || t5.getSelectedItem() == "Please Select" || g5.getSelectedItem() == "select here")) {
                                                    ResultSet rs = DB.search("select * from teacher where name='" + stid + "'");
                                                    if (rs.next()) {
                                                        String xid = rs.getString("teacherid");
                                                        ResultSet e = DB.search("select * from subject_has_teacher where teacher_teacherid='" + xid + "'");
                                                        if (e.next()) {
                                                            String d = e.getString("subtea_id");
                                                            ResultSet q = DB.search("select * from classregistation  where subject_has_teacher_subtea_id='" + d + "'");
                                                            if (q.next()) {
                                                                String nn = q.getString("classid");
                                                                String c = q.getString("subject_has_teacher_subtea_id");

                                                                //         DB.iud(" insert into student_has_classregistation Value('" + id + "','" + indexid + "','" + nn + "','" + c + "','Active')");
                                                                o++;
                                                                // DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                ResultSet m = DB.search("select * from student_has_classregistation where student_studentid='" + id + "' and classregistation_classid='" + nn + "'");
                                                                if (m.next()) {

                                                                } else {
                                                                    DB.iud("insert into student_has_classregistation value('" + id + "','" + nn + "','Active','" + o + "')");
                                                                    ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                                    if (qa1.next()) {
                                                                        String dd1 = qa1.getString("x");
                                                                        int o1 = Integer.parseInt(dd1);
                                                                        o1 = o1 + 1;
                                                                        String news = e.getString("subject_subjectid");
                                                                        DB.iud("insert into student_has_subject value('" + id + "','" + news + "','" + o1 + "','Active')");

                                                                    }

                                                                }

                                                            }
                                                        }
                                                    }
                                                }
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }
                                        }
                                        //}
                                        clearfield();
                                    }

                                }

                            }

                        }

                    }

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setyear() {

        eyear.removeAllItems();
        Date d = new Date();
        SimpleDateFormat sdg = new SimpleDateFormat("YYYY");
        String s = sdg.format(d);
        int y = Integer.parseInt(s);
        int z = y++;
        int x = y++;
        int c = y++;
        String k1 = String.valueOf(y);
        String k2 = String.valueOf(z);
        String k3 = String.valueOf(x);
        String k4 = String.valueOf(c);
        eyear.addItem(k2);
        eyear.addItem(k3);
        eyear.addItem(k4);
        eyear.addItem(k1);

        c15.addItem(k2);
        c15.addItem(k3);
        c15.addItem(k4);
        c15.addItem(k1);

        jComboBox4.addItem(k2);
        jComboBox4.addItem(k3);
        jComboBox4.addItem(k4);
        jComboBox4.addItem(k1);

    }

    private void sendmail() {
        String a, b, x, y;

        String rd41 = useremail.getText();

        System.out.println("478");
        a = "pizzashop530@gmail.com";
        System.out.println("7777121212");
        //  a = new String(rd41);
        String[] to = {rd41};

        b = new String("0114974230d");
        x = new String("Details.....!");

        char[] c = staffuserpw.getPassword();
        String m = String.copyValueOf(c);

        y = m;
        NewClass.sendFromGMail(a, b, to, x, y);

    }

    private void settimeslot() {
        try {
            System.out.println("dsds");
            DefaultTableModel dtm = (DefaultTableModel) sctable.getModel();
            int i = dtm.getRowCount();
            for (int j = 0; j < i; j++) {
                String s1 = (String) sctable.getValueAt(j, 0);
                String s2 = (String) sctable.getValueAt(j, 1);
                String s3 = (String) sctable.getValueAt(j, 2);
                String s4 = (String) sctable.getValueAt(j, 3);
                String s5 = (String) sctable.getValueAt(j, 4);
                String s6 = (String) sctable.getValueAt(j, 5);
                String s7 = (String) sctable.getValueAt(j, 6);
                String s8 = (String) sctable.getValueAt(j, 7);
                ResultSet rs = DB.search("select * from day where date='" + s6 + "'");
                if (rs.next()) {
                    System.out.println("dsds1212");
                    String v1 = rs.getString("dayid");
                    ResultSet rs1 = DB.search("select * from time where starttime='" + s4 + "' and endtime='" + s5 + "'");
                    if (rs1.next()) {
                        System.out.println("545");
                        String v2 = rs1.getString("timeid");

                        ResultSet rs2 = DB.search("select * from Timeslot where time_timeid='" + v2 + "' and day_dayid='" + v1 + "'");
                        if (rs2.next()) {
                            System.out.println("fdff");
                            String v3 = rs2.getString("timeslotid");
                            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
                            Date d = new Date();
                            String date = sdf.format(d);
                            System.out.println("dsds");
                            ResultSet rs3 = DB.search("select count(classid) as x from  classregistation");
                            if (rs3.next()) {
                                System.out.println("dsddsff");
                                String v4 = rs3.getString("x");
                                int y = Integer.parseInt(v4);
                                int t = y++;
                                ResultSet dd = DB.search("select * from subject where subjectname='" + s1 + "'");
                                if (dd.next()) {
                                    System.out.println("vvbdsds1212");
                                    String a1 = dd.getString("subjectid");
                                    ResultSet ddq = DB.search("select * from teacher where name='" + s2 + "'");
                                    if (ddq.next()) {
                                        String lk = ddq.getString("teacherid");
                                        System.out.println("1212");
                                        ResultSet cx = DB.search("select * from subject_has_teacher where subject_subjectid='" + a1 + "' and teacher_teacherid='" + lk + "'");
                                        if (cx.next()) {
                                            System.out.println("5456");
                                            ResultSet ts = DB.search("select * from hall_Registration where hallnumber='" + s3 + "'");
                                            if (ts.next()) {
                                                String k = ts.getString("hall_id");
                                                String h = cx.getString("subtea_id");
                                                DB.iud("insert into classregistation value('" + date + "','" + s8 + "','" + s7 + "','" + v3 + "','" + k + "','" + t + "','" + h + "')");
                                                dtm.setRowCount(0);
                                                System.out.println("dsds");
                                            }
                                        }
                                    }
                                }
                            }
                        }

                    }
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invalid Schedule...!");
        }
    }

    private void setclearfield() {
        DefaultTableModel sdf = (DefaultTableModel) table2.getModel();
        DefaultTableModel sdf1 = (DefaultTableModel) table3.getModel();
        sdf.setRowCount(0);
        sdf1.setRowCount(0);
        examdate.setDate(null);
        sete.setText(null);
        jLabel186.setText(null);
//      hn.setText(null);
////
//        st.setText(null);
//        et.setText(null);
    }

    private void setinvoice() {
        DefaultTableModel dtm = (DefaultTableModel) jTable6.getModel();
        Vector v = new Vector();
        v.add(eee1.getText());
        v.add(paidamount.getText());
        v.add(jTextField2.getText());
        v.add(bb.getText());
        //     v.add(w2.getText());
        if (ad.isSelected()) {
            v.add("Institute Fee");
        } else {
            v.add(jComboBox35.getSelectedItem());
        }

        v.add(w3.getText());
        dtm.addRow(v);
    }

    private void setinfoircombo() {
        try {
            hins.removeAll();
            ResultSet rs = DB.search("select * from institute");
            if (rs.first()) {
                String k = rs.getString("companyname");
                hins.addItem(k);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
// throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void activeUser(String name) {
        try {
            cc = name;
            System.out.println("go1");
            ResultSet t = MyDB.search("select * from user where userid='" + name + "'");
            loguserName.setText(null);
            email.setText(null);
            acType.setText(null);
            lastlogin.setText(null);
            if (t.first()) {
                String w = t.getString("staff_staffid");
                System.out.println("go2");
                ResultSet rs = MyDB.search("select * from staff where staffid ='" + w + "'");
                if (rs.next()) {
                    String full = rs.getString("title") + " " + rs.getString("firstname") + " " + rs.getString("middlename") + " " + rs.getString("lastname");
                    loguserName.setText(full);
                    email.setText(rs.getString("nic"));
                    String ff = rs.getString("usertype_userid");
                    ResultSet d = DB.search("select * from usertype where userid='" + ff + "' and status='Active'");
                    if (d.next()) {

                        acType.setText(d.getString("usertype"));
                        String j = d.getString("usertype");
                        setmainiconmessage();
                        if (j.equals("Admin")) {
                            setbackup();

                        }
                    }
                    //returned lastlogin value contains 0 or 1 for am/pm - value type - DATE TIME --> changed to varchar(20) to overcome the error
                    //lastlogin value can be simply replaced with 
                    lastlogin.setText(t.getString("lastlogin"));
                } else {
                    System.out.println("ddd");
                }
            } else {
                System.out.println("ok");
            }
            settypevisible();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setIcon() {
        try {
            ResultSet rs = DB.search("select * from institute where status='Default'");
            if (rs.next()) {
                File f = new File(rs.getString("logo"));
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(mainicon.getWidth(), mainicon.getHeight(), Image.SCALE_SMOOTH);
                mainicon.setIcon(new ImageIcon(img));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setmessagetable() {
        try {
            DefaultTableModel dtm1 = (DefaultTableModel) inputm.getModel();
            dtm1.setRowCount(0);
            ResultSet q = DB.search("select * from message where action='Active'");
            while (q.next()) {

                System.out.println("kkk");
                Vector v = new Vector();
                v.add(true);
                v.add(q.getString("title"));
                v.add(q.getString("message"));
                v.add(q.getString("level"));
                v.add(q.getString("publishoption"));
                dtm1.addRow(v);

            }
        } catch (Exception s) {
            s.printStackTrace();
        }
    }

    private void taboption() {
        Studenttab.setEnabledAt(2, false);
        userstab.setEnabledAt(2, false);
    }

    private void securityquestion() {
        DefaultTableModel dtm = (DefaultTableModel) questiontable.getModel();
        dtm.setRowCount(0);
        try {
            ResultSet rs = DB.search("select * from securityquestions where status='Active'");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("question"));
                dtm.addRow(v);
            }
            secdelete.setVisible(false);
            secupdate.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchstaff() {
        try {
            ResultSet rs = DB.search("select * from staff where nic='" + xx2.getText() + "'");
            if (rs.next()) {
                v4.setText("" + rs.getString("title") + " " + rs.getString("firstname") + " " + rs.getString("middlename") + " " + rs.getString("lastname"));

                v12.setText(rs.getString("dob"));
                v11.setText(rs.getString("gender"));
                File f = new File(rs.getString("img"));
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(searchstaffimg.getWidth(), searchstaffimg.getHeight(), Image.SCALE_SMOOTH);
                searchstaffimg.setIcon(new ImageIcon(img));
                upstaffpath = rs.getString("img");
                v1.setText("" + rs.getString("title") + " " + rs.getString("firstname") + " " + rs.getString("middlename") + " " + rs.getString("lastname"));

                v2.setText(rs.getString("dob"));
                v3.setText(rs.getString("gender"));
                jLabel399.setText(rs.getString("nic"));
                img = img.getScaledInstance(jLabel427.getWidth(), jLabel427.getHeight(), Image.SCALE_SMOOTH);
                jLabel427.setIcon(new ImageIcon(img));

                jComboBox3.setSelectedItem(rs.getString("title"));
                aa1.setText(rs.getString("firstname"));
                aa2.setText(rs.getString("middlename"));
                aa3.setText(rs.getString("lastname"));
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");

                z2.setDate(sdf.parse(rs.getString("dob")));
                z3.setText(rs.getString("staffid"));
                String s11 = rs.getString("gender");
                if (s11 == "male") {
                    ss1.setSelected(true);
                    ss2.setSelected(false);
                } else if (s11 == "female") {
                    ss2.setSelected(true);
                    ss1.setSelected(false);

                }

                jTextField3.setText(rs.getString("nic"));
                img = img.getScaledInstance(z4.getWidth(), z4.getHeight(), Image.SCALE_SMOOTH);
                z4.setIcon(new ImageIcon(img));

                String s1 = rs.getString("staffid");
                ResultSet r = DB.search("select * from staffcontact where staff_staffid='" + s1 + "'");
                if (r.next()) {
                    v15.setText(r.getString("mobileno"));
                    v16.setText(r.getString("landno"));
                    jLabel400.setText(r.getString("email"));
                    v18.setText(r.getString("other"));

                    v7.setText(r.getString("mobileno"));
                    v8.setText(r.getString("landno"));
                    v9.setText(r.getString("email"));
                    v10.setText(r.getString("other"));

                    p1.setText(r.getString("mobileno"));
                    p2.setText(r.getString("landno"));
                    p3.setText(r.getString("email"));
                    p4.setText(r.getString("other"));

                    ResultSet r1 = DB.search("select * from staffaddress where staff_staffid='" + s1 + "'");
                    if (r1.next()) {
                        c1.setText(r1.getString("line1"));
                        c2.setText(r1.getString("line2"));
                        c3.setText(r1.getString("line3"));

                        jLabel411.setText(r1.getString("line1"));
                        jLabel412.setText(r1.getString("line2"));
                        jLabel414.setText(r1.getString("line3"));

                        p5.setText(r1.getString("line1"));
                        p6.setText(r1.getString("line2"));
                        p7.setText(r1.getString("line3"));

                        ResultSet re = DB.search("select * from user where staff_staffid='" + s1 + "'");
                        if (re.next()) {

                            jLabel403.setText(re.getString("status"));
                            jLabel406.setText(re.getString("logstate"));
                            String g = rs.getString("usertype_userid");

                            jLabel111.setText(re.getString("username"));
                            jLabel297.setText(re.getString("status"));
                            jLabel110.setText(re.getString("logstate"));

                            jComboBox1.setSelectedItem(re.getString("status"));

                            ResultSet re1 = DB.search("select * from usertype where userid='" + g + "'");
                            if (re1.next()) {
                                jLabel404.setText(re1.getString("usertype"));
                                v6.setText(re1.getString("usertype"));
                                jComboBox2.setSelectedItem(re1.getString("usertype"));

                            }
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                clearfield();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void teachersearch() {
        try {
            ResultSet rs = DB.search("select * from teacher where NIC_number='" + tid.getText() + "'");
            if (rs.next()) {
                m1.setText(rs.getString("name"));
                jComboBox31.setSelectedItem(rs.getString("status"));
                newpath1 = rs.getString("img");
                File f = new File(rs.getString("img"));
                Image img = ImageIO.read(f);
                updateteacher = rs.getString("img");
                jComboBox6.setSelectedItem(rs.getString("title"));
                img = img.getScaledInstance(q1.getWidth(), q1.getHeight(), Image.SCALE_SMOOTH);
                q1.setIcon(new ImageIcon(img));
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
                m2.setDate(sdf.parse(rs.getString("dob")));
                String d = rs.getString("teacherid");
                zz5.setText(rs.getString("deduction"));
                ResultSet rs1 = DB.search("select * from tcontact where teacher_teacherid='" + d + "'");
                if (rs1.next()) {
                    zz4.setText(rs1.getString("tp"));
                    // zz5.setText(rs1.getString("land"));
                    zz6.setText(rs1.getString("email"));
                    ResultSet rs2 = DB.search("select * from taddress where teacher_teacherid='" + d + "'");
                    if (rs2.next()) {
                        zz1.setText(rs2.getString("city"));
                        zz2.setText(rs2.getString("street"));
                        zz3.setText(rs2.getString("no"));
                        searchteachersubject();
                        addallsubjects();
                    }
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "Invalid data...!");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchteachersubject() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from teacher where NIC_number='" + tid.getText() + "'");
            if (rs.next()) {
                String s1 = rs.getString("teacherid");
                System.out.println("oooo13");
                ResultSet rs1 = DB.search("select * from subject_has_teacher where teacher_teacherid='" + s1 + "' and status='Active'");

                System.out.println("rrrrrrrr");
                while (rs1.next()) {
                    System.out.println("asa");
                    String s11 = rs1.getString("subject_subjectid");
                    ResultSet r1 = DB.search("select * from subject where subjectid='" + s11 + "' and status='Active'");
                    if (r1.next()) {
                        Boolean b = false;
                        System.out.println("hhh");
                        DefaultTableModel dtmx = (DefaultTableModel) jTable1.getModel();
                        int i = dtmx.getRowCount();

                        k:
                        for (int j = 0; j < i; j++) {
                            String e = (String) jTable1.getValueAt(j, 1);
                            if (e.equals(s1)) {
                                System.out.println(true);
                                b = true;

                            } else {
                                b = false;
                                System.out.println(false);

                            }

                        }
                        if (b == false) {
                            System.out.println("ccccdsd");
                            String s2 = r1.getString("subjectname");
                            System.out.println(">0");
                            DefaultTableModel ed = (DefaultTableModel) jTable1.getModel();
                            Vector v = new Vector();
                            v.add(true);
                            v.add(s11);
                            v.add(s2);
                            ed.addRow(v);
                            System.out.println("add");
                        }
                    } else {
                        System.out.println("dsd");
                    }

                }

            } else {
                System.out.println("nooo");
                ResultSet r3 = DB.search("select * from subject where status='Active'");
                if (r3.next()) {
                    String s2 = r3.getString("subjectname");
                    System.out.println(">0");
                    DefaultTableModel ed = (DefaultTableModel) jTable1.getModel();
                    Vector v = new Vector();
                    v.add(true);
                    v.add(r3.getString("subjectid"));
                    v.add(s2);
                    ed.addRow(v);
                    System.out.println("add");
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addallsubjects() {

        try {
            ResultSet rs = DB.search("select * from subject where status='Active'");
            while (rs.next()) {
                Boolean b = true;
                String s1 = rs.getString("subjectid");
                String s2 = rs.getString("subjectname");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                int i = dtm.getRowCount();
                s:
                for (int j = 0; j < i; j++) {
                    String e = (String) jTable1.getValueAt(j, 1);
                    if (e.equals(s1)) {
                        System.out.println(true);
                        b = true;
                        break s;

                    } else {
                        b = false;
                        System.out.println(false);

                    }

                }

                if (b == false) {
                    Vector v = new Vector();

                    v.add(b);
                    v.add(s1);
                    v.add(s2);
                    dtm.addRow(v);

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateteacher() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-DD");
            String d = sdf.format(m2.getDate());
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int i = dtm.getRowCount();
            System.out.println("lll");
            ResultSet q = DB.search("select * from teacher where NIC_number='" + tid.getText() + "'");
            if (q.next()) {
                System.out.println("lldsdsl");
                String s1 = q.getString("teacherid");
                //   DB.iud("delete from subject_has_teacher  where teacher_teacherid='" + s1 + "'");

                for (int j = 0; j < i; j++) {
                    Boolean a = (Boolean) jTable1.getValueAt(j, 0);
                    String a2 = (String) jTable1.getValueAt(j, 1);
                    String a3 = (String) jTable1.getValueAt(j, 2);
                    ResultSet f = DB.search("select count(subtea_id) as x from subject_has_teacher");
                    if (f.next()) {
                        System.out.println("llldsddsd");
                        String y = f.getString("x");
                        int r = Integer.parseInt(y);
                        r++;
                        System.out.println(a);

                        ResultSet q1 = DB.search("select * from subject_has_teacher where subject_subjectid='" + a2 + "' and teacher_teacherid='" + s1 + "' ");
                        if (q1.next()) {
                            String as = q1.getString("subtea_id");
                            if (a == true) {
                                System.out.println("123434");
                                DB.iud("update subject_has_teacher set status='Active' where subtea_id='" + as + "'");
                                System.out.println("6543");
                            } else {
                                DB.iud("update subject_has_teacher set status='Inactive' where subtea_id='" + as + "'");

                            }

                        } else {
                            if (a == true) {
                                System.out.println("123434");
                                DB.iud("insert into subject_has_teacher value('" + a2 + "','" + s1 + "','" + r + "','Active')");
                                System.out.println("6543");
                            }

                        }

                    }
                }

                DB.iud("update teacher set status='" + jComboBox31.getSelectedItem() + "',title='" + jComboBox6.getSelectedItem() + "',name='" + m1.getText() + "' ,dob='" + d + "' ,img='" + newpath1 + "'where teacherid='" + s1 + "' ");
                DB.iud("update taddress set city='" + zz1.getText() + "',street='" + zz2.getText() + "' ,no='" + zz3.getText() + "' where teacher_teacherid='" + tid.getText() + "'");
                DB.iud("update tcontact set tp='" + zz4.getText() + "',land='" + zz5.getText() + "' ,email='" + zz6.getText() + "'where teacher_teacherid='" + tid.getText() + "'");
                clearfield();
                addallsubject();
            } else {
                JOptionPane.showMessageDialog(rootPane, "NIC Number Invalid....!");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void visiblefalse() {

    }

    private void updatestream() {
        try {
            String a1 = rstreamid.getText();
            String a2 = rstreamname.getText();
            String a3 = (String) rstreamlevel.getSelectedItem();
            String a4 = (String) ssactive.getSelectedItem();

            DB.iud("Update stream set stream='" + a2 + "',level='" + a3 + "',status='" + a4 + "' where streamid='" + a1 + "'");
            System.err.println("eeee");

            newsubjecttable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setbackup() {
        try {
            Date d = new Date();

            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String date = sdf.format(d);
            ResultSet rs = DB.search("select * from backup where date='" + date + "'");
            if (rs.next()) {

            } else {

                //String path="C:\\Program Files (x86)\\MySQL\\MySQL Server 5.5\\bin\\mysqldump.exe";
                String username = "root";
                String pass = "123";
                String fpath = "F:/java/abc" + System.currentTimeMillis() + ".sql";
                String db = "assesment";
                try {
                    //Runtime.getRuntime().exec(path+"-u"+username+"-p "+pass+"-B"+db+"-r"+fpath);
                    String executeCmd = "C:\\Program Files (x86)\\MySQL\\MySQL Server 5.1\\bin\\mysqldump.exe" + " -u " + username + " -p" + pass + " -B " + db + " -r " + fpath;
                    Runtime.getRuntime().exec(executeCmd);
                    // JOptionPane.showMessageDialog(this,"ok");
                    ResultSet y = DB.search("select * from institute where status='Default'");
                    if (y.first()) {
                        String s1 = y.getString("idcompany");
                        System.out.println("setbackup");
                        DB.iud("insert into backup values('" + date + "','success','" + s1 + "')");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setexamteacher() {
        try {
            ResultSet rs = DB.search("select * from teacher where status='Active'");
            DefaultTableModel dtm = (DefaultTableModel) table1.getModel();

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("name"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setclasstypetotable() {

        try {
            setstudents s = new setstudents(this, true);
            s.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void searchstudentdata() {
        String s1 = serchsid.getText();
        System.out.println("s1");
        try {
            ResultSet rs = DB.search("select * from student where studentid='" + s1 + "'");
            if (rs.next()) {
                String z1 = rs.getString("firstname");
                String z2 = rs.getString("middlename");
                String z3 = rs.getString("lastname");
                String full = z1 + " " + z2 + " " + z3;

                sa1.setText(full);
                sb1.setText(full);
                sc11.setText(z1);
                sc12.setText(z2);
                sc13.setText(z3);
                sa11.setText(full);

                String zb = rs.getString("nic");
                sa2.setText(zb);
                sb2.setText(zb);
                sc2.setText(zb);
                sa12.setText(zb);

                String z5 = rs.getString("img");
                studentupdate = z5;
                File f = new File(z5);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(sa3.getWidth(), sa3.getHeight(), Image.SCALE_SMOOTH);
                sa3.setIcon(new ImageIcon(img));
                img = img.getScaledInstance(sb3.getWidth(), sb3.getHeight(), Image.SCALE_SMOOTH);
                sb3.setIcon(new ImageIcon(img));
                img = img.getScaledInstance(sc3.getWidth(), sc3.getHeight(), Image.SCALE_SMOOTH);
                sc3.setIcon(new ImageIcon(img));
                String z6 = rs.getString("dateofbirth");
                sa4.setText(z6);
                sb4.setText(z6);
                SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");

                //sc4.setDate(sdf.parse(rs.getString("dateofbirth")));
                String z7 = rs.getString("gender");
                sa5.setText(z7);
                sb5.setText(z7);
                if (z7.equals("male")) {
                    sc51.setSelected(true);
                } else {
                    sc52.setSelected(true);

                }
                String z8 = rs.getString("nationality");
                sa6.setText(z8);
                String z9 = rs.getString("religion");
                sa7.setText(z9);
                String k1 = rs.getString("saddress_addressid");
                String k2 = rs.getString("examyear");
                a15.setText(k2);
                jLabel209.setText(k2);
                jComboBox4.setSelectedItem(k2);
                String u1 = rs.getString("scontact_contactid");
                c15.setSelectedItem(k2);
                dsd.setText(k2);
                ResultSet t = DB.search("select * from saddress where addressid='" + k1 + "'");
                if (t.next()) {
                    String z10 = t.getString("city");
                    String z11 = t.getString("street");
                    String z12 = t.getString("no");
                    String z13 = t.getString("zone");
                    String z14 = t.getString("country");
                    a11.setText(z10);
                    a12.setText(z11);
                    a13.setText(z12);
                    a14.setText(z13);
                    a15.setText(z14);

                    b10.setText(z10);
                    b11.setText(z11);
                    b12.setText(z12);
                    a13.setText(z13);

                    c10.setText(z10);
                    c11.setText(z11);
                    c12.setText(z12);
                    c13.setSelectedItem(z13);
                    c14.setSelectedItem(z14);

                    ResultSet t1 = DB.search("select * from scontact where contactid='" + u1 + "'");
                    if (t1.next()) {
                        String z15 = t1.getString("tp");
                        String z16 = t1.getString("ptn");
                        String z17 = t1.getString("email");
                        ra1.setText(z15);
                        rb1.setText(z15);
                        rc1.setText(z15);
                        ra2.setText(z16);
                        rb2.setText(z16);
                        rc2.setText(z16);
                        ra3.setText(z17);
                        rb3.setText(z17);
                        rc3.setText(z17);

                        //  String j = t4.getString("classregistation_classid");
                        ResultSet a = DB.search("select * from student_has_classregistation where student_studentid='" + s1 + "' and status='Active'");

                        while (a.next()) {

                            String jj = a.getString("classregistation_classid");
                            ResultSet a1 = DB.search("select * from classregistation where classid='" + jj + "' ");

                            if (a1.next()) {
                                String x = a1.getString("type");
                                String as = a1.getString("subject_has_teacher_subtea_id");

                                ResultSet h1 = DB.search("select * from subject_has_teacher where subtea_id='" + as + "'  ");
                                if (h1.next()) {
                                    String ks = h1.getString("subject_subjectid");
                                    String ms = h1.getString("teacher_teacherid");
                                    System.out.println(ms);
                                    ResultSet h = DB.search("select * from teacher where teacherid='" + ms + "'  ");
                                    if (h.next()) {
                                        //String bb = h.getString("subject_subjectname");

                                        // String tij = a.getString("subject_subjectname");
                                        DefaultTableModel fu = (DefaultTableModel) studentsub.getModel();
                                        DefaultTableModel fu1 = (DefaultTableModel) jTable3.getModel();
                                        DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();

                                        Vector v = new Vector();
                                        Vector v1 = new Vector();
                                        String tr = h.getString("name");
                                        System.out.println(tr);
                                        String bb = null;
                                        ResultSet rj = DB.search("select * from subject where subjectid='" + ks + "'");
                                        if (rj.next()) {
                                            bb = rj.getString("subjectname");

                                            System.out.println(bb);
                                            v.add(bb);
                                        }
                                        v.add(tr);
                                        v1.add(true);
                                        v1.add(bb);
                                        v1.add(tr);
                                        v1.add(x);
                                        fu.addRow(v);
                                        fu1.addRow(v);
                                        fu2.addRow(v1);
                                        // setupdatesubject();

                                    }
                                }

                            }
                        }
                    }

                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Data...!");
                clearfield();
                setfield();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updatestudent() {
        try {
            ResultSet rs = DB.search("select * from student where studentid='" + sc2.getText() + "'");

            if (rs.next()) {
                String stid = rs.getString("saddress_addressid");
                String scon = rs.getString("scontact_contactid");
                String a1 = sc11.getText();
                String a2 = sc12.getText();
                String a3 = sc13.getText();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String sdate = sdf.format(sc4.getDate());
                String gender;
                if (sc51.isSelected()) {
                    gender = "male";

                } else {

                    gender = "female";
                }
                String nic = sc2.getText();
                DB.iud("Update student set examyear='" + c15.getSelectedItem() + "',img='" + studentupdate + "',firstname='" + a1 + "',middlename='" + a2 + "',lastname='" + a3 + "',dateofbirth='" + sdate + "',gender='" + gender + "' where studentid='" + nic + "'");
                DB.iud("update saddress set city='" + c10.getText() + "',street='" + c11.getText() + "',no='" + c12.getText() + "',zone='" + c13.getSelectedItem() + "',country='" + c14.getSelectedItem() + "' where addressid='" + stid + "'");
                DB.iud("update scontact set tp='" + rc1.getText() + "',ptn='" + rc2.getText() + "',email='" + rc3.getText() + "' where contactid='" + scon + "'");

                DefaultTableModel dtm = (DefaultTableModel) MainGUI.setaction.getModel();
                int i = setaction.getRowCount();
                for (int j = 0; j < i; j++) {
                    boolean s1 = (boolean) dtm.getValueAt(j, 0);
                    String s2 = (String) dtm.getValueAt(j, 1);
                    String s3 = (String) dtm.getValueAt(j, 2);
                    String s4 = (String) dtm.getValueAt(j, 3);
                    if (s1 == false) {
                        ResultSet h = DB.search("select * from subject where subjectname='" + s2 + "'");
                        if (h.next()) {
                            String sn = h.getString("subjectid");
                            ResultSet h1 = DB.search("select * from teacher where name='" + s3 + "'");
                            if (h1.next()) {
                                String t = h1.getString("teacherid");
                                ResultSet h2 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sn + "' and teacher_teacherid='" + t + "'");
                                if (h2.next()) {
                                    String t2 = h2.getString("subtea_id");
                                    ResultSet h3 = DB.search("select * from classregistation where subject_subjectid='" + sn + "' and subject_has_teacher_subtea_id='" + t2 + "'");
                                    if (h3.next()) {
                                        String t3 = h3.getString("classid");

                                        DB.iud("update student_has_classregistation set status='Inactive' where student_studentid='" + nic + "' and classregistation_classid='" + t3 + "'");
                                        DB.iud("update student_has_subject set status='Inactive' where student_studentid='" + nic + "' and subject_subjectid='" + sn + "'");
                                    }

                                }

                            }

                        }
                    } else {
                        ResultSet h = DB.search("select * from subject where subjectname='" + s2 + "'");
                        if (h.next()) {
                            String sn = h.getString("subjectid");
                            ResultSet h1 = DB.search("select * from teacher where name='" + s3 + "'");
                            if (h1.next()) {
                                String t = h1.getString("teacherid");
                                ResultSet h2 = DB.search("select * from subject_has_teacher where subject_subjectid='" + sn + "' and teacher_teacherid='" + t + "'");
                                if (h2.next()) {
                                    String t2 = h2.getString("subtea_id");
                                    ResultSet h3 = DB.search("select * from classregistation where subject_subjectid='" + sn + "' and subject_has_teacher_subtea_id='" + t2 + "'");
                                    if (h3.next()) {
                                        String t3 = h3.getString("classid");
                                        ResultSet h4 = DB.search("select * from student_has_classregistation where status='Active' and student_studentid='" + nic + "' and classregistation_classid='" + t3 + "' ");
                                        //String
                                        if (h4.next()) {
                                            DB.iud("update student_has_classregistation set status='Active' where student_studentid='" + nic + "' and classregistation_classid='" + t3 + "'");
                                            DB.iud("update student_has_subject set status='Active' where student_studentid='" + nic + "' and subject_subjectid='" + sn + "'");
                                        } else {

                                            ResultSet qa = DB.search("select count(studentsubjectid) as x from student_has_classregistation");
                                            if (qa.next()) {
                                                String dd = qa.getString("x");
                                                int o = Integer.parseInt(dd);
                                                o++;
                                                ResultSet h6 = DB.search("select * from student_has_classregistation where status='Active' and student_studentid='" + nic + "' and classregistation_classid='" + t3 + "' ");
                                                if (h6.next()) {

                                                } else {
                                                    DB.iud("insert into student_has_classregistation values('" + nic + "','" + t3 + "','Active','" + o + "')");
                                                    ResultSet qa1 = DB.search("select count(ssid) as x from student_has_subject");
                                                    if (qa1.next()) {
                                                        String ddd = qa1.getString("x");
                                                        int o1 = Integer.parseInt(ddd);
                                                        o1++;

                                                        DB.iud("insert into student_has_subject values('" + nic + "','" + sn + "','" + o1 + "','Active')");
                                                    }
                                                }
                                            }
                                        }
                                    } else {

                                    }

                                }

                            }

                        }

                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setupdatesubject() {
        try {
            DefaultTableModel fu2 = (DefaultTableModel) setaction.getModel();

            fu2.setRowCount(0);
            System.out.println("123");
            System.out.println("444");
            ResultSet rs = DB.search("select * from stream where stream='" + jComboBox7.getSelectedItem() + "' and status='Active'");
            while (rs.next()) {
                System.out.println("11");
                String sid = rs.getString("streamid");
                ResultSet rs1 = DB.search("select * from stream_has_subject where stream_streamid='" + sid + "' and status='Active'");
                while (rs1.next()) {
                    System.out.println("22");
                    String s1 = rs1.getString("subject_subjectid");
                    ResultSet rs2 = DB.search("select * from subject where subjectid='" + s1 + "' and status='Active'");
                    while (rs2.next()) {
                        System.out.println("33");
                        String s2 = rs2.getString("subjectname");
                        ResultSet rs3 = DB.search("select * from subject_has_teacher where subject_subjectid='" + s1 + "' ");
                        while (rs3.next()) {
                            System.out.println("dfdfdf");
                            String cs = rs3.getString("subtea_id");
                            String s3 = rs3.getString("teacher_teacherid");
                            ResultSet rs4 = DB.search("select * from teacher where teacherid='" + s3 + "' and status='Active'");
                            while (rs4.next()) {
                                String s4 = rs4.getString("name");

                                ResultSet rsq = DB.search("select * from student_has_classregistation where student_studentid='" + sc2.getText() + "' and status='Active'");
                                if (rsq.next()) {

                                    ResultSet rsq1 = DB.search("select * from classregistation where subject_subjectid='" + s1 + "' and subject_has_teacher_subtea_id='" + cs + "' and status='Active'");
                                    if (rsq1.next()) {

                                        String s5 = rsq1.getString("type");

                                        DefaultTableModel fu3 = (DefaultTableModel) setaction.getModel();

                                        Vector v = new Vector();

                                        v.add(true);
                                        v.add(s2);
                                        v.add(s4);
                                        v.add(s5);

                                        fu3.addRow(v);

                                    }
                                }

                            }
                        }
                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setexam() {
        try {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void settypevisible() {
        Hometab.setEnabledAt(0, false);
        Hometab.setEnabledAt(1, false);
        Hometab.setEnabledAt(2, false);
        Hometab.setEnabledAt(3, false);
        Hometab.setEnabledAt(4, false);
        Hometab.setEnabledAt(5, false);
        Hometab.setEnabledAt(6, false);
        System.out.println("sssssssssssssssssssssssasasa");
        try {
            ResultSet rs = DB.search("select * from usertype where usertype='" + acType.getText() + "'");
            System.out.println(acType.getText());
            if (rs.next()) {
                String id = rs.getString("userid");
                System.out.println(id);
                ResultSet rs1 = DB.search("select * from usertype_has_visiblearea where usertype_userid='" + id + "' and status='Active'");
                while (rs1.next()) {
                    String id1 = rs1.getString("visiblearea_areaid");

                    //String name = rs2.getString("visiblearea");
                    int f = Integer.parseInt(id1);
                    System.out.println(f);
                    f--;
                    Hometab.setEnabledAt(f, true);

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void viewstate() {
        try {
            ResultSet rs = DB.search("select * from user where logstate='loged'");
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("userid"));
                ResultSet r = DB.search("select * from staff where staffid='" + rs.getString("staff_staffid") + "'");
                if (r.next()) {
                    v.add(r.getString("firstname") + " " + r.getString("lastname"));

                }

                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setsyear() {
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY");
        String date = sdf.format(d);
        int i = Integer.parseInt(date);
        i = i - 5;
        for (int j = 0; j < 10; j++) {
            int k = i + j;
            System.out.println(k);
            jComboBox36.addItem("" + k);
            // jComboBox3.addItem("" + k);
        }
    }

}
